(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    820033,      16787]
NotebookOptionsPosition[    819594,      16770]
NotebookOutlinePosition[    820046,      16788]
CellTagsIndexPosition[    820003,      16785]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Copyright", " ", 
    RowBox[{"(", "C", ")"}], " ", "2021", " ", "Martijn", " ", "Hidding"}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"DiffExp", " ", "is", " ", "free", " ", 
     RowBox[{"software", ":", " ", 
      RowBox[{"you", " ", "can", " ", "redistribute", " ", "it", " ", 
       RowBox[{"and", "/", "or"}], " ", "modify", "\n", "it", " ", "under", 
       " ", "the", " ", "terms", " ", "of", " ", "the", " ", "GNU", " ", 
       "General", " ", "Public", " ", "License", " ", "as", " ", "published", 
       " ", "by", "\n", "the", " ", "Free", " ", "Software", " ", 
       "Foundation"}]}]}], ",", " ", 
    RowBox[{
    "either", " ", "version", " ", "3", " ", "of", " ", "the", " ", 
     "License"}], ",", " ", 
    RowBox[{"or", "\n", 
     RowBox[{"(", 
      RowBox[{"at", " ", "your", " ", "option"}], ")"}], " ", "any", " ", 
     "later", " ", 
     RowBox[{
     "version", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "This"}], 
     " ", "program", " ", "is", " ", "distributed", " ", "in", " ", "the", 
     " ", "hope", " ", "that", " ", "it", " ", "will", " ", "be", " ", 
     "useful"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"but", " ", "WITHOUT", " ", "ANY", " ", "WARRANTY"}], ";", " ", 
     RowBox[{
     "without", " ", "even", " ", "the", " ", "implied", " ", "warranty", " ",
       "of", "\n", "MERCHANTABILITY", " ", "or", " ", "FITNESS", " ", "FOR", 
      " ", "A", " ", "PARTICULAR", " ", 
      RowBox[{"PURPOSE", ".", " ", "See"}], " ", "the", "\n", "GNU", " ", 
      "General", " ", "Public", " ", "License", " ", "for", " ", "more", " ", 
      RowBox[{
      "details", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "You"}], 
      " ", "should", " ", "have", " ", "received", " ", "a", " ", "copy", " ",
       "of", " ", "the", " ", "GNU", " ", "General", " ", "Public", " ", 
      "License", "\n", "along", " ", "with", " ", "this", " ", 
      RowBox[{"program", ".", " ", "If"}], " ", "not"}]}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "<", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"www", ".", "gnu", ".", "org"}], "/", "licenses"}], "/"}], 
      ">", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "software", " ", "is", " ", "maintained", " ", "on", " ", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"gitlab", ".", "com"}], "/", "hiddingm"}], "/", "diffexp"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"BeginPackage", "[", "\"\<DiffExp`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Loading DiffExp version 1.0.8\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<For questions, email: martijn.hidding@physics.uu.se\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<For the latest version, see: \
https://gitlab.com/hiddingm/diffexp\>\"", "]"}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Epsilon]", "::", "usage"}], "=", 
     "\"\<Symbol representing the dimensional regulator.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eps", "::", "usage"}], "=", 
    "\"\<Alternative symbol for the dimensional regulator, which is converted \
into \[Epsilon].\>\""}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Logx", "::", "usage"}], "=", 
     "\"\<Symbol representing Log[x].\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]p", "::", "usage"}], "=", 
     "\"\<Symbol representing HeavisideTheta[x].\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]m", "::", "usage"}], "=", 
     "\"\<Symbol representing HeavisideTheta[-x].\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CurrentConfiguration", "::", "usage"}], "=", 
     "\"\<CurrentConfiguration[] returns the current configuration \
values.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntegrateSystem", "::", "usage"}], "=", 
     "\"\<\nIntegrateSystem[line_List] can be used to obtain the general \
series solutions of the integrals along the line given in the second \
argument. \\n\nIntegrateSystem[bcs_List, line_List] can be used to obtain the \
series solutions of the integrals along the line given in the second \
argument. The first argument should be a set of boundary conditions, obtained \
as the output of the function PrepareBoundaryConditions[...], or the output \
of TransportTo[...].\n\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LoadConfiguration", "::", "usage"}], "=", 
     "\"\<LoadConfiguration[l_List] can be used to parse configuration \
options to DiffExp. The configuration options should be given in the form \
\\\"option -> value\\\". Values that are omitted are assigned a standard \
value. \\n \n\nThe possible options are: AccuracyGoal, ChopPrecision, \
DeltaPrescriptions, DivisionOrder, EpsilonOrder, ExpansionOrder, \
IntegrationStrategy, LineParameter, LogFile, MatrixDirectory, \
RadiusOfConvergence, SegmentationStrategy, UseMobius, UsePade, Variables, \
WorkingPrecision, Verbosity.\n\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UpdateConfiguration", "::", "usage"}], "=", 
     "\"\<UpdateConfiguration[l_List] or UpdateConfiguration[l__Rule] can be \
used to update configuration options. The configuration options should be \
given in the form \\\"option -> value\\\". See LoadConfiguration[...] for \
more information.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PrepareBoundaryConditions", "::", "usage"}], "=", 
     "\"\<PrepareBoundaryConditions[bcs_List, line_List] can be used to \
prepare boundary conditions for use with the functions IntegrateSystem[...] \
or TransportTo[...]. The first argument should contain the boundary \
conditions, while the second argument should contain a point or line \
specifying an asymptotic limit in phase-space, in which the boundary \
conditions are given. DiffExp recognizes whether the argument is a line or a \
point, by checking whether it depends on the line parameter. The boundary \
conditions can be given in three ways: \\n\n\n1. A closed-form expression in \
\[Epsilon]. \\n\n2. A list of coefficients for each order in \[Epsilon], \
where the first list element corresponds to order \!\(\*SuperscriptBox[\(\
\[Epsilon]\), \(0\)]\). \\n\n3. The string \\\"?\\\", which instructs DiffExp \
not to consider boundary conditions for the integral. This option is useful \
for when dealing with coupled integrals in an asymptotic limit, where the \
boundary conditions for a subset of the integrals may fix the remaining ones.\
\n\nIf the boundary conditions contain multivalued functions they should be \
provided in such a way that the positive direction of the line across which \
the limit is taken points along the standard (Mathematica branch) of the \
multivalued function. For more information, please see the paper.\n\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ToPiecewise", "::", "usage"}], "=", 
     "\"\<ToPiecewise[segmentdata_List, pade_:False] takes as input the \
output of the function TransportTo[...], given that the latter has been run \
with the argument save_ equal to True. The output of ToPiecewise[...] is an \
(n\[Cross]m)-matrix, where n is the number of basis integrals and where m is \
equal to the value of the option EpsilonOrder plus one. Each entry is a \
Piecewise mathematica object, which is a function of the line parameter of \
the line that was given to TransportTo[...]. The output of ToPiecewise may be \
used for numerical evaluation of the results at arbitrary points along the \
line, or for plotting purposes. \\n\n\nThe argument pade_ determines whether \
the Piecewise functions are composed out of the Pad\[EAcute] approximants of \
the solutions along the line segments, or out of the series solutions. If \
TransportTo[...] was called with the configuration option UsePade set to \
False, there should not be a significant difference in precision by enabling \
Pad\[EAcute] approximants here. \>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TransportTo", "::", "usage"}], "=", 
     "\"\<TransportTo[bcs_List, line_List, to_:1, save_:False] performs the \
transportation of boundary conditions to arbitrary (real-valued) points in \
the phase-space of kinematic invariants and masses. The first argument should \
be a set of boundary conditions, obtained as the ouput of the function \
PrepareBoundaryConditions[...], or the output of TransportTo[...]. If the \
second argument is a line (i.e. it depends on the line parameter), the \
results will be transported to the endpoint (line /. x \[Rule] to). If the \
second argument argument is a point instead, DiffExp will consider the line \
\\\"x*line + (1-x)*start\\\", where start is the point at which the boundary \
conditions were prepared using PrepareBoundaryConditions[...]. The argument \
save_ determines whether the expansions along individual line segments should \
be saved and returned in the output. If it is set to True, the output of \
TransportTo[...] may be passed to the function ToPiecewise[...], which \
combines the results of all line segments together into a single function. \
\\n\n\nThe output of TransportTo[...] depends on the options with which \
DiffExp is configured. If the argument save_ is set to False, the output is a \
list consisting of the form {point, results, errors}. The first list element \
is the point in phase-space at which the results were evaluated. The second \
and third element of the list are both (n\[Cross]m)-matrices, where n is the \
number of basis integrals and where m is equal to the value of the option \
EpsilonOrder plus one. If the argument save_ is set to True, the output of \
TransportTo[...] has instead the form {{point, results, errors}, \
segmentdata}, where segment data is a list which encodes the expansions \
obtained along individual line segments.\n\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChopPrecision", "::", "usage"}], "=", 
     "\"\<Indicates the number off zeros after the decimal point after which \
terms should be set to 0 in intermediate computations.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DeltaPrescriptions", "::", "usage"}], "=", 
     "\"\<A list of polynomials in the kinematic invariants and masses, each \
of which should contain an explicit factor \[PlusMinus]I\[Delta]. The zeros \
of the polynomials should describe singularities such as physical threshold \
singularities, or branch points of square roots.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DivisionOrder", "::", "usage"}], "=", 
     "\"\<This option determines the inverse distance to the nearest \
singularity at which the line segments are evaluated, when the predivision \
strategy is used.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EpsilonOrder", "::", "usage"}], "=", 
     "\"\<An integer specifying the highest order in the dimensional \
regulator \[Epsilon] in which the integrals should be computed.\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpansionOrder", "::", "usage"}], "=", 
     "\"\<Specifies the maximum power of the line parameter that should be \
kept in intermediate series expansions. At intermediate steps the expansions \
might be multiplied by poles, and the final results may be provided at a \
lower expansion order.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LineParameter", "::", "usage"}], "=", 
     "\"\<The line parameter used for parsing lines to DiffExp.\>\""}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LogFile", "::", "usage"}], "=", 
     "\"\<Location of a log file on which to write all output of the current \
session.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixDirectory", "::", "usage"}], "=", 
     "\"\<The location of a directory on the file system which contains the \
partial derivative matrices \!\(\*SubsuperscriptBox[\(A\), \(s\), \((k)\)]\). \
The files should be named according to the convention ds_k.m, where s is the \
external scale, and k is the order in \[Epsilon]. A special file d_1.m may be \
provided for a canonical polylogarithmic family, which should contain a \
matrix whose entries are Q-linear combinations of logarithms (the alphabet \
letters.)\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RadiusOfConvergence", "::", "usage"}], "=", 
     "\"\<This option has the effect of rescaling the line parameter of each \
line segment, so that the minimal radius of convergence is given by its \
value. Higher values may help to combat fastly growing series coefficients.\>\
\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SegmentationStrategy", "::", "usage"}], "=", 
     "\"\<This option determines which segmentation strategy is used. The \
possible values are \\\"Dynamic\\\" and \\\"Predivision\\\".\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntegrationStrategy", "::", "usage"}], "=", 
     "\"\<Determines how the differential equations are solved. The possible \
values are \\\"Default\\\", and \\\"VOP\\\". The strategy \\\"VOP\\\" is \
generally a bit slower for solving coupled integrals, but works along \
degenerate lines. Please see the paper for more details.\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UseMobius", "::", "usage"}], "=", 
     "\"\<This option determines whether the line segments are obtained by \
linear transformations or by M\[ODoubleDot]bius transformations.\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UsePade", "::", "usage"}], "=", 
     "\"\<Determines whether Pad\[EAcute] approximants are used while \
transporting boundary conditions.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Verbosity", "::", "usage"}], "=", 
     "\"\<Determines the level of printed output. The default level is 1 and \
the maximum level is 3. When running inside a Mathematica notebook, lower \
verbosity levels are generally recommended. For shell-scripts higher \
verbosity levels might be preferred.\>\""}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Default", " ", "configuration"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DefaultConfiguration", "=", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AccuracyGoal", "\[Rule]", "\"\<?\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<AccuracyGoalValidate\>\"", "\[Rule]", "\"\<Before\>\""}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"ChopPrecision", "\[Rule]", "250"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<CrosscheckLevel\>\"", "\[Rule]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"DeltaPrescriptions", "\[Rule]", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"DivisionOrder", "\[Rule]", "3"}], ",", "\[IndentingNewLine]", 
        RowBox[{"EpsilonOrder", "\[Rule]", "4"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<EstimateError\>\"", "\[Rule]", "\"\<Fast\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ExpansionOrder", "\[Rule]", "50"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<IgnoreIndicialCheck\>\"", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<InvWronskSolver\>\"", "\[Rule]", "\"\<InverseLogx\>\""}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<KeepMatrixExpansions\>\"", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<LinearSolveChopPrecision\>\"", "\[Rule]", "250"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LineParameter", "\[Rule]", "Global`x"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"MatrixDirectory", "\[Rule]", "\"\<\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"RadiusOfConvergence", "\[Rule]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<SaveExpansionsCompress\>\"", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<HomogeneousSolve\>\"", "\[Rule]", "\"\<DontExpand\>\""}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<Parallel\>\"", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"SegmentationStrategy", "\[Rule]", "\"\<Predivision\>\""}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"IntegrationStrategy", "\[Rule]", "\"\<Default\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"UseMobius", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"UsePade", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Variables", "\[Rule]", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Verbosity", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<VerbosityDebug\>\"", "\[Rule]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"WorkingPrecision", "\[Rule]", "500"}]}], 
       "\[IndentingNewLine]", "}"}], "//", "Association"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DiffExpExtensions", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eps", ":=", "\[Epsilon]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CurrentConfiguration", "[", "]"}], ":=", 
     RowBox[{"KeySelect", "[", 
      RowBox[{"DiffExpConfiguration", ",", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
           "AccuracyGoal", ",", "ChopPrecision", ",", "DeltaPrescriptions", 
            ",", "DivisionOrder", ",", "EpsilonOrder", ",", "ExpansionOrder", 
            ",", "LineParameter", ",", "MatrixDirectory", ",", 
            "RadiusOfConvergence", ",", "SegmentationStrategy", ",", 
            "IntegrationStrategy", ",", "UseMobius", ",", "UsePade", ",", 
            "Variables", ",", "Verbosity", ",", "WorkingPrecision"}], 
           "\[IndentingNewLine]", "}"}], ",", "#"}], "]"}], "&"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"ValueQ", "[", "DiffExpConfiguration", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DiffExpConfiguration", "=", "DefaultConfiguration"}], ";"}]}],
      "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FEC", ":=", "DiffExpConfiguration"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ChopPrecisionVal", ":=", 
     RowBox[{"FEC", "[", "ChopPrecision", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LinearSolveChopPrecisionVal", ":=", 
     RowBox[{"FEC", "[", "\"\<LinearSolveChopPrecision\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CrosscheckChopPrecision", ":=", "30"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ExternalScalesVal", ":=", 
     RowBox[{"FEC", "[", "Variables", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LineParameterVal", "=", 
     RowBox[{"FEC", "[", "LineParameter", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x", "=", 
     RowBox[{"FEC", "[", "LineParameter", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MatrixDirectoryVal", ":=", 
     RowBox[{"FEC", "[", "MatrixDirectory", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EpsilonOrderVal", ":=", 
     RowBox[{"FEC", "[", "EpsilonOrder", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FEAccuracyGoal", ":=", 
     RowBox[{"FEC", "[", "AccuracyGoal", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FEWorkingPrecision", ":=", 
     RowBox[{"FEC", "[", "WorkingPrecision", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DeltaPrescriptionsVal", ":=", 
     RowBox[{"FEC", "[", "DeltaPrescriptions", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UseMobiusVal", ":=", 
     RowBox[{"FEC", "[", "UseMobius", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RadiusOfConvergenceVal", ":=", 
     RowBox[{"FEC", "[", "RadiusOfConvergence", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DivisionOrderVal", ":=", 
     RowBox[{"FEC", "[", "DivisionOrder", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"ValueQ", "[", "ExpansionOrderVal", "]"}]}], ",", 
      RowBox[{
       RowBox[{"ExpansionOrderVal", "=", "50"}], ";"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"ValueQ", "[", "MaxCouplingOrder", "]"}]}], ",", 
      RowBox[{
       RowBox[{"MaxCouplingOrder", "=", "1"}], ";"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"ValueQ", "[", "DEqnMatricesFactored", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DEqnMatricesFactored", "=", 
        RowBox[{"Association", "[", 
         RowBox[{"{", "}"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"ValueQ", "[", "DEqnMatricesExpanded", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DEqnMatricesExpanded", "=", 
        RowBox[{"Association", "[", 
         RowBox[{"{", "}"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"ValueQ", "[", "NumIntegrals", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NumIntegrals", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"State", " ", "variables"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AnalyticContinuationFailed", "=", "False"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AnalyticContinuationReplacements", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AnalyticContinuationReplacementsAssociation", "=", 
     RowBox[{"Association", "[", 
      RowBox[{"{", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BenchmarkData", "=", 
     RowBox[{"Association", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CurrentSingularityWasAddedFromSquareRoot", "=", "False"}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CurrentSingularityHasIDeltaPrescription", "=", "False"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DEqnSquareRoots", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MultivaluedFail", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SquareRootPrescriptionsAdded", "[", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", "1"}], "}"}], "&"}], "/@", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Expand", "[", "DEqnSquareRoots", "]"}], ",", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Expand", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"UserDeltaPrescriptions", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"-", 
             RowBox[{"UserDeltaPrescriptions", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "}"}]}]}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UserDeltaPrescriptions", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Constants", " ", "for", " ", "internal", " ", 
     RowBox[{"purposes", ".", " ", "These"}], " ", "should", " ", "normally", 
     " ", "not", " ", "have", " ", "to", " ", "be", " ", 
     RowBox[{"changed", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CrosscheckFlags", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<FrobeniusSolutions\>\"", "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<MatrixDelta\>\"", "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Wronskians\>\"", "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<WronskInv\>\"", "\[Rule]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<PeriodMatrix\>\"", "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GeneralSolutionMatrix\>\"", "\[Rule]", "2"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GeneralSolution\>\"", "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<VariationOfParameters\>\"", "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<SingularityCheck\>\"", "\[Rule]", "0"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CurrCrosscheckFlags", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ISeriesChangeCoefficient", "=", "2"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IMaxLogOrder", "=", 
     RowBox[{"IMaxLogOrderDefault", "=", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ICheckMultivaluedChop", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ICrossCheckPrintResultOrder", "=", "5"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ICrossCheckVerifyResultOrder", "=", "5"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ISafetyDigits", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ISafetyExpansionSubtract", "=", "5"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IExpansionOrdersAveraging", "=", "3"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IExpansionOrderIncrease", "=", "10"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IExpansionOrderDecrease", "=", "10"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IExpansionOrderIncrease2", "=", "25"}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "When", " ", "AccuracyGoalValidate", " ", "is", " ", "set", " ", "to", 
      " ", "\"\<After\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"IDigitsSurplusDecreaseExpansionOrder", "=", "3"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ICurrEvalErrorSeriesDecrease", ":=", 
     RowBox[{
      RowBox[{"Ceiling", "[", 
       RowBox[{"0.7", 
        RowBox[{"(", "MaxCouplingOrder", ")"}]}], "]"}], "+", "2"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IDecreaseOrderByErrorPrecise", "=", "MaxCouplingOrder"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IMinExpansionOrder", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Functions", " ", "for", " ", 
     RowBox[{"printing", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"PrintDebug", "[", "args__", "]"}], "[", "lev_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"lev", "\[LessEqual]", 
        RowBox[{"FEC", "[", "\"\<VerbosityDebug\>\"", "]"}]}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{"Sequence", "@@", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"\"\<   \>\"", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"lev", "-", "1"}], ",", "0"}], "]"}]}], "]"}]}], ",", 
         "\"\<DiffExp Debug: \>\"", ",", "args"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"PrintInfo", "[", "args__", "]"}], "[", "lev_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"lev", "\[LessEqual]", 
        RowBox[{"FEC", "[", "Verbosity", "]"}]}], ",", 
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{"Sequence", "@@", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"\"\<   \>\"", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"lev", "-", "1"}], ",", "0"}], "]"}]}], "]"}]}], ",", 
         "\"\<DiffExp: \>\"", ",", "args"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PrintWarning", "[", "args__", "]"}], ":=", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<DiffExp Warning: \>\"", ",", "args"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ReportError", "[", "mes__", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<DiffExp Error: \>\"", ",", "mes"}], "]"}], ";", 
       RowBox[{"Abort", "[", "]"}], ";"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ReportError", "[", 
      RowBox[{"mes__", ",", "False"}], "]"}], ":=", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<DiffExp Error: \>\"", ",", "mes"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Various", " ", "small", " ", "functions"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "SApply", ",", "SN", ",", "SExpand", ",", "SN", ",", "SSN", ",", 
        "SMultiply", ",", "SEval", ",", "SEval1", ",", "SEval2", ",", 
        "DecreaseSeriesOrderBy", ",", "SeriesCoefficientMinus", ",", 
        "SplitTimes", ",", "ApplyAnalyticContinuation"}], "}"}], ",", 
      "Listable"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AllSameQ", "[", 
      RowBox[{"l_", ",", "b_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "l", "]"}], ">", "0"}], ",", 
       RowBox[{
        RowBox[{"SameQ", "[", "l", "]"}], "&&", 
        RowBox[{
         RowBox[{"l", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "===", "b"}]}], ",", "True"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CA", "=", "ConstantArray"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetCases", "[", 
      RowBox[{"expr_", ",", "case_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"expr", "//", 
        RowBox[{
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"{", "#", "}"}], ",", "case", ",", "Infinity"}], "]"}], 
         "&"}]}], "//", "DeleteDuplicates"}], "//", "Sort"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DependsQ", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"GetCases", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "]"}], ">", "0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ZeroQ", "[", "a_", "]"}], ":=", 
     RowBox[{"a", "===", "0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R", "=", "ReplaceAll"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FirstOrNull", "[", "l_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"l", "===", 
        RowBox[{"{", "}"}]}], ",", "Null", ",", 
       RowBox[{"First", "[", "l", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindPivots", "[", "Matrix_", "]"}], ":=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FirstOrNull", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"#", ",", 
             RowBox[{"a_", "/;", 
              RowBox[{"a", "\[NotEqual]", "0"}]}]}], "]"}], "]"}], "&"}], "/@",
          "Matrix"}], "]"}], ",", "Null"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SplitTimes", "[", "Expr_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Expr", "[", 
         RowBox[{"[", "0", "]"}], "]"}], "===", "Times"}], ",", 
       RowBox[{"List", "@@", "Expr"}], ",", 
       RowBox[{"{", "Expr", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MaxLogxPower", "[", "ex_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"GetCases", "[", 
         RowBox[{
          RowBox[{"ex", "//", "SExpand"}], ",", 
          RowBox[{
           SuperscriptBox["Logx", 
            RowBox[{"k_", ":", "1"}]], "\[RuleDelayed]", "k"}]}], "]"}], ",", 
        "0"}], "]"}], "//", "Max"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LogxCoeff", "[", 
      RowBox[{"Ser_", ",", "Which_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Which", "===", "0"}], ",", 
       RowBox[{"SApply", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "/.", 
            RowBox[{"Logx", "\[Rule]", "0"}]}], ")"}], "&"}], ",", "Ser"}], 
        "]"}], ",", 
       RowBox[{"SApply", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Coefficient", "[", 
            RowBox[{"#", ",", 
             SuperscriptBox["Logx", "Which"]}], "]"}], ")"}], "&"}], ",", 
         "Ser"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LogxCoeffNS", "[", 
      RowBox[{"Ser_", ",", "Which_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Which", "===", "0"}], ",", 
       RowBox[{"Ser", "/.", 
        RowBox[{"Logx", "\[Rule]", "0"}]}], ",", 
       RowBox[{"Coefficient", "[", 
        RowBox[{"Ser", ",", 
         SuperscriptBox["Logx", "Which"]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LogxCoeffList", "[", "Ser_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"maxpow", "=", 
        RowBox[{"MaxLogxPower", "[", "Ser", "]"}]}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"LogxCoeff", "[", 
         RowBox[{"Ser", ",", "ord"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ord", ",", "0", ",", "maxpow"}], "}"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PChop", ":=", 
     RowBox[{
      RowBox[{"Chop", "[", 
       RowBox[{"#", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", 
          RowBox[{"FEC", "[", "ChopPrecision", "]"}]}]]}], "]"}], "&"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LSPChop", ":=", 
     RowBox[{
      RowBox[{"Chop", "[", 
       RowBox[{"#", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", 
          RowBox[{"FEC", "[", "\"\<LinearSolveChopPrecision\>\"", "]"}]}]]}], 
       "]"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CPChop", ":=", 
     RowBox[{
      RowBox[{"Chop", "[", 
       RowBox[{"#", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "CrosscheckChopPrecision"}]]}], "]"}], "&"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IsPoint", "[", "line_", "]"}], ":=", 
     RowBox[{"!", 
      RowBox[{"DependsQ", "[", 
       RowBox[{
        RowBox[{"line", "//", "Values"}], ",", "x"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IsLine", "[", "line_", "]"}], ":=", 
     RowBox[{"!", 
      RowBox[{"IsPoint", "[", "line", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SApply", "[", 
      RowBox[{"f_", ",", "0"}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SApply", "[", 
      RowBox[{"f_", ",", "a_SeriesData"}], "]"}], ":=", 
     RowBox[{"MapAt", "[", 
      RowBox[{"f", ",", "a", ",", "3"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SApply", "[", 
      RowBox[{"f_", ",", "a_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ReportError", "[", 
         RowBox[{
         "\"\<Internal error: SApply is applied to a term that is not a \
series: \>\"", ",", 
          RowBox[{"a", "//", "N"}]}], "]"}], ";"}], "*)"}], 
      RowBox[{"f", "[", "a", "]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SExpand", "[", "0", "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SExpand", "[", "a_SeriesData", "]"}], ":=", 
     RowBox[{"SApply", "[", 
      RowBox[{
       RowBox[{"PChop", "@*", "Expand"}], ",", "a"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SExpand", "[", "a_", "]"}], ":=", 
     RowBox[{"Expand", "[", "a", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SN", ":=", 
     RowBox[{
      RowBox[{"SApply", "[", 
       RowBox[{"N", ",", "#"}], "]"}], "&"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SSN", ":=", "SN"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SMultiply", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"SExpand", "[", "a", "]"}], " ", 
       RowBox[{"SExpand", "[", "b", "]"}]}], "//", "SExpand"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SeriesCoefficientMinus", "[", 
      RowBox[{"a_SeriesData", ",", 
       RowBox[{"k_", ":", "1"}]}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"-", "k"}], ",", 
          RowBox[{"-", 
           RowBox[{"Length", "[", 
            RowBox[{"a", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], "]"}], "]"}], "]"}], 
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "-", "k"}], ")"}], "/", 
        RowBox[{"a", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SeriesCoefficientMinus", "[", 
      RowBox[{"a_", ",", 
       RowBox[{"k_", ":", "1"}]}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ApplyAnalyticContinuation", "[", "s_SeriesData", "]"}], ":=", 
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Normal", "[", "s", "]"}], "/.", 
        "AnalyticContinuationReplacements"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "/", 
           RowBox[{"s", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SplitSum", "[", "Expr_", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Expr", "[", 
         RowBox[{"[", "0", "]"}], "]"}], "===", "Plus"}], ",", 
       RowBox[{"List", "@@", "Expr"}], ",", 
       RowBox[{"{", "Expr", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SafeReplaceSeries11", "[", 
      RowBox[{"a_SeriesData", ",", "b_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ex", "=", 
          RowBox[{"Normal", "[", "a", "]"}]}], ",", "ex2"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ex2", "=", 
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ex", "/.", "b"}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "/", 
               RowBox[{"a", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"ex2", "+", 
         SuperscriptBox[
          RowBox[{"O", "[", "x", "]"}], 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "/", 
           RowBox[{"a", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}]]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SafeReplaceSeries11", "[", 
      RowBox[{"a_List", ",", "b_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"SafeReplaceSeries11", "[", 
        RowBox[{"#", ",", "b"}], "]"}], "&"}], "/@", "a"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SafeReplaceSeries11", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
     RowBox[{"a", "/.", "b"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixMultiplySExpand", "[", 
      RowBox[{"MatA_", ",", "MatB_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Dim1", "=", 
          RowBox[{"Dimensions", "[", "MatA", "]"}]}], ",", 
         RowBox[{"Dim2", "=", 
          RowBox[{"Dimensions", "[", "MatB", "]"}]}], ",", "ABFile"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Dim1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "===", 
             RowBox[{"Dim2", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Global`DebugData", "=", 
            RowBox[{"{", 
             RowBox[{"MatA", ",", "MatB"}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
           "ReportError", "[", "\"\<Matrix dimensions don't match.\>\"", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"!", 
             RowBox[{
              RowBox[{"FEC", "[", "\"\<Parallel\>\"", "]"}], "===", 
              "False"}]}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"!", 
             RowBox[{
              RowBox[{"Dimensions", "[", "MatA", "]"}], "===", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}]}], ")"}]}], "*)"}], 
         RowBox[{"False", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{"ABFile", "=", 
              RowBox[{"$TemporaryDirectory", "<>", "\"\</\>\"", "<>", 
               RowBox[{"ToString", "[", "$SessionID", "]"}], "<>", 
               "\"\<AB.mx\>\""}]}], ",", 
             RowBox[{"{", 
              RowBox[{"MatA", ",", "MatB"}], "}"}]}], "]"}], 
           RowBox[{"(*", 
            RowBox[{"//", 
             RowBox[{
              RowBox[{"EchoTiming", "[", 
               RowBox[{"#", ",", "\"\<export\>\""}], "]"}], "&"}]}], "*)"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"dir", "=", "ABFile"}], "}"}], ",", 
             RowBox[{
              RowBox[{"ParallelEvaluate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"MyMatA", ",", "MyMatB"}], "}"}], "=", 
                 RowBox[{"Import", "[", "dir", "]"}]}], ";"}], "]"}], ";"}]}],
             "]"}], 
           RowBox[{"(*", 
            RowBox[{"//", 
             RowBox[{
              RowBox[{"EchoTiming", "[", 
               RowBox[{"#", ",", "\"\<import\>\""}], "]"}], "&"}]}], "*)"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"DeleteFile", "[", "ABFile", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PDim1", "=", "Dim1"}], ",", 
                  RowBox[{"piind", "=", "iind"}], ",", 
                  RowBox[{"pjind", "=", "jind"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"ParallelSubmit", "[", "\[IndentingNewLine]", 
                 RowBox[{"SExpand", "@", 
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{"SMultiply", "[", 
                    RowBox[{
                    RowBox[{"MyMatA", "[", 
                    RowBox[{"[", 
                    RowBox[{"piind", ",", "kind"}], "]"}], "]"}], ",", 
                    RowBox[{"MyMatB", "[", 
                    RowBox[{"[", 
                    RowBox[{"kind", ",", "pjind"}], "]"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"kind", ",", 
                    RowBox[{"PDim1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], 
                 "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}],
               "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"iind", ",", 
                RowBox[{"Dim1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"jind", ",", 
                RowBox[{"Dim2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], "//", "WaitAll"}]}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"PMatA", "=", 
                   RowBox[{"Compress", "[", 
                    RowBox[{"MatA", "[", 
                    RowBox[{"[", "iind", "]"}], "]"}], "]"}]}], ",", 
                  RowBox[{"PMatB", "=", 
                   RowBox[{"Compress", "[", 
                    RowBox[{"MatB", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "jind"}], "]"}], "]"}], "]"}]}], ",", 
                  RowBox[{"PDim1", "=", "Dim1"}]}], 
                 RowBox[{"(*", 
                  RowBox[{",", 
                   RowBox[{"piind", "=", "iind"}], ",", 
                   RowBox[{"pjind", "=", "jind"}]}], "*)"}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"ParallelSubmit", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"PMatAFix", "=", 
                   RowBox[{"Uncompress", "[", "PMatA", "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"PMatBFix", "=", 
                   RowBox[{"Uncompress", "[", "PMatB", "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"SExpand", "@", 
                   RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{"SMultiply", "[", 
                    RowBox[{
                    RowBox[{"PMatAFix", "[", 
                    RowBox[{"[", "kind", "]"}], "]"}], ",", 
                    RowBox[{"PMatBFix", "[", 
                    RowBox[{"[", "kind", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"kind", ",", 
                    RowBox[{"PDim1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}],
               "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"iind", ",", 
                RowBox[{"Dim1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"jind", ",", 
                RowBox[{"Dim2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], "//", "WaitAll"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"SExpand", "@", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"SMultiply", "[", 
                RowBox[{
                 RowBox[{"MatA", "[", 
                  RowBox[{"[", 
                   RowBox[{"iind", ",", "kind"}], "]"}], "]"}], ",", 
                 RowBox[{"MatB", "[", 
                  RowBox[{"[", 
                   RowBox[{"kind", ",", "jind"}], "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"kind", ",", 
                 RowBox[{"Dim1", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"iind", ",", 
              RowBox[{"Dim1", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"jind", ",", 
              RowBox[{"Dim2", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixPowerSExpand", "[", 
      RowBox[{"a_", ",", 
       RowBox[{"0", "_"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dim", "=", 
         RowBox[{"a", "//", "Dimensions"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dim", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "===", 
             RowBox[{"dim", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", 
          RowBox[{
           RowBox[{"ReportError", "[", "\"\<Matrix is not square!\>\"", "]"}],
            ";"}]}], "]"}], ";", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"dim", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixPowerSExpand", "[", 
      RowBox[{"a_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"Nest", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MatrixMultiplySExpand", "[", 
         RowBox[{"a", ",", "#"}], "]"}], "&"}], ",", "a", ",", 
       RowBox[{"n", "-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"DiffExpSeries", ",", "Listable"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DiffExpSeries", "[", 
      RowBox[{"Ser_", ",", "ord_"}], "]"}], ":=", 
     RowBox[{"SeriesAlways", "[", 
      RowBox[{
       RowBox[{"Ser", "//", 
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{"N", "[", 
           RowBox[{"#", ",", "FEWorkingPrecision"}], "]"}], "]"}], "&"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "ord"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SeriesAlways", "[", 
      RowBox[{"term_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], ",", 
       RowBox[{"ex_", ":", "1"}]}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DependsQ", "[", 
        RowBox[{"term", ",", "a"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Series", "[", 
        RowBox[{"term", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
         RowBox[{"Assumptions", "\[Rule]", 
          RowBox[{"x", ">", "0"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       TagBox[
        StyleBox[
         RowBox[{"SeriesData", "[", 
          RowBox[{"a", ",", "b", ",", 
           RowBox[{"{", "term", "}"}], ",", "0", ",", 
           RowBox[{
            RowBox[{"c", " ", "ex"}], "+", "1"}], ",", "ex"}], "]"}],
         ShowSpecialCharacters->False,
         ShowStringCharacters->True,
         NumberMarks->True],
        FullForm]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DiffExpSeries", "[", "Ser_", "]"}], ":=", 
     RowBox[{"DiffExpSeries", "[", 
      RowBox[{"Ser", ",", "ExpansionOrderVal"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LeadingCoefficientSeries", "[", 
      RowBox[{"Ser_", ",", 
       RowBox[{"AddTo2_", ":", "1"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "Ser1", ",", "Ser2", ",", "AddTo", ",", "Den1", ",", "Den2", ",", 
         "tmp"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"DependsQ", "[", 
           RowBox[{
            RowBox[{"Ser", "//", "Normal"}], ",", "x"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Ser", "+", 
          SuperscriptBox[
           RowBox[{"O", "[", "x", "]"}], 
           RowBox[{"1", "/", "AddTo2"}]]}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Assuming", "[", 
          RowBox[{
           RowBox[{"x", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Ser1", "=", 
             RowBox[{"Ser", "/.", 
              RowBox[{"x", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{"x", "+", 
                 RowBox[{
                  RowBox[{"O", "[", "x", "]"}], "^", "2"}]}], ")"}]}]}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"Ser2", "=", 
             RowBox[{"Ser1", "/.", 
              RowBox[{"a_List", "\[RuleDelayed]", 
               RowBox[{"Take", "[", 
                RowBox[{"a", ",", "1"}], "]"}]}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Den1", "=", 
             RowBox[{"Association", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Ser1", "[", 
                  RowBox[{"[", "6", "]"}], "]"}], "//", "FactorInteger"}], 
                ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Den2", "=", 
             RowBox[{"Association", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{"AddTo2", "//", "FactorInteger"}], ")"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"AddTo", "=", 
             RowBox[{"Times", "@@", 
              RowBox[{"KeyValueMap", "[", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["#1", "#2"], "&"}], ",", 
                RowBox[{"Merge", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Den1", ",", "Den2"}], "}"}], ",", "Max"}], 
                 "]"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"tmp", "=", 
             RowBox[{
              FractionBox[
               RowBox[{"Ser1", "[", 
                RowBox[{"[", "4", "]"}], "]"}], 
               RowBox[{"Ser1", "[", 
                RowBox[{"[", "6", "]"}], "]"}]], "+", 
              FractionBox["1", "AddTo"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Ser2", "+", 
             StyleBox[
              RowBox[{"SeriesData", "[", 
               RowBox[{"x", ",", "0", ",", 
                RowBox[{"List", "[", "]"}], ",", 
                RowBox[{"tmp", "//", "Numerator"}], ",", 
                RowBox[{"tmp", "//", "Numerator"}], ",", 
                RowBox[{"tmp", "//", "Denominator"}]}], "]"}],
              ShowSpecialCharacters->False,
              ShowStringCharacters->True,
              NumberMarks->True]}]}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SeriesMinPower", "[", "Ser_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Ser", "[", 
       RowBox[{"[", "4", "]"}], "]"}], 
      RowBox[{"Ser", "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SeriesMaxPower", "[", "Ser_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Ser", "[", 
       RowBox[{"[", "5", "]"}], "]"}], 
      RowBox[{"Ser", "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DecreaseSeriesOrderBy", "[", 
      RowBox[{"a_", ",", 
       RowBox[{"k_", ":", "1"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "tmp", "}"}], ",", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"[", "0", "]"}], "]"}], "===", "SeriesData"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tmp", "=", "a"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmp", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"tmp", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "-", 
            RowBox[{"k", " ", 
             RowBox[{"tmp", "[", 
              RowBox[{"[", "6", "]"}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", "tmp"}], ",", "\[IndentingNewLine]", "a"}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntervalOverlapQ", "[", 
      RowBox[{"intv1_", ",", "intv2_"}], "]"}], ":=", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"IntervalIntersection", "[", 
         RowBox[{
          RowBox[{"Interval", "[", "intv1", "]"}], ",", 
          RowBox[{"Interval", "[", "intv2", "]"}]}], "]"}], "===", 
        RowBox[{"Interval", "[", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntervalIntersec", "[", 
      RowBox[{"intv1_", ",", "intv2_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"IntervalIntersection", "[", 
       RowBox[{
        RowBox[{"Interval", "[", "intv1", "]"}], ",", 
        RowBox[{"Interval", "[", "intv2", "]"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntervalContainsQ", "[", 
      RowBox[{"intv_", ",", "point_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"intv", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "point", 
      "\[LessEqual]", 
      RowBox[{"intv", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", " ", "Bulk"}]}], " ", "of", " ", "the", " ", "code", " ", 
      "starts", " ", 
      RowBox[{"here", " ", "--"}]}], "-"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMobius", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Infinity]"}], ",", "zmid_", ",", "\[Infinity]"}], 
       "}"}], "]"}], ":=", 
     RowBox[{"x", "-", "zmid"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"GetMobius", "[", 
       RowBox[{"{", 
        RowBox[{"zmin_", ",", "zmid_", ",", "\[Infinity]"}], "}"}], "]"}], "/;", 
      RowBox[{"zmin", "\[NotEqual]", 
       RowBox[{"-", "\[Infinity]"}]}]}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"zmid", "+", 
        RowBox[{"x", " ", "zmid"}], "-", 
        RowBox[{"2", " ", "x", " ", "zmin"}]}], 
       RowBox[{"1", "-", "x"}]], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"GetMobius", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "zmid_", ",", "zmax_"}], "}"}], 
       "]"}], "/;", 
      RowBox[{"zmax", "\[NotEqual]", "\[Infinity]"}]}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", "x", " ", "zmax"}], "+", "zmid", "-", 
        RowBox[{"x", " ", "zmid"}]}], 
       RowBox[{"1", "+", "x"}]], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"GetMobius", "[", 
       RowBox[{"{", 
        RowBox[{"zmin_", ",", "zmid_", ",", "zmax_"}], "}"}], "]"}], "/;", 
      RowBox[{
       RowBox[{"zmax", "\[NotEqual]", "\[Infinity]"}], "&&", 
       RowBox[{"zmin", "\[NotEqual]", 
        RowBox[{"-", "\[Infinity]"}]}]}]}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "zmid", " ", 
           "zmin"}], "+", 
          RowBox[{"zmax", " ", 
           RowBox[{"(", 
            RowBox[{"zmid", "+", 
             RowBox[{"x", " ", "zmid"}], "-", 
             RowBox[{"2", " ", "x", " ", "zmin"}]}], ")"}]}]}], ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "zmax"}], "+", "zmin",
          "+", 
         RowBox[{"x", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "zmid"}], "+", "zmin"}], ")"}]}]}], 
        ")"}]}], "//", "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"GetMobius", "[", 
       RowBox[{"{", 
        RowBox[{"zmin_", ",", "\[Infinity]", ",", "zmax_"}], "}"}], "]"}], "/;", 
      RowBox[{
       RowBox[{"zmax", "\[NotEqual]", "\[Infinity]"}], "&&", 
       RowBox[{"zmin", "\[NotEqual]", 
        RowBox[{"-", "\[Infinity]"}]}]}]}], ":=", 
     FractionBox[
      RowBox[{
       RowBox[{"zmin", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "+", 
       RowBox[{"zmax", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "x"}], ")"}]}]}], 
      RowBox[{"2", " ", "x"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Pade", " ", "approximants"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetPade", "[", "0", "]"}], "=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetPade", "[", 
      RowBox[{"a_", "?", "NumericQ"}], "]"}], ":=", "a"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GetPade", "[", "a_SeriesData", "]"}], ":=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"$MinPrecision", "=", "FEWorkingPrecision"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"MaxOrd", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "-", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], 
                RowBox[{"a", "[", 
                 RowBox[{"[", "6", "]"}], "]"}]], "+", "1"}], ")"}], "/", 
             "2"}], "]"}], ",", 
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{
                 RowBox[{"a", "[", 
                  RowBox[{"[", "5", "]"}], "]"}], "-", 
                 RowBox[{"a", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], 
                RowBox[{"a", "[", 
                 RowBox[{"[", "6", "]"}], "]"}]], "+", "1"}], ")"}], "/", 
             "2"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"MaxLogOrder", "=", 
         RowBox[{"MaxLogxPower", "[", "a", "]"}]}], ",", 
        "\[IndentingNewLine]", "TempPad"}], "\[IndentingNewLine]", "}"}], ",",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Sum", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         SuperscriptBox["Logx", "ind"], 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"TempPad", "=", 
                RowBox[{"PadeApproximant", "[", 
                 RowBox[{
                  RowBox[{"Chop", "[", 
                   RowBox[{"#", ",", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "ChopPrecisionVal"}]]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"x", ",", "0", ",", "MaxOrd"}], "}"}]}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", 
                   RowBox[{"GetCases", "[", 
                    RowBox[{"TempPad", ",", 
                    RowBox[{"PadeApproximant", "[", "__", "]"}]}], "]"}], 
                   "]"}], ">", "0"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"PrintWarning", "[", 
                    RowBox[{"\"\<Error in Pade approximant of \>\"", ",", 
                    RowBox[{"#", "//", "N"}], ",", 
                    "\"\<. Evaluating normally.\>\""}], "]"}], "[", "1", 
                   "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"PChop", "@", "#"}]}], ",", "\[IndentingNewLine]", 
                 "TempPad"}], "\[IndentingNewLine]", "]"}]}], 
              "\[IndentingNewLine]", "]"}], ")"}], "&"}], "@", 
           RowBox[{"(", 
            RowBox[{"Normal", "@", 
             RowBox[{"LogxCoeff", "[", 
              RowBox[{"a", ",", "ind"}], "]"}]}], ")"}]}], 
          "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"ind", ",", "0", ",", "MaxLogOrder"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Functions", " ", "for", " ", "evaluating", " ", 
     RowBox[{"series", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SEval1", "[", "a_SeriesData", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FEC", "[", "UsePade", "]"}], "===", "True"}], ",", 
       RowBox[{"GetPade", "[", "a", "]"}], ",", 
       RowBox[{"Normal", "[", "a", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SEval1", "[", "0", "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SEval1", "[", 
      RowBox[{"a_", "/;", 
       RowBox[{"NumericQ", "[", "a", "]"}]}], "]"}], ":=", "a"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SEval2", "[", 
      RowBox[{"a_", ",", "at_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$MinPrecision", "=", "FEWorkingPrecision"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"a", "/.", 
            RowBox[{"(", 
             RowBox[{"AnalyticContinuationReplacements", "/.", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"at", "\[GreaterEqual]", "0"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Theta]p", "\[Rule]", "1"}], ",", 
                  RowBox[{"\[Theta]m", "\[Rule]", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Theta]p", "\[Rule]", "0"}], ",", 
                  RowBox[{"\[Theta]m", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], 
             ")"}]}], "/.", 
           RowBox[{"Logx", "\[Rule]", 
            RowBox[{"Log", "[", "x", "]"}]}]}], "/.", 
          RowBox[{"x", "\[Rule]", "at"}]}], "//", 
         RowBox[{
          RowBox[{"SetPrecision", "[", 
           RowBox[{"#", ",", "FEWorkingPrecision"}], "]"}], "&"}]}], "//", 
        "Expand"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SEval", "[", 
      RowBox[{"a_SeriesData", ",", "at_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$MinPrecision", "=", "FEWorkingPrecision"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"FEC", "[", "UsePade", "]"}], "===", "True"}], ",", 
              RowBox[{"GetPade", "[", "a", "]"}], ",", 
              RowBox[{"Normal", "[", "a", "]"}]}], "]"}], "/.", 
            RowBox[{"(", 
             RowBox[{"AnalyticContinuationReplacements", "/.", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"at", "\[GreaterEqual]", "0"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Theta]p", "\[Rule]", "1"}], ",", 
                  RowBox[{"\[Theta]m", "\[Rule]", "0"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Theta]p", "\[Rule]", "0"}], ",", 
                  RowBox[{"\[Theta]m", "\[Rule]", "1"}]}], "}"}]}], "]"}]}], 
             ")"}]}], "/.", 
           RowBox[{"Logx", "\[Rule]", 
            RowBox[{"Log", "[", "x", "]"}]}]}], "/.", 
          RowBox[{"x", "\[Rule]", "at"}]}], "//", 
         RowBox[{
          RowBox[{"SetPrecision", "[", 
           RowBox[{"#", ",", "FEWorkingPrecision"}], "]"}], "&"}]}], "//", 
        "Expand"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SEval", "[", 
      RowBox[{"0", ",", "at_"}], "]"}], ":=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SEval", "[", 
      RowBox[{
       RowBox[{"a_", "/;", 
        RowBox[{"NumericQ", "[", "a", "]"}]}], ",", "at_"}], "]"}], ":=", 
     "a"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Derivatives", ",", " ", 
     RowBox[{"avoiding", " ", 
      RowBox[{"Log", "[", "x", "]"}], " ", "terms"}], ",", " ", 
     RowBox[{"which", " ", "slow", " ", "down", " ", "the", " ", 
      RowBox[{"calculations", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SD", "[", 
      RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CurrMaxLogPower", "=", 
          RowBox[{"MaxLogxPower", "[", "a", "]"}]}], ",", "Tmp"}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sum", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Tmp", "=", 
            RowBox[{"LogxCoeff", "[", 
             RowBox[{"a", ",", "logxord"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{"Tmp", ",", "b"}], "]"}], 
             SuperscriptBox["Logx", "logxord"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Log", "[", "x", "]"}], "logxord"], ",", "b"}], 
                "]"}], "/.", 
               RowBox[{
                RowBox[{"Log", "[", "x", "]"}], "\[Rule]", "Logx"}]}], ")"}], 
             "Tmp"}]}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"logxord", ",", "0", ",", "CurrMaxLogPower"}], "}"}]}], 
         "]"}], "//", "SExpand"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SD", "[", 
      RowBox[{"a_", ",", "b__"}], "]"}], ":=", 
     RowBox[{"SD", "[", 
      RowBox[{
       RowBox[{"SD", "[", 
        RowBox[{"a", ",", 
         RowBox[{
          RowBox[{"{", "b", "}"}], "//", "First"}]}], "]"}], ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"Delete", "[", 
         RowBox[{
          RowBox[{"{", "b", "}"}], ",", "1"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SD", "[", "a_", "]"}], ":=", "a"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Main", " ", "integration", " ", 
     RowBox[{"function", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"DiffExpIntegrate1", ",", "Listable"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntReps", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DiffExpIntegrate", "[", "a__", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "LogOrd", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "If", " ", "maximum", " ", "power", " ", "of", " ", "Logx", " ", 
          "has", " ", "increased"}], ",", " ", 
         RowBox[{"update", " ", "the", " ", "replacement", " ", 
          RowBox[{"relations", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"LogOrd", "=", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"GetCases", "[", 
             RowBox[{
              RowBox[{"{", "a", "}"}], ",", 
              RowBox[{
               RowBox[{
                SuperscriptBox["Logx", 
                 RowBox[{"k_", ":", "1"}]], "|", 
                SuperscriptBox[
                 RowBox[{"Log", "[", "x", "]"}], 
                 RowBox[{"k_", ":", "1"}]]}], "\[RuleDelayed]", "k"}]}], 
             "]"}], ",", "1"}], "]"}], "//", "Max"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"LogOrd", ">", "IMaxLogOrder"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"PrintDebug", "[", 
             RowBox[{"\"\<Encountered \>\"", ",", 
              SuperscriptBox[
               RowBox[{"Log", "[", "x", "]"}], "LogOrd"], ",", 
              "\"\<. Updating IntReps.\>\""}], "]"}], "[", "2", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"UpdateIntReps", "[", "LogOrd", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"DiffExpIntegrate1", "[", "a", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DiffExpIntegrate1", "[", "a_", "]"}], ":=", 
     RowBox[{"DiffExpIntegrate1", "[", 
      RowBox[{"a", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DiffExpIntegrate1", "[", 
     RowBox[{"exp0_SeriesData", ",", "var_"}], "]"}], ":=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"exp", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Expand", "@", 
            RowBox[{"Normal", "@", "exp0"}]}], ")"}], "/.", 
          RowBox[{"Logx", "\[Rule]", 
           RowBox[{"Log", "[", "x", "]"}]}]}]}], ",", "Out", ",", "MaxPow", 
        ",", "Const"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Out", "=", 
        RowBox[{
         RowBox[{"exp", "/.", 
          RowBox[{"var", "\[Rule]", "b"}]}], "/.", "IntReps"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Const", "=", 
        RowBox[{"(", 
         RowBox[{"Out", "/.", 
          RowBox[{"a", "\[Rule]", "0"}]}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"MaxPow", "=", 
        RowBox[{"Floor", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"exp0", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "/", 
           RowBox[{"exp0", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], ")"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SeriesAlways", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Out", "-", "Const", "+", 
              RowBox[{"b", " ", "Const"}]}], "/.", 
             RowBox[{"a", "\[Rule]", "1"}]}], "/.", 
            RowBox[{"b", "\[Rule]", "var"}]}], "/.", 
           RowBox[{
            RowBox[{"Log", "[", "x", "]"}], "\[Rule]", "Logx"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "MaxPow"}], "}"}]}], "]"}], "//", 
        "SExpand"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DiffExpIntegrate1", "[", 
      RowBox[{
       RowBox[{"exp0_", "/;", 
        RowBox[{"NumericQ", "[", "exp0", "]"}]}], ",", "var_"}], "]"}], ":=", 
     RowBox[{"SeriesAlways", "[", 
      RowBox[{
       RowBox[{"var", " ", "exp0"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "ExpansionOrderVal"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DiffExpIntegrate1", "[", 
      RowBox[{"exp0_", ",", "var_"}], "]"}], ":=", 
     RowBox[{"ReportError", "[", 
      RowBox[{
      "\"\<DiffExpIntegrate called with unsupported arguments. \>\"", ",", 
       "exp0", ",", "\"\< \>\"", ",", "var"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UpdateIntReps", "[", "MaxOrd_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"IMaxLogOrder", "=", "MaxOrd"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"IntReps", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Log", "[", "x", "]"}], "^", "n"}], "\[Rule]", 
                 RowBox[{"a", " ", 
                  RowBox[{"Integrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", "x", "]"}], "^", "n"}], ",", "x"}], 
                   "]"}]}]}], "/.", 
                RowBox[{"x", "\[Rule]", "b"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "IMaxLogOrder"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Log", "[", "x", "]"}], "^", "n"}], " ", "x"}], 
                 "\[Rule]", 
                 RowBox[{"a", " ", 
                  RowBox[{"Integrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", "x", "]"}], "^", "n"}], " ", "x"}], 
                    ",", "x"}], "]"}]}]}], "/.", 
                RowBox[{"x", "\[Rule]", "b"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "IMaxLogOrder"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Log", "[", "x", "]"}], "^", "n"}], " ", 
                   RowBox[{"x", "^", "m_"}]}], "/;", 
                  RowBox[{"m", "\[NotEqual]", 
                   RowBox[{"-", "1"}]}]}], "\[Rule]", 
                 RowBox[{"a", " ", 
                  RowBox[{"Integrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", "x", "]"}], "^", "n"}], " ", 
                    RowBox[{"x", "^", "m"}]}], ",", "x"}], "]"}]}]}], "/.", 
                RowBox[{"x", "\[Rule]", "b"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "IMaxLogOrder"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Log", "[", "x", "]"}], "^", "n"}], "/", "x"}], 
                 "\[Rule]", 
                 RowBox[{"a", " ", 
                  RowBox[{"Integrate", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", "x", "]"}], "^", "n"}], " ", 
                    RowBox[{"x", "^", 
                    RowBox[{"-", "1"}]}]}], ",", "x"}], "]"}]}]}], "/.", 
                RowBox[{"x", "\[Rule]", "b"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "IMaxLogOrder"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x", "^", "m_"}], "/;", 
                 RowBox[{"m", "\[NotEqual]", 
                  RowBox[{"-", "1"}]}]}], "\[Rule]", 
                RowBox[{"a", " ", 
                 RowBox[{"Integrate", "[", 
                  RowBox[{
                   RowBox[{"x", "^", "m"}], ",", "x"}], "]"}]}]}], "/.", 
               RowBox[{"x", "\[Rule]", "b"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", "\[Rule]", 
                RowBox[{"a", " ", 
                 RowBox[{"Integrate", "[", 
                  RowBox[{"x", ",", "x"}], "]"}]}]}], "/.", 
               RowBox[{"x", "\[Rule]", "b"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", "x"}], "\[Rule]", 
                RowBox[{"a", " ", 
                 RowBox[{"Integrate", "[", 
                  RowBox[{
                   RowBox[{"1", "/", "x"}], ",", "x"}], "]"}]}]}], "/.", 
               RowBox[{"x", "\[Rule]", "b"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], "//", "Reverse"}], "//", 
          "Expand"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPiecewise", "[", 
     RowBox[{"SavedData2_", ",", 
      RowBox[{"Pade", ":", 
       RowBox[{"_", "?", "BooleanQ"}], ":", "False"}], ",", 
      RowBox[{"Ord_Integer", ":", "Null"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"SavedData", ",", "Res", ",", "Uncompressed"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"SavedData2", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a_Association", ",", "_"}], "}"}], ",", 
              RowBox[{"{", "__", "}"}]}], "}"}]}], "]"}], "||", 
          RowBox[{"MatchQ", "[", 
           RowBox[{"SavedData2", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a_Association", ",", "_", ",", "_"}], "}"}], ",", 
              RowBox[{"{", "__", "}"}]}], "}"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"SavedData", "=", 
          RowBox[{"SavedData2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"SavedData", "=", "SavedData2"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatchQ", "[", 
             RowBox[{
              RowBox[{"SavedData", "[", 
               RowBox[{"[", "0", "]"}], "]"}], "===", "List"}], "]"}], "&&", 
            RowBox[{"Quiet", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Dimensions", "[", "SavedData", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "===", "5"}], "]"}]}], ")"}]}],
          ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "ReportError", "[", 
           "\"\<Could not interpret the argument. Maybe TransportTo[...] was \
not called with the option save_ set to True?\>\"", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Counter", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"$FrontEnd", "===", "Null"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"PrintTemporary", "[", 
           RowBox[{"\"\<Processing \>\"", ",", 
            RowBox[{"Dynamic", "[", "Counter", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FEC", "[", "\"\<SaveExpansionsCompress\>\"", "]"}], "===", 
          "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{
             RowBox[{
             "FEC", "[", "\"\<SaveExpansionsCompressDirectory\>\"", "]"}], 
             "===", "\"\<?\>\""}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{
                 RowBox[{"SavedData", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "5"}], "]"}], "]"}], "//", 
                 RowBox[{
                  RowBox[{"StringPart", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{"-", "2"}], ";;", 
                    RowBox[{"-", "1"}]}]}], "]"}], "&"}]}], "]"}], "===", 
               "\"\<.m\>\""}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Uncompressed", "[", "ind_", "]"}], ":=", 
                RowBox[{
                 RowBox[{"Uncompressed", "[", "ind", "]"}], "=", 
                 RowBox[{"Uncompress", "[", 
                  RowBox[{"Import", "[", 
                   RowBox[{"SavedData", "[", 
                    RowBox[{"[", 
                    RowBox[{"ind", ",", "5"}], "]"}], "]"}], "]"}], "]"}]}]}],
                ";"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Uncompressed", "[", "ind_", "]"}], ":=", 
                RowBox[{
                 RowBox[{"Uncompressed", "[", "ind", "]"}], "=", 
                 RowBox[{"Uncompress", "[", 
                  RowBox[{"SavedData", "[", 
                   RowBox[{"[", 
                    RowBox[{"ind", ",", "5"}], "]"}], "]"}], "]"}]}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Uncompressed", "[", "ind_", "]"}], ":=", 
             RowBox[{
              RowBox[{"Uncompressed", "[", "ind", "]"}], "=", 
              RowBox[{"Uncompress", "[", 
               RowBox[{"SavedData", "[", 
                RowBox[{"[", 
                 RowBox[{"ind", ",", "5"}], "]"}], "]"}], "]"}]}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Uncompressed", "[", "ind_", "]"}], ":=", 
           RowBox[{"SavedData", "[", 
            RowBox[{"[", 
             RowBox[{"ind", ",", "5"}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Res", "=", 
           RowBox[{"Piecewise", "@", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Counter", "=", 
                RowBox[{"{", 
                 RowBox[{"ind", ",", "intind", ",", "epsord"}], "}"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Pade", "===", "True"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Project\[Theta]s", "[", 
                    RowBox[{"#", ",", "GetPade"}], "]"}], "&"}], "@", "#"}], 
                    ")"}], "/.", 
                    RowBox[{"Logx", "\[Rule]", 
                    RowBox[{"Log", "[", "x", "]"}]}]}], "/.", 
                    RowBox[{"\[Theta]p", "\[Rule]", 
                    RowBox[{"HeavisideTheta", "[", "x", "]"}]}]}], "/.", 
                    RowBox[{"\[Theta]m", "\[Rule]", 
                    RowBox[{"HeavisideTheta", "[", 
                    RowBox[{"-", "x"}], "]"}]}]}], "/.", 
                    RowBox[{"(", 
                    RowBox[{"SavedData", "[", 
                    RowBox[{"[", 
                    RowBox[{"ind", ",", "2"}], "]"}], "]"}], ")"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Normal", "@", "#"}], ")"}], "/.", 
                    RowBox[{"Logx", "\[Rule]", 
                    RowBox[{"Log", "[", "x", "]"}]}]}], "/.", 
                    RowBox[{"\[Theta]p", "\[Rule]", 
                    RowBox[{"HeavisideTheta", "[", "x", "]"}]}]}], "/.", 
                    RowBox[{"\[Theta]m", "\[Rule]", 
                    RowBox[{"HeavisideTheta", "[", 
                    RowBox[{"-", "x"}], "]"}]}]}], "/.", 
                    RowBox[{"(", 
                    RowBox[{"SavedData", "[", 
                    RowBox[{"[", 
                    RowBox[{"ind", ",", "2"}], "]"}], "]"}], ")"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "&"}], "@", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Uncompressed", "[", "ind", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "epsord"}], "]"}], "]"}], "+", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Ord", "===", "Null"}], ",", "0", ",", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], "Ord"]}], "]"}]}], ")"}]}], 
                  ")"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"x", ">=", 
                   RowBox[{"SavedData", "[", 
                    RowBox[{"[", 
                    RowBox[{"ind", ",", "3", ",", "1"}], "]"}], "]"}]}], "&&", 
                  RowBox[{"x", "<=", 
                   RowBox[{"SavedData", "[", 
                    RowBox[{"[", 
                    RowBox[{"ind", ",", "3", ",", "2"}], "]"}], "]"}]}]}]}], 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"ind", ",", 
                RowBox[{"Length", "@", "SavedData"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"Res", "/.", 
             RowBox[{"x", "\[Rule]", "#"}]}], "]"}], "&"}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"intind", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Uncompressed", "[", "1", "]"}], "//", "Dimensions"}], "//",
             "First"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"epsord", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Uncompressed", "[", "1", "]"}], "//", "Dimensions"}], "//",
             "Last"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LoadConfiguration", "[", "a__", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DiffExpConfiguration", "=", "DefaultConfiguration"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", "]"}], "&"}], "/@", 
        "DiffExpExtensions"}], ";", "\[IndentingNewLine]", 
       RowBox[{"UpdateConfiguration", "[", "a", "]"}]}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UpdateConfiguration", "[", "a__Rule", "]"}], ":=", 
     RowBox[{"UpdateConfiguration", "[", 
      RowBox[{"{", "a", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UpdateConfiguration", "[", "l_List", "]"}], ":=", 
     RowBox[{"UpdateConfiguration", "[", 
      RowBox[{"l", "//", "Association"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UpdateConfiguration", "[", "assoc_Association", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"PSFL", ",", "DeltaPrescriptionsAdjusted"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"DiffExpConfiguration", "=", 
         RowBox[{"Merge", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"DiffExpConfiguration", ",", "assoc"}], "}"}], ",", 
           "Last"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"assoc", ",", "LogFile"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ValueQ", "[", "LogStream", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Close", "[", "LogStream", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"LogStream", "=", 
            RowBox[{"OpenAppend", "[", 
             RowBox[{"assoc", "[", "LogFile", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"$Output", ",", "LogStream"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"$Messages", ",", "LogStream"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"FEC", ",", "\"\<CrosscheckLevel\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CurrCrosscheckFlags", "=", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"CrosscheckFlags", "//", "Normal"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", 
                 RowBox[{"FEC", "[", "\"\<CrosscheckLevel\>\"", "]"}]}], 
                "&"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"FEC", ",", "\"\<CrosscheckFlags\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CurrCrosscheckFlags", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"CurrCrosscheckFlags", ",", 
              RowBox[{"FEC", "[", "\"\<CrosscheckFlags\>\"", "]"}]}], "]"}]}],
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"assoc", ",", "WorkingPrecision"}], "]"}], "||", 
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"assoc", ",", "ChopPrecision"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FEC", "[", "ChopPrecision", "]"}], "\[GreaterEqual]", 
              RowBox[{"FEC", "[", "WorkingPrecision", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", 
               "\"\<The value of ChopPrecision should be smaller than the \
value of WorkingPrecision.\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "DiffExpConfiguration", "[", "\"\<LinearSolveChopPrecision\>\"", 
          "]"}], "=", 
         RowBox[{"FEC", "[", "ChopPrecision", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"assoc", ",", "\"\<LinearSolveChopPrecision\>\""}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
            "DiffExpConfiguration", "[", "\"\<LinearSolveChopPrecision\>\"", 
             "]"}], "=", 
            RowBox[{"assoc", "[", "\"\<LinearSolveChopPrecision\>\"", "]"}]}],
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"assoc", ",", "LineParameter"}], "]"}], "&&", 
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"FEC", ",", "Variables"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"FEC", "[", "Variables", "]"}], ",", 
               RowBox[{"assoc", "[", "LineParameter", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", 
               "\"\<The symbol for the line parameter can't be equal to one \
of the kinematic variables or masses.\>\"", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"assoc", ",", "LineParameter"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"LineParameterVal", "=", 
            RowBox[{"assoc", "[", "LineParameter", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"x", "=", 
            RowBox[{"assoc", "[", "LineParameter", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"assoc", ",", "DeltaPrescriptions"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"DeltaPrescriptionsAdjusted", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "0", "]"}], "]"}], "===", "List"}], ",", "#", 
                ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "/.", 
                   RowBox[{"Global`\[Delta]", "\[Rule]", "0"}]}], ",", 
                  FractionBox[
                   RowBox[{"Coefficient", "[", 
                    RowBox[{"#", ",", "Global`\[Delta]"}], "]"}], "I"]}], 
                 "}"}]}], "\[IndentingNewLine]", "]"}], "&"}], "/@", 
             RowBox[{"assoc", "[", "DeltaPrescriptions", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"DiffExpConfiguration", "[", "DeltaPrescriptions", "]"}], 
            "=", "DeltaPrescriptionsAdjusted"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
             "We", " ", "separately", " ", "keep", " ", "track", " ", "of", 
              " ", "the", " ", "delta", " ", "prescriptions", " ", "added", 
              " ", "by", " ", "the", " ", "user", " ", "in", " ", "another", 
              " ", "variable"}], ",", " ", 
             RowBox[{
             "since", " ", "they", " ", "might", " ", "not", " ", "contain", 
              " ", "the", " ", "ones", " ", "added", " ", "from", " ", 
              "square", " ", 
              RowBox[{"roots", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
           "UserDeltaPrescriptions", "=", "DeltaPrescriptionsAdjusted"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"assoc", ",", "\"\<EstimateError\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"assoc", "[", "\"\<EstimateError\>\"", "]"}], "===", 
              "\"\<False\>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
               "DiffExpConfiguration", "[", "\"\<EstimateError\>\"", "]"}], 
               "=", "False"}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"True", ",", "\"\<Fast\>\""}], "}"}], ",", 
                   RowBox[{"assoc", "[", "\"\<EstimateError\>\"", "]"}]}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "DiffExpConfiguration", "[", "\"\<EstimateError\>\"", "]"}],
                   "=", "False"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"assoc", ",", "ExpansionOrderVal"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ExpansionOrderVal", "=", 
            RowBox[{"DiffExpConfiguration", "[", "ExpansionOrderVal", "]"}]}],
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"assoc", ",", "DeltaPrescriptions"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PSFL", "=", 
            RowBox[{"FactorList", "/@", 
             RowBox[{
              RowBox[{"FEC", "[", "DeltaPrescriptions", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"DependsQ", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "#", "]"}], ">", "2"}], "&"}], "/@", 
                "PSFL"}], ",", "True"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", 
               "\"\<Physical singularities should be irreducible polynomials!\
\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"assoc", ",", "MatrixDirectory"}], "]"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"FEC", ",", "MatrixDirectory"}], "]"}], "&&", 
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"assoc", ",", "EpsilonOrder"}], "]"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"!", 
                RowBox[{"KeyExistsQ", "[", 
                 RowBox[{"assoc", ",", "Variables"}], "]"}]}], ")"}], "&&", 
              RowBox[{"KeyExistsQ", "[", 
               RowBox[{"assoc", ",", "MatrixDirectory"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"DiffExpConfiguration", "[", "Variables", "]"}], "=", 
               RowBox[{"{", "}"}]}], ";"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"LoadMatrices", "[", "MatrixDirectoryVal", "]"}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"KeyExistsQ", "[", 
               RowBox[{"FEC", ",", "MatrixDirectory"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "PrintWarning", "[", 
               "\"\<No differential equations are loaded!\>\"", "]"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"IntegrationSequence", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"DEqnMatricesFactored", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"DEqnMatricesExpanded", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AlphabetLogRulesFactored", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AlphabetLogRulesExpanded", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"AnalyticContinuationReplacementsAssociation", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"UpdateIntReps", "[", "IMaxLogOrderDefault", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", "assoc", "]"}], "&"}], "/@", 
         "DiffExpExtensions"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PrintInfo", "[", "\"\<Configuration updated.\>\"", "]"}], 
         "[", "1", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"CurrentConfiguration", "[", "]"}]}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Loads", " ", "files", " ", "in", " ", "the", " ", "location", " ", "of", 
     " ", 
     RowBox[{"MatrixDirectory", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LoadMatrices", "[", "Folder_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "TmpFiles", ",", "CurrFileName", ",", "CurrMatrix", ",", "DimTest", 
         ",", "MatrixHeads", ",", "MHLeft", ",", "PSFL", ",", 
         "NewSquareRootSingularities", ",", "Tmp", ",", "SqrtFlips", ",", 
         "VarsPartialDerivatives", ",", "ExtraVars", ",", "AlphabetLogs", ",",
          "FilePattern", ",", "ExtraVarsEncountered"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"PrintInfo", "[", "\"\<Loading matrices.\>\"", "]"}], "[", 
         "1", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"VarsPartialDerivatives", "=", 
         RowBox[{"FEC", "[", "Variables", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FEC", "[", "Variables", "]"}], "===", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TmpFiles", "=", 
            RowBox[{"FileNames", "[", 
             RowBox[{"FileNameJoin", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FEC", "[", "MatrixDirectory", "]"}], ",", 
                "\"\<d*_*.m\>\""}], "}"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "TmpFiles", "]"}], "===", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", 
               "\"\<No partial derivative matrices found in the given \
directory. The matrices should be labeled as: \\\"dscale_epsorder.m\\\".\>\"",
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"FilePattern", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Longest", "[", "pre__", "]"}], "~~", 
              "$PathnameSeparator", "~~", "\"\<d\>\"", "~~", 
              RowBox[{"Shortest", "[", "a___", "]"}], "~~", "\"\<_\>\"", "~~", 
              RowBox[{"Shortest", "[", "b__", "]"}], "~~", "\"\<.m\>\""}], "/;", 
             RowBox[{"NumericQ", "[", 
              RowBox[{"ToExpression", "[", "b", "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"PrintInfo", "[", 
             RowBox[{"\"\<Found files: \>\"", ",", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"StringCases", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"FilePattern", "\[RuleDelayed]", 
                    RowBox[{
                    "\"\<d\>\"", "<>", "a", "<>", "\"\<_\>\"", "<>", "b", 
                    "<>", "\"\<.m\>\""}]}]}], "]"}], "&"}], "@", "TmpFiles"}],
                "]"}]}], "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Tmp", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"StringCases", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"FilePattern", "\[RuleDelayed]", 
                   RowBox[{"{", 
                    RowBox[{"a", ",", "b"}], "}"}]}]}], "]"}], ",", "1"}], 
               "]"}], "&"}], "/@", "TmpFiles"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Tmp", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{"Tmp", ",", 
              RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Tmp", "=", 
            RowBox[{"ToExpression", "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Tmp", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "//", 
               "DeleteDuplicates"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Tmp", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{"Tmp", ",", "Null"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"VarsPartialDerivatives", "=", "Tmp"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"Tmp", ",", "LineParameterVal"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", 
               "\"\<Some of the kinematic invariants or masses are named the \
same as the line parameter. Please change the symbol of the line parameter \
using the configuration option \\\"LineParameter\\\".\>\"", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Handling", " ", "of", " ", "special", " ", "canonical", " ", 
          "matrix", " ", 
          RowBox[{"file", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"FileExistsQ", "[", 
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"FEC", "[", "MatrixDirectory", "]"}], ",", 
              "\"\<d_1.m\>\""}], "}"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ExpansionMatricesCanonical1", "=", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{"FileNameJoin", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FEC", "[", "MatrixDirectory", "]"}], ",", 
                 "\"\<d_1.m\>\""}], "}"}], "]"}], "]"}], "//", "Expand"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Checking", " ", "consistency", " ", "of", " ", "d_", "1.", "m"}],
             " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"And", "@@", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"MapAt", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"And", "@@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MatchQ", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a_", ":", "1"}], ")"}], 
                    RowBox[{"Log", "[", "b_", "]"}]}], "/;", 
                    RowBox[{"NumericQ", "[", "a", "]"}]}]}], "]"}], "&"}], "/@", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"SplitSum", "[", "#", "]"}], ",", "0"}], "]"}]}], 
                    ")"}]}], ")"}], "&"}], "\[IndentingNewLine]", ",", 
                    "ExpansionMatricesCanonical1", ",", 
                    RowBox[{"{", 
                    RowBox[{"All", ",", "All"}], "}"}]}], "]"}], "]"}]}], 
                ")"}], "===", "True"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", 
               "\"\<The matrix d_1.m is not of the right form. It should be \
given as a combination of logarithms with numeric prefactors.\>\"", "]"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"AlphabetLogs", "=", 
            RowBox[{"GetCases", "[", 
             RowBox[{"ExpansionMatricesCanonical1", ",", 
              RowBox[{"Log", "[", "a_", "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"ExtraVars", "=", 
            RowBox[{
             RowBox[{"AlphabetLogs", "/.", 
              RowBox[{
               RowBox[{"Log", "[", "a_", "]"}], "\[RuleDelayed]", "a"}]}], "//",
              "Variables"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"VarsPartialDerivatives", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"VarsPartialDerivatives", ",", "ExtraVars"}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"AlphabetLogRules", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Log", "[", 
                SubscriptBox["l", "ind"], "]"}], "\[Rule]", 
               RowBox[{"AlphabetLogs", "[", 
                RowBox[{"[", "ind", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"ind", ",", 
                RowBox[{"Length", "[", "AlphabetLogs", "]"}]}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"ExpansionMatricesCanonical1", "=", 
            RowBox[{"ExpansionMatricesCanonical1", "/.", 
             RowBox[{"(", 
              RowBox[{"Reverse", "/@", "AlphabetLogRules"}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "PrintInfo", "[", "\"\<Loaded canonical matrix.\>\"", "]"}], "[", 
            "1", "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ExpansionMatricesCanonical1", "=", "\"\<ZeroM\>\""}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"AlphabetLogs", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AlphabetLogRules", "=", 
            RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PrintInfo", "[", 
          RowBox[{
          "\"\<Kinematic invariants and masses: \>\"", ",", 
           "VarsPartialDerivatives"}], "]"}], "[", "1", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"DiffExpConfiguration", "[", "Variables", "]"}], "=", 
         "VarsPartialDerivatives"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"ExpansionMatrices", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"CurrFileName", "=", 
               RowBox[{"FileNameJoin", "[", 
                RowBox[{"{", 
                 RowBox[{"MatrixDirectoryVal", ",", 
                  RowBox[{"\"\<d\>\"", "<>", 
                   RowBox[{"ToString", "[", "var", "]"}], "<>", "\"\<_\>\"", "<>", 
                   RowBox[{"ToString", "[", "ord", "]"}], "<>", 
                   "\"\<.m\>\""}]}], "}"}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FileExistsQ", "[", "CurrFileName", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"Matrix", " ", 
                  RowBox[{"exists", "."}]}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"CurrMatrix", "=", 
                  RowBox[{"Import", "[", "CurrFileName", "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"ExtraVarsEncountered", "=", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Variables", "[", "CurrMatrix", "]"}], ",", 
                    "ExternalScalesVal"}], "]"}]}], ")"}], "===", 
                    RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"ReportError", "[", 
                    RowBox[{"\"\<The file \>\"", ",", 
                    RowBox[{"\"\<d\>\"", "<>", 
                    RowBox[{"ToString", "[", "var", "]"}], "<>", "\"\<_\>\"", 
                    "<>", 
                    RowBox[{"ToString", "[", "ord", "]"}], "<>", 
                    "\"\<.m\>\""}], ",", "\"\< contains the variables: \>\"", 
                    ",", "ExtraVarsEncountered", ",", 
                    "\"\<, but no partial derivative are given for \
these.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"var", ",", "ord"}], "}"}], "\[Rule]", 
                  "CurrMatrix"}]}], "\[IndentingNewLine]", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{"Matrix", " ", "does", " ", "not", " ", "exist"}], 
                  ",", " ", 
                  RowBox[{"assuming", " ", "it", " ", "is", " ", 
                   RowBox[{"zero", "."}]}]}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"VarsPartialDerivatives", ",", "var"}], "]"}], "&&", 
                    RowBox[{"AlphabetLogs", "===", 
                    RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"PrintInfo", "[", 
                    RowBox[{
                    "\"\<Assuming M[\>\"", ",", "var", ",", "\"\<][\>\"", ",",
                     "ord", ",", "\"\<] is zero.\>\""}], "]"}], "[", "1", 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"var", ",", "ord"}], "}"}], "\[Rule]", 
                  "\"\<ZeroM\>\""}]}]}], "]"}]}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"var", ",", "ExternalScalesVal"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"ord", ",", 
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", "EpsilonOrderVal"}], "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], "//", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Association"}]}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Sanity", " ", "check", " ", "on", " ", "matrix", " ", 
          "dimensions"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"DimTest", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"#", "===", "\"\<ZeroM\>\""}]}], ",", 
               RowBox[{"#", "//", "Dimensions"}], ",", "Null"}], "]"}], "&"}],
             "/@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Values", "[", "ExpansionMatrices", "]"}], ",", 
              RowBox[{"{", "ExpansionMatricesCanonical1", "}"}]}], "]"}]}], 
           ")"}], "//", 
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{"#", ",", "Null"}], "]"}], "&"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{"DimTest", "//", "SameQ"}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ReportError", "[", 
            RowBox[{
            "\"\<Loaded matrices are of different dimensions: \>\"", ",", 
             "DimTest"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PrintInfo", "[", 
          RowBox[{"\"\<Loaded system of size \>\"", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\< x \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}], "@", 
            RowBox[{"First", "@", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{
               RowBox[{"Dimensions", "/@", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"Values", "[", "ExpansionMatrices", "]"}], ",", 
                  RowBox[{"{", "ExpansionMatricesCanonical1", "}"}]}], 
                 "]"}]}], ",", 
               RowBox[{"{", "}"}]}], "]"}]}]}]}], "]"}], "[", "1", "]"}], ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"ExpansionMatrices", "=", 
         RowBox[{"ExpansionMatrices", "/.", 
          RowBox[{"\"\<ZeroM\>\"", "\[Rule]", 
           RowBox[{"CA", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DimTest", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"DimTest", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], 
            "]"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ExpansionMatricesCanonical1", "=", 
         RowBox[{"ExpansionMatricesCanonical1", "/.", 
          RowBox[{"\"\<ZeroM\>\"", "\[Rule]", 
           RowBox[{"CA", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DimTest", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"DimTest", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], 
            "]"}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"NumIntegrals", "=", 
         RowBox[{"DimTest", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"MatrixHeads", "=", 
         RowBox[{"GetCases", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"ExpansionMatrices", "//", "Values"}], ",", 
              RowBox[{"AlphabetLogs", "/.", 
               RowBox[{
                RowBox[{"Log", "[", "a_", "]"}], "\[RuleDelayed]", "a"}]}]}], 
             "]"}], "//", "Flatten"}], ",", 
           RowBox[{"a_", "\[RuleDelayed]", 
            RowBox[{"a", "[", 
             RowBox[{"[", "0", "]"}], "]"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"MHLeft", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{"MatrixHeads", ",", 
           RowBox[{"{", 
            RowBox[{
            "Association", ",", "List", ",", "Complex", ",", "Integer", ",", 
             "Plus", ",", "Power", ",", "Rational", ",", "Symbol", ",", 
             "Times"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "MHLeft", "]"}], ">", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ReportError", "[", 
            RowBox[{
            "\"\<The differential equation matrices contain functions for \
which DiffExp has not been designed. It is expected that the matrices contain \
only rational functions, and square roots of rational functions. The function \
heads that were found are: \>\"", ",", "MHLeft"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"GetCases", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"ExpansionMatrices", "//", "Values"}], ",", 
                RowBox[{"AlphabetLogs", "/.", 
                 RowBox[{
                  RowBox[{"Log", "[", "a_", "]"}], "\[RuleDelayed]", 
                  "a"}]}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"Power", "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "/;", 
               RowBox[{
                RowBox[{"Denominator", "[", "b", "]"}], ">", "2"}]}]}], "]"}],
             "]"}], ">", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "ReportError", "[", 
            "\"\<Differential equations contain higher order roots. This \
behaviour has not been implemented yet.\>\"", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "Detecting", " ", "square", " ", "roots", " ", "in", " ", "the", 
           " ", "differential", " ", "equations"}], ",", " ", 
          RowBox[{
           RowBox[{"and", " ", "assigning", " ", "I\[Delta]"}], "-", 
           RowBox[{"prescriptions", "."}]}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"DEqnSquareRoots", "=", 
         RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"GetCases", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ExpansionMatrices", "//", "Values"}], ",", 
               "AlphabetLogRules"}], "}"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Power", "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "/;", 
               RowBox[{
                RowBox[{"Denominator", "[", "b", "]"}], "===", "2"}]}], 
              "\[RuleDelayed]", 
              RowBox[{"Expand", "[", "a", "]"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"DependsQ", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Alternatives", "@@", "ExternalScalesVal"}]}], "]"}]}],
             "&"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"DEqnSquareRoots", "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"DEqnSquareRoots", ",", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Expand", "[", "#1", "]"}], "===", 
              RowBox[{"Expand", "[", "#2", "]"}]}], "||", 
             RowBox[{
              RowBox[{"Expand", "[", "#1", "]"}], "===", 
              RowBox[{"Expand", "[", 
               RowBox[{"-", "#2"}], "]"}]}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"PSFL", "=", 
         RowBox[{"FactorList", "/@", "DEqnSquareRoots"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"DependsQ", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], ">", "2"}], "&"}], "/@", 
             "PSFL"}], ",", "True"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "ReportError", "[", 
            "\"\<Matrices contain square roots which are not \
irreducible!\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"NewSquareRootSingularities", "=", 
         RowBox[{"SquareRootPrescriptionsAdded", "[", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "NewSquareRootSingularities", "]"}], ">", 
           "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
            "PrintInfo", "[", 
             "\"\<Additional square roots encountered in the partial \
derivative matrices:\>\"", "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"PrintInfo", "[", 
             RowBox[{
              RowBox[{"NewSquareRootSingularities", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "//", "TableForm"}], 
             "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "PrintInfo", "[", "\"\<Assigning these roots +i\[Delta].\>\"", 
             "]"}], "[", "1", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"DiffExpConfiguration", "[", "DeltaPrescriptions", "]"}], 
         "=", 
         RowBox[{"Union", "[", 
          RowBox[{
           RowBox[{"FEC", "[", "DeltaPrescriptions", "]"}], ",", 
           RowBox[{"SquareRootPrescriptionsAdded", "[", "]"}]}], "]"}]}], ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "Flipping", " ", "square", " ", "roots", " ", "which", " ", 
           "have"}], " ", "-", 
          RowBox[{"I\[Delta]", " ", 
           RowBox[{"prescription", "."}]}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"SqrtFlips", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Sigma]", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "===", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"\[Sigma]", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "//", "Expand"}]], 
              "\[Rule]", 
              RowBox[{
               RowBox[{"-", "I"}], " ", 
               SqrtBox[
                RowBox[{"\[Sigma]", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              SqrtBox[
               RowBox[{"\[Sigma]", "[", 
                RowBox[{"[", "1", "]"}], "]"}]], "\[Rule]", 
              RowBox[{
               RowBox[{"-", "I"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"\[Sigma]", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "//", "Expand"}]]}]}]}], 
            "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]", ",", 
             RowBox[{
             "DiffExpConfiguration", "[", "DeltaPrescriptions", "]"}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "DEqnSquareRoots", "]"}], ">", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"PrintDebug", "[", 
             RowBox[{
             "\"\<Flipping roots in matrices according to \
i\[Delta]-prescriptions given: \>\"", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["#"], "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox["#"], "/.", "SqrtFlips"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["#"], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    SqrtBox["#"], "/.", "SqrtFlips"}], ")"}]}], "===", 
                    "0"}]}], "}"}], "&"}], "/@", "DEqnSquareRoots"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "===", "False"}], "&"}]}],
                 "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], "[", "1", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"ExpansionMatrices", "=", 
         RowBox[{"Association", "[", 
          RowBox[{
           RowBox[{"Normal", "[", "ExpansionMatrices", "]"}], "/.", 
           RowBox[{
            RowBox[{
             SuperscriptBox["a_", "b_"], "/;", 
             RowBox[{
              RowBox[{"Denominator", "[", "b", "]"}], "\[Equal]", "2"}]}], 
            "\[RuleDelayed]", 
            RowBox[{
             SuperscriptBox["a", 
              RowBox[{"b", "-", 
               RowBox[{"1", "/", "2"}]}]], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"a", "//", "Expand"}], "]"}], "/.", "SqrtFlips"}], 
              ")"}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AlphabetLogRules", "=", 
         RowBox[{"AlphabetLogRules", "/.", 
          RowBox[{
           RowBox[{
            SuperscriptBox["a_", "b_"], "/;", 
            RowBox[{
             RowBox[{"Denominator", "[", "b", "]"}], "\[Equal]", "2"}]}], 
           "\[RuleDelayed]", 
           RowBox[{
            SuperscriptBox["a", 
             RowBox[{"b", "-", 
              RowBox[{"1", "/", "2"}]}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"a", "//", "Expand"}], "]"}], "/.", "SqrtFlips"}], 
             ")"}]}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Loading", " ", "all", " ", "the", " ", "factors", " ", "which", " ",
           "may", " ", "yield", " ", 
          RowBox[{"singularities", ".", " ", "This"}], " ", "will", " ", "be",
           " ", "used", " ", "in", " ", "the", " ", "function", " ", 
          RowBox[{"FindMatrixSingularities", "."}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "PrintInfo", "[", "\"\<Getting irreducible factors..\>\"", "]"}], 
         "[", "1", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"MatricesIrreducibleFactors", "=", 
         RowBox[{
          RowBox[{"Replace", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"FactorList", "/@", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ExpansionMatrices", "//", "Values"}], "//", 
                    "Flatten"}], "//", 
                    RowBox[{
                    RowBox[{"GetCases", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"a_", "^", "b_"}], "/;", 
                    RowBox[{
                    RowBox[{"IntegerQ", "[", "b", "]"}], "&&", 
                    RowBox[{"b", "<", "0"}]}]}], "\[RuleDelayed]", "a"}]}], 
                    "]"}], "&"}]}], ",", 
                    RowBox[{"AlphabetLogs", "/.", 
                    RowBox[{
                    RowBox[{"Log", "[", "a_", "]"}], "\[RuleDelayed]", 
                    RowBox[{"Factor", "[", "a", "]"}]}]}]}], "}"}], "//", 
                    "Flatten"}], ")"}]}], ")"}], "//", "Flatten"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Cases", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"ExpansionMatrices", ",", "AlphabetLogs"}], "}"}], 
                  ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"a_", "^", "b_"}], "/;", 
                    RowBox[{
                    RowBox[{"Denominator", "[", "b", "]"}], "\[Equal]", 
                    "2"}]}], "\[RuleDelayed]", "a"}], ",", "Infinity"}], 
                 "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
              "DeleteDuplicates"}], "//", 
             RowBox[{
              RowBox[{"DeleteCases", "[", 
               RowBox[{"#", ",", 
                RowBox[{"a_", "/;", 
                 RowBox[{"!", 
                  RowBox[{"DependsQ", "[", 
                   RowBox[{"a", ",", 
                    RowBox[{"Alternatives", "@@", 
                    RowBox[{"FEC", "[", "Variables", "]"}]}]}], "]"}]}]}]}], 
               "]"}], "&"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"a_", "^", "b_"}], "/;", 
              RowBox[{
               RowBox[{"Denominator", "[", "b", "]"}], "\[Equal]", "2"}]}], 
             "\[RuleDelayed]", "a"}], ",", "1"}], "]"}], "//", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Expand", "[", "#1", "]"}], "===", 
                RowBox[{"Expand", "[", "#2", "]"}]}], "||", 
               RowBox[{
                RowBox[{"Expand", "[", "#1", "]"}], "===", 
                RowBox[{"Expand", "[", 
                 RowBox[{"-", "#2"}], "]"}]}]}], "&"}]}], "]"}], "&"}]}]}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Prepares", " ", "replacement", " ", "rules", " ", "for", " ", "analytic",
      " ", "continuation", " ", "along", " ", "the", " ", "given", " ", 
     "line", " ", 
     RowBox[{"segment", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PrepareAnalyticContinuation", "[", "Line_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "Tmp", ",", "Tmp2", ",", "SignsNeeded", ",", "SignNeeded", ",", 
         "CurrSignChoices", ",", "FindVanishingFactors", ",", 
         "AllPrescriptions", ",", "VanishingFactors"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"FindVanishingFactors", "[", "Factors_", "]"}], ":=", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Tmp", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Normal", "[", 
                 RowBox[{"LeadingCoefficientSeries", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Factors", "/.", "Line"}], "//", "Expand"}], "//", 
               "PChop"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Tmp2", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"iind", ",", 
                RowBox[{"Tmp", "[", 
                 RowBox[{"[", "iind", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"iind", ",", 
                RowBox[{"Length", "[", "Tmp", "]"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Tmp2", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"Tmp2", ",", 
              RowBox[{
               RowBox[{"DependsQ", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
               "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"VanishingFactors", "=", 
            RowBox[{"Tmp2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], 
          "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "Check", " ", "whether", " ", "the", " ", "singularity", " ", 
           "coincides", " ", "with", " ", "an", " ", "automatically", " ", 
           "added"}], " ", "+", 
          RowBox[{
          "I\[Delta]", " ", "coming", " ", "from", " ", "a", " ", "root", " ",
            "in", " ", "the", " ", "differential", " ", 
           RowBox[{"equations", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"CurrentSingularityWasAddedFromSquareRoot", "=", "False"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"FindVanishingFactors", "[", 
         RowBox[{"SquareRootPrescriptionsAdded", "[", "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "VanishingFactors", "]"}], ">", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"FindVanishingFactors", "[", 
            RowBox[{"Complement", "[", 
             RowBox[{"DeltaPrescriptionsVal", ",", 
              RowBox[{"SquareRootPrescriptionsAdded", "[", "]"}]}], "]"}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "VanishingFactors", "]"}], "===", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "CurrentSingularityWasAddedFromSquareRoot", "=", "True"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"FindVanishingFactors", "[", "DeltaPrescriptionsVal", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "VanishingFactors", "]"}], ">", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CurrentSingularityHasIDeltaPrescription", "=", "True"}], 
           ";"}], ",", 
          RowBox[{"CurrentSingularityHasIDeltaPrescription", "=", "False"}]}],
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"SignsNeeded", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Exponent", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "x"}], "]"}], ",", 
               FractionBox[
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], 
                RowBox[{
                 RowBox[{"Sign", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "/.", 
                 RowBox[{
                  RowBox[{"Sign", "[", "x", "]"}], "\[Rule]", "1"}]}]]}], 
              "}"}], "/.", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"k_", ",", "1"}], "}"}], "\[RuleDelayed]", 
                RowBox[{"(", 
                 RowBox[{"k", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1", "\[Rule]", "1"}], ",", 
                    RowBox[{"a_", "\[Rule]", "\"\<?\>\""}]}], "}"}]}], 
                 ")"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"k_", ",", 
                  RowBox[{"-", "1"}]}], "}"}], "\[RuleDelayed]", 
                RowBox[{"(", 
                 RowBox[{"k", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{"a_", "\[Rule]", "\"\<?\>\""}]}], "}"}]}], 
                 ")"}]}]}], "\[IndentingNewLine]", "}"}]}], 
            "\[IndentingNewLine]", ")"}], "&"}], "/@", "VanishingFactors"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"SignNeeded", "=", 
         RowBox[{"DeleteDuplicates", "@", "SignsNeeded"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"CurrSignChoices", "=", 
         RowBox[{"Thread", "[", 
          RowBox[{"List", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"DeltaPrescriptionsVal", "[", 
              RowBox[{"[", 
               RowBox[{"Tmp2", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "SignsNeeded"}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"DependsQ", "[", 
             RowBox[{"SignNeeded", ",", "\"\<?\>\""}], "]"}], ")"}], "||", 
           RowBox[{
            RowBox[{"Length", "[", "SignNeeded", "]"}], ">", "1"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"KeyExistsQ", "[", 
               RowBox[{
               "AnalyticContinuationReplacementsAssociation", ",", "Line"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
               "PrintInfo", "[", "\"\<Singularity => Sign[Im[x]]:\>\"", "]"}],
                "[", "2", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"PrintInfo", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Rule", "@@", "#"}], "&"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{"Thread", "[", 
                   RowBox[{"List", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DeltaPrescriptionsVal", "[", 
                    RowBox[{"[", 
                    RowBox[{"Tmp2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "+", " ", 
                    RowBox[{"I", " ", "\"\<\[Delta]\>\"", " ", 
                    RowBox[{
                    RowBox[{"DeltaPrescriptionsVal", "[", 
                    RowBox[{"[", 
                    RowBox[{"Tmp2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ",", 
                    "SignsNeeded"}], "]"}], "]"}], ")"}]}], "]"}], "[", "2", 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AnalyticContinuationFailed", "=", "True"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"SignNeeded", "=", 
            RowBox[{"{", "1", "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"AnalyticContinuationReplacements", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SignNeeded", "===", 
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AnalyticContinuationReplacements", "=", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Logx", "\[Rule]", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Theta]p", "+", "\[Theta]m"}], ")"}], "Logx"}], 
                "-", 
                RowBox[{"2", "\[Pi]", " ", "I", " ", "\[Theta]m"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "^", "b_"}], "/;", 
                RowBox[{
                 RowBox[{"Denominator", "[", "b", "]"}], "\[Equal]", "2"}]}], 
               ":>", 
               RowBox[{
                SuperscriptBox["x", 
                 RowBox[{"b", "-", 
                  RowBox[{"1", "/", "2"}]}]], 
                RowBox[{"(", 
                 RowBox[{"\[Theta]p", "-", "\[Theta]m"}], ")"}], " ", 
                RowBox[{"Sqrt", "[", "x", "]"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"x", "^", "b_"}], "/;", 
                RowBox[{
                 RowBox[{"Denominator", "[", "b", "]"}], ">", "2"}]}], ":>", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Theta]p", " ", "+", " ", 
                  RowBox[{
                   RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "2"}], "\[Pi]", " ", "I", " ", "b"}], "]"}], 
                   " ", "\[Theta]m"}]}], " ", ")"}], 
                SuperscriptBox["x", "b"]}]}]}], " ", "\[IndentingNewLine]", 
             "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{
            "AnalyticContinuationReplacementsAssociation", ",", "Line"}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"SignNeeded", "===", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
               "PrintDebug", "[", 
                "\"\<Line not centered at a singularity.\>\"", "]"}], "[", 
               "1", "]"}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"PrintDebug", "[", 
                RowBox[{"\"\<Analytic continuation: x carries \>\"", ",", 
                 RowBox[{"SignNeeded", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*i\[Delta]\>\""}],
                 "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"PrintDebug", "[", 
                RowBox[{
                "\"\<Using replacement rules: \>\"", ",", 
                 "AnalyticContinuationReplacements"}], "]"}], "[", "1", "]"}],
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "AnalyticContinuationReplacementsAssociation", "[", "Line", "]"}], 
         "=", "AnalyticContinuationReplacements"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Detects", " ", "the", " ", "integration", " ", 
     RowBox[{"sequence", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"InitializeIntegrationSequence", "[", "line_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dDot", ",", "HomogeneousMask", ",", "EdgeL", ",", "CurrIndex", ",", 
         "IntegrationDependencies", ",", "KeysToDelete"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "PrintDebug", "[", 
          "\"\<Analyzing integration sequence on current line.\>\"", "]"}], 
         "[", "1", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"HomogeneousMask", "=", 
         RowBox[{"MapAt", "[", 
          RowBox[{"ZeroQ", ",", 
           RowBox[{
            RowBox[{"DEqnMatricesFactored", "[", "line", "]"}], "[", "0", 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"All", ",", "All"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "A", " ", "graph", " ", "describing", " ", "which", " ", "integrals",
           " ", "couple", " ", "together", " ", "in", " ", "the", " ", 
          "differential", " ", 
          RowBox[{"equations", "."}]}], "  ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"EdgeL", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"CurrIndex", "=", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ";", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrIndex", "\[Rule]", "#"}], "&"}], "/@", "#1"}]}],
               ")"}], "&"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Flatten", "[", 
                RowBox[{"Position", "[", 
                 RowBox[{"#", ",", "False"}], "]"}], "]"}], ")"}], "&"}], "/@",
              "HomogeneousMask"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeL", "=", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"EdgeL", ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"DirectedEdge", "[", 
               RowBox[{"i", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "NumIntegrals"}], "}"}]}], "]"}]}], "]"}], "//",
           "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"IntegrationDependencies", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "\[Rule]", 
             RowBox[{"VertexOutComponent", "[", 
              RowBox[{
               RowBox[{"Graph", "[", "EdgeL", "]"}], ",", 
               RowBox[{"{", "#", "}"}]}], "]"}]}], ")"}], "&"}], "/@", 
          RowBox[{"Range", "[", "NumIntegrals", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Integration", " ", "sequence", " ", "and", " ", "coupled", " ", 
          "integrals"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"IntegrationSequence", "=", 
         RowBox[{
          RowBox[{"SortBy", "[", 
           RowBox[{"IntegrationDependencies", ",", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}], "&"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"IntegrationSequence", "=", 
         RowBox[{"Association", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[Rule]", 
             RowBox[{"Union", "[", 
              RowBox[{
               RowBox[{"GetCases", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ConnectedComponents", "[", 
                  RowBox[{
                   RowBox[{"EdgeL", "//", "Graph"}], ",", "#"}], "]"}], 
                 "\[IndentingNewLine]", ",", "_Integer"}], "]"}], ",", 
               RowBox[{"{", "#", "}"}]}], "]"}]}], "&"}], "/@", 
           "IntegrationSequence"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"KeysToDelete", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"DeleteDuplicates", "@*", "Flatten"}], ")"}], "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Delete", "[", 
             RowBox[{"#", ",", 
              RowBox[{"-", "1"}]}], "]"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"IntegrationSequence", "//", "Values"}], ")"}]}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"IntegrationSequence", "=", 
         RowBox[{
          RowBox[{"KeyDrop", "[", 
           RowBox[{"IntegrationSequence", ",", "KeysToDelete"}], "]"}], "//", 
          "Values"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PrintDebug", "[", 
          RowBox[{
          "\"\<Integration sequence is \>\"", ",", "IntegrationSequence"}], 
          "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"MaxCouplingOrder", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Length", "/@", "IntegrationSequence"}], ")"}], "//", 
          "Max"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PrintDebug", "[", 
          RowBox[{
          "\"\<Maximum coupling order is \>\"", ",", "MaxCouplingOrder"}], 
          "]"}], "[", "1", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PrepareBoundaryConditions", "[", 
      RowBox[{"bcs_List", ",", 
       RowBox[{"line2_Association", "|", "line2_List"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"line", ",", 
         RowBox[{"CoeffList", "=", 
          RowBox[{"{", "}"}]}], ",", "Coeffs", ",", "CoeffSer", ",", "bcs1", 
         ",", 
         RowBox[{"OneSer", "=", 
          RowBox[{"(", 
           RowBox[{"1", "//", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"#", ",", "FEWorkingPrecision"}], "]"}], "&"}]}], 
           ")"}]}], ",", "Mask", ",", "ispoint", ",", "LineRat"}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "PrintDebug", "[", "\"\<Preparing boundary conditions.\>\"", "]"}], 
         "[", "1", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"line2", "[", 
            RowBox[{"[", "0", "]"}], "]"}], "===", "List"}], ",", 
          RowBox[{"line", "=", 
           RowBox[{
            RowBox[{"line2", "//", "Association"}], "//", "KeySort"}]}], ",", 
          RowBox[{"line", "=", 
           RowBox[{"line2", "//", "KeySort"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Accuracy", "[", "line", "]"}], "<", 
           "FEWorkingPrecision"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"line", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"line", "//", "Normal"}], "//", 
              RowBox[{
               RowBox[{"SetPrecision", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"2", "FEWorkingPrecision"}]}], "]"}], "&"}]}], "//", 
             "Association"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
           "PrintWarning", "[", 
            "\"\<Accuracy of the line/point is lower than the working \
precision. The precision has been artificially increased.\>\"", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "bcs", "]"}], "!=", "NumIntegrals"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "PrintWarning", "[", 
            "\"\<The number of integrals does not match the size of the \
system of differential equations.\>\"", "]"}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"PrepareAnalyticContinuation", "[", "line", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"ispoint", "=", 
         RowBox[{"IsPoint", "[", "line", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ispoint", "&&", 
           RowBox[{
            RowBox[{"Count", "[", 
             RowBox[{
              RowBox[{"PChop", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MatricesIrreducibleFactors", "/.", "line"}], "//", 
                 "Together"}], ")"}], "]"}], ",", "0"}], "]"}], ">", "0"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "PrintWarning", "[", 
            "\"\<The boundary conditions are given as numerical values at a \
point, but the point lies on a singularity of the differential equations. \
This only works if the asymptotic limit is finite.\>\"", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"bcs", "[", 
                RowBox[{"[", 
                 RowBox[{"bcind", ",", "0"}], "]"}], "]"}], ",", 
               RowBox[{"bcs", "[", 
                RowBox[{"[", "bcind", "]"}], "]"}]}], "}"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"List", ",", "_"}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"PrintDebug", "[", 
                RowBox[{
                "\"\<Integral \>\"", ",", "bcind", ",", 
                 "\"\<: List. Assuming first entry ~ \!\(\*SuperscriptBox[\(\
\[Epsilon]\), \(0\)]\).\>\""}], "]"}], "[", "1", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"bcs", "[", 
                   RowBox[{"[", "bcind", "]"}], "]"}], "]"}], "<", 
                 RowBox[{"EpsilonOrderVal", "+", "1"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ReportError", "[", 
                  RowBox[{
                  "\"\<Too few coefficients given for boundary conditions up \
to order \[Epsilon]^\>\"", ",", "EpsilonOrderVal"}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Coeffs", "=", 
               RowBox[{
                RowBox[{"bcs", "[", 
                 RowBox[{"[", "bcind", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"Range", "[", 
                  RowBox[{"EpsilonOrderVal", "+", "1"}], "]"}], "]"}], 
                "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"String", ",", "\"\<?\>\""}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"PrintInfo", "[", 
                RowBox[{
                "\"\<Integral \>\"", ",", "bcind", ",", 
                 "\"\<: Ignoring boundary conditions.\>\""}], "]"}], "[", "1",
                "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Coeffs", "=", 
               RowBox[{"CA", "[", 
                RowBox[{"\"\<?\>\"", ",", 
                 RowBox[{"EpsilonOrderVal", "+", "1"}]}], "]"}]}], ";"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", ",", "_", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"PrintDebug", "[", 
                RowBox[{
                "\"\<Integral \>\"", ",", "bcind", ",", 
                 "\"\<: Assuming closed form expression.\>\""}], "]"}], "[", 
               "1", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"CoeffSer", "=", 
               RowBox[{
                RowBox[{"SeriesAlways", "[", 
                 RowBox[{
                  RowBox[{"bcs", "[", 
                   RowBox[{"[", "bcind", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Epsilon]", ",", "0", ",", "EpsilonOrderVal"}], 
                   "}"}]}], "]"}], "//", "SExpand"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"Sanity", " ", "check"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"CoeffSer", "//", "SeriesMinPower"}], ")"}], "<", 
                 "0"}], ",", 
                RowBox[{
                "ReportError", "[", 
                 "\"\<The boundary conditions should start at finite order.\>\
\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Coeffs", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"SeriesCoefficient", "[", 
                  RowBox[{"CoeffSer", ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Epsilon]", ",", "0", ",", "ord"}], "}"}]}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"ord", ",", "0", ",", "EpsilonOrderVal"}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "We", " ", "put", " ", "everything", " ", "below", " ", "the", 
                " ", "leading", " ", "eps", " ", "coefficient", " ", "to", 
                " ", "zero", " ", "for", " ", "all", " ", "orders", " ", "of",
                 " ", 
                RowBox[{"x", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", "ispoint"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{
                    RowBox[{"bcs", "[", 
                    RowBox[{"[", "bcind", "]"}], "]"}], "===", "0"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "ispoint"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PrintInfo", "[", 
                    RowBox[{
                    "\"\<Assuming that integral \>\"", ",", "bcind", ",", 
                    "\"\< is exactly zero at epsilon order \>\"", ",", 
                    RowBox[{"iind", "-", "1"}], ",", "\"\<.\>\""}], "]"}], 
                    "[", "1", "]"}], ";"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Coeffs", "[", 
                    RowBox[{"[", "iind", "]"}], "]"}], "=", 
                    TagBox[
                    StyleBox[
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"List", "[", "]"}], ",", "0", ",", 
                    RowBox[{"ExpansionOrderVal", "+", "1"}], ",", "1"}], "]"}],
                    ShowSpecialCharacters->False,
                    ShowStringCharacters->True,
                    NumberMarks->True],
                    FullForm]}]}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"iind", ",", 
                    RowBox[{"CoeffSer", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}],
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"CoeffList", ",", "Coeffs"}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"bcind", ",", 
            RowBox[{"bcs", "//", "Length"}]}], "}"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"bcs1", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", "ispoint"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "ind", "]"}], "]"}], "[", 
                    RowBox[{"[", "0", "]"}], "]"}], "===", "SeriesData"}], 
                   ")"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"(", "\[IndentingNewLine]", 
                   RowBox[{"LeadingCoefficientSeries", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "ind", "]"}], "]"}], "/.", "line"}], ")"}], 
                    "*", "OneSer"}], ",", "2"}], "]"}], "\[IndentingNewLine]",
                    ")"}], "/.", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"OneSer", " ", "\"\<?\>\""}], "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    RowBox[{"1", "/", "2"}]]}], "\[Rule]", "\"\<?\>\""}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "ind", "]"}], "]"}]}], "\[IndentingNewLine]", 
                "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"ind", ",", 
                 RowBox[{"Length", "[", "#", "]"}]}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"DependsQ", "[", 
                 RowBox[{
                  RowBox[{"Normal", "[", "#", "]"}], ",", "x"}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ReportError", "[", 
                  RowBox[{
                  "\"\<The boundary terms that are provided depend on the \
line parameter \>\"", ",", "x", ",", 
                   "\"\<, but the line itself does not.\>\""}], "]"}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"OneSer", "*", "#"}], "/.", "line"}]}]}], 
            "\[IndentingNewLine]", "]"}], "&"}], "/@", "CoeffList"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "ispoint"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Mask", "=", 
            RowBox[{
             RowBox[{"MapAt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Switch", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "0", "]"}], "]"}], ",", "\[IndentingNewLine]",
                   "SeriesData", ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"tmp", "=", "#"}], ";", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"tmp", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"\"\<(...)\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "//", "Length"}]}], 
                    "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", "tmp"}], 
                  ",", "\[IndentingNewLine]", "_", ",", "#"}], "]"}], "&"}], 
               ",", "bcs1", ",", 
               RowBox[{"{", 
                RowBox[{"All", ",", "All"}], "}"}]}], "]"}], "//", 
             "TableForm"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "PrintInfo", "[", 
             "\"\<Prepared boundary conditions in asymptotic limit, of the \
form:\>\"", "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"PrintInfo", "[", "Mask", "]"}], "[", "1", "]"}], ";"}]}],
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"line", ",", "bcs1"}], "}"}], "/.", 
          RowBox[{
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"a_", " ", "x"}], "]"}], "/;", 
            RowBox[{"NumericQ", "[", "a", "]"}]}], "\[RuleDelayed]", 
           RowBox[{
            RowBox[{"Log", "[", "a", "]"}], "+", "Logx"}]}]}], "/.", 
         RowBox[{
          RowBox[{"Log", "[", "x", "]"}], "\[Rule]", "Logx"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ClearMatrices", "[", "line_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{
            RowBox[{"FEC", "[", "\"\<KeepMatrixExpansions\>\"", "]"}], "===", 
            "True"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"KeyDropFrom", "[", 
            RowBox[{"DEqnMatricesFactored", ",", "line"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"KeyDropFrom", "[", 
            RowBox[{"DEqnMatricesExpanded", ",", "line"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ClearMatrices", "[", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{
            RowBox[{"FEC", "[", "\"\<KeepMatrixExpansions\>\"", "]"}], "===", 
            "True"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"DEqnMatricesFactored", "=", 
            RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"DEqnMatricesExpanded", "=", 
            RowBox[{"Association", "[", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Below", " ", "follow", " ", "functions", " ", "for", " ", "factoring", 
     " ", "and", " ", "expanding", " ", "the", " ", "partial", " ", 
     "derivative", " ", "matrices", " ", "along", " ", "a", " ", 
     RowBox[{"line", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PrepareMatrices", "[", "line_Association", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"DEqnMatricesExpanded", ",", "line"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"PrepareMatricesFactored", "[", "line", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"PrepareMatricesExpanded", "[", "line", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Prepare", " ", "matrices", " ", "along", " ", "line", " ", "segment"}], 
     ",", " ", 
     RowBox[{"by", " ", "reusing", " ", "previously", " ", "factored", " ", 
      RowBox[{"matrices", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PrepareMatricesFrom1", "[", 
      RowBox[{"lineorig_Association", ",", "linenew_Association"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "ParRelns", "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"!", 
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"DEqnMatricesFactored", ",", "linenew"}], "]"}]}], 
            ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"!", 
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"DEqnMatricesExpanded", ",", "linenew"}], "]"}]}], 
            ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
            "PrintInfo", "[", 
             "\"\<Preparing differential equations along current line \
segment.\>\"", "]"}], "[", "2", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"ParRelns", "=", 
         RowBox[{"RelateLines", "[", 
          RowBox[{"lineorig", ",", "linenew"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"DEqnMatricesFactored", ",", "lineorig"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"PrintDebug", "[", 
             RowBox[{
             "\"\<Warning!: PrepareMatricesFrom is asked to re-use the \
results on \>\"", ",", "lineorig", ",", 
              "\"\< but these entries do not exist in the Association.\>\""}],
              "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"PrepareMatricesFactored", "[", "linenew", "]"}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"KeyExistsQ", "[", 
               RowBox[{"DEqnMatricesFactored", ",", "linenew"}], "]"}]}], ",",
              "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"DEqnMatricesFactored", "[", "linenew", "]"}], "=", 
               RowBox[{"Association", "[", "\[IndentingNewLine]", 
                RowBox[{"Table", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"epsord", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"PChop", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "UseMobius", "]"}], "===", "True"}], 
                    ",", "Identity", ",", 
                    RowBox[{"FactorOrTogether", "[", 
                    RowBox[{"lineorig", ",", "linenew"}], "]"}]}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesFactored", "[", "lineorig", "]"}], 
                    "[", "epsord", "]"}], "/.", 
                    RowBox[{"x", "\[Rule]", "ParRelns"}]}], ")"}], 
                    RowBox[{"D", "[", 
                    RowBox[{"ParRelns", ",", "x"}], "]"}]}], "]"}], "]"}], 
                    ")"}]}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"epsord", ",", "0", ",", "EpsilonOrderVal"}], 
                   "}"}]}], "]"}], "\[IndentingNewLine]", "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"AlphabetLogRules", "===", 
                  RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"AlphabetLogRulesFactored", "[", "linenew", "]"}], 
                  "=", 
                  RowBox[{"MapAt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "/.", 
                    RowBox[{
                    RowBox[{"Log", "[", "a_", "]"}], "\[RuleDelayed]", 
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "/.", "linenew"}], "//", 
                    RowBox[{"FactorOrTogether", "[", "linenew", "]"}]}], "//",
                     "PChop"}], "]"}]}]}], ")"}], "&"}], ",", 
                    "AlphabetLogRules", ",", 
                    RowBox[{"{", 
                    RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PrepareMatricesFrom", "[", 
      RowBox[{"lineorig_Association", ",", "linenew_Association"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PrepareMatricesFrom1", "[", 
        RowBox[{"lineorig", ",", "linenew"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "PrintInfo", "[", "\"\<Expanding partial derivative matrices.\>\"", 
         "]"}], "[", "2", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"PrepareMatricesExpanded", "[", "linenew", "]"}], ";"}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExactLineQ", "[", "line_Association", "]"}], ":=", 
     RowBox[{"And", "@@", 
      RowBox[{"(", 
       RowBox[{"ExactNumberQ", "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"Numerator", "[", "#", "]"}], "/.", 
               RowBox[{"x", "\[Rule]", "0"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Coefficient", "[", 
               RowBox[{
                RowBox[{"Numerator", "[", "#", "]"}], ",", "x"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Denominator", "[", "#", "]"}], "/.", 
               RowBox[{"x", "\[Rule]", "0"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Coefficient", "[", 
               RowBox[{
                RowBox[{"Denominator", "[", "#", "]"}], ",", "x"}], "]"}]}], 
             "}"}], "&"}], "/@", 
           RowBox[{"(", 
            RowBox[{"Together", "/@", 
             RowBox[{"Values", "[", "line", "]"}]}], ")"}]}], ")"}], "]"}]}], 
       ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FactorOrTogether", "[", "line_Association", "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ExactLineQ", "[", "line", "]"}], ",", "Factor", ",", 
       "Together"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FactorOrTogether", "[", 
      RowBox[{"line1_Association", ",", "line2_Association"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ExactLineQ", "[", "line1", "]"}], "&&", 
        RowBox[{"ExactLineQ", "[", "line2", "]"}]}], ",", "Factor", ",", 
       "Together"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PrepareMatricesFactored", "[", "line_Association", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"DEqnMatricesFactored", ",", "line"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DEqnMatricesFactored", "[", "line", "]"}], "=", 
           RowBox[{"Association", "[", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"epsord", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{"PChop", "[", 
                 RowBox[{
                  RowBox[{"FactorOrTogether", "[", "line", "]"}], "[", 
                  RowBox[{"Sum", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ExpansionMatrices", "[", 
                    RowBox[{"{", 
                    RowBox[{"v", ",", "epsord"}], "}"}], "]"}], "/.", 
                    "line"}], ")"}], 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"line", "[", "v", "]"}], ",", "x"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"v", ",", "ExternalScalesVal"}], "}"}]}], "]"}], 
                  "]"}], "]"}], ")"}]}], "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"epsord", ",", "0", ",", "EpsilonOrderVal"}], "}"}]}], 
             "]"}], "\[IndentingNewLine]", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"AlphabetLogRules", "===", 
              RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"AlphabetLogRulesFactored", "[", "line", "]"}], "=", 
              RowBox[{"MapAt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"#", "/.", 
                   RowBox[{
                    RowBox[{"Log", "[", "a_", "]"}], "\[RuleDelayed]", 
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"a", "/.", "line"}], "//", 
                    RowBox[{"FactorOrTogether", "[", "line", "]"}]}], "//", 
                    "PChop"}], "]"}]}]}], ")"}], "&"}], ",", 
                "AlphabetLogRules", ",", 
                RowBox[{"{", 
                 RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PrepareMatricesExpanded", "[", "line_Association", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"KeyExistsQ", "[", 
           RowBox[{"DEqnMatricesExpanded", ",", "line"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Series", "[", 
              RowBox[{
               RowBox[{"#", "//", 
                RowBox[{
                 RowBox[{"N", "[", 
                  RowBox[{"#", ",", "FEWorkingPrecision"}], "]"}], "&"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "ExpansionOrderVal"}], "}"}], ",", 
               RowBox[{"Assumptions", "\[Rule]", 
                RowBox[{"x", ">", "0"}]}]}], "]"}], "&"}], "/@", 
            RowBox[{"DEqnMatricesFactored", "[", "line", "]"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"AlphabetLogRules", "===", 
              RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"AlphabetLogRulesExpanded", "[", "line", "]"}], "=", 
              RowBox[{"MapAt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"Series", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"#", "//", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"#", ",", "FEWorkingPrecision"}], "]"}], "&"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "ExpansionOrderVal"}], "}"}], 
                    ",", 
                    RowBox[{"Assumptions", "\[Rule]", 
                    RowBox[{"x", ">", "0"}]}]}], "\[IndentingNewLine]", "]"}],
                    ",", "x"}], "]"}], "\[IndentingNewLine]", "&"}], ",", 
                RowBox[{"AlphabetLogRulesFactored", "[", "line", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", "1", 
               "]"}], "=", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", "1",
                  "]"}], "+", 
                RowBox[{"(", 
                 RowBox[{"ExpansionMatricesCanonical1", "/.", 
                  RowBox[{"AlphabetLogRulesExpanded", "[", "line", "]"}]}], 
                 ")"}]}], "//", "SExpand"}]}], ";"}]}], "\[IndentingNewLine]",
            "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NullSpaceTryAgainOnFail", "[", 
     RowBox[{"ex_", ",", "r___"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Res", ",", "ValidateTerm"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Res", "=", 
        RowBox[{"NullSpace", "[", 
         RowBox[{"ex", ",", "r"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{"Res", ",", 
              RowBox[{
               RowBox[{"SeriesData", "[", 
                RowBox[{"x", ",", "_", ",", 
                 RowBox[{"List", "[", "]"}], ",", "k_", ",", "k_", ",", "_"}],
                 "]"}], "/;", 
               RowBox[{"k", "<", "0"}]}], ",", "Infinity"}], "]"}], "]"}], 
           ">", "0"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "PrintWarning", "[", 
           "\"\<Encountered a problem while determining the nullspace of a \
matrix. Try setting the option \\\"HomogeneousSolve\\\" -> \\\"DontExpand\\\" \
\>\"", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Global`DebugData", "=", 
           RowBox[{"{", 
            RowBox[{"ex", ",", "r"}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Res", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ex", "//", "Normal"}], "//", 
              RowBox[{
               RowBox[{"NullSpace", "[", 
                RowBox[{"#", ",", "r"}], "]"}], "&"}]}], ")"}], "+", 
            SuperscriptBox[
             RowBox[{"O", "[", "x", "]"}], "ExpansionOrderVal"]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PrintDebug", "[", "\"\<Validating solution..\>\"", "]"}], 
           "[", "1", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"PrintDebug", "[", "\"\<Checking vector..\>\"", "]"}], 
              "[", "1", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"ValidateTerm", "=", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"ex", ".", 
                    RowBox[{"Res", "[", 
                    RowBox[{"[", "ii", "]"}], "]"}]}], "//", "SExpand"}], 
                   ")"}], "//", "Normal"}], "//", "PChop"}], "//", 
                "Flatten"}], "//", "DeleteDuplicates"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"ValidateTerm", "===", 
                 RowBox[{"{", "0", "}"}]}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Global`DebugData", "=", 
                 RowBox[{"{", 
                  RowBox[{"ex", ",", 
                   RowBox[{"{", "r", "}"}], ",", "Res", ",", "ValidateTerm"}],
                   "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                "ReportError", "[", 
                 "\"\<Could not obtain nullspace of a matrix. Aborting.\>\"", 
                 "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"Length", "@", "Res"}]}], "}"}]}], "]"}], ";"}], "*)"}],
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "Res"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Derives", " ", "an", " ", "n"}], "-", 
     RowBox[{
     "th", " ", "order", " ", "differential", " ", "equation", " ", "for", 
      " ", "a", " ", "single", " ", 
      RowBox[{"integral", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CombineDifferentialEquationsHomogeneous", "[", 
      RowBox[{"Amat_", ",", 
       RowBox[{"topind_", ":", "1"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Amats", ",", 
         RowBox[{"n", "=", 
          RowBox[{"Amat", "//", "Length"}]}], ",", "Solns", ",", 
         "MtildeMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "PrintDebug", "[", "\"\<Getting higher order derivatives..\>\"", 
          "]"}], "[", "2", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], "===", 
           "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Amats", "=", 
            RowBox[{"PChop", "@", 
             RowBox[{"NestList", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"FEC", "[", "\"\<VerbosityDebug\>\"", "]"}], 
                    "\[GreaterEqual]", "3"}], ",", "EchoTiming", ",", 
                   "Identity"}], "]"}], "[", 
                 RowBox[{"SExpand", "[", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "+", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"#", ",", "Amat"}], "]"}]}], ")"}], "]"}], "]"}], 
                "&"}], ",", 
               RowBox[{"IdentityMatrix", "[", "n", "]"}], ",", "n"}], 
              "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Solns", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Amats", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "topind"}], "]"}], "]"}], "//", 
              "Transpose"}], "//", 
             RowBox[{
              RowBox[{"NullSpaceTryAgainOnFail", "[", 
               RowBox[{"#", ",", 
                RowBox[{
                "Method", "\[Rule]", "\"\<DivisionFreeRowReduction\>\""}], 
                ",", 
                RowBox[{"Tolerance", "\[Rule]", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "LinearSolveChopPrecisionVal"}]}]}]}], "]"}], 
              "&"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"MyAMats", "=", 
            RowBox[{"Amats", "=", 
             RowBox[{"PChop", "@", 
              RowBox[{"NestList", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Together", "[", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "+", 
                    RowBox[{"#", ".", "Amat"}]}], ")"}], "]"}], "&"}], ",", 
                RowBox[{"IdentityMatrix", "[", "n", "]"}], ",", "n"}], 
               "]"}]}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Solns", "=", 
            RowBox[{"DiffExpSeries", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Amats", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "topind"}], "]"}], "]"}], "//", 
                "Transpose"}], "//", 
               RowBox[{
                RowBox[{"NullSpace", "[", "#", "]"}], "&"}]}], "//", 
              "Together"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "Solns", "]"}], ">", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Global`DebugData", "=", 
            RowBox[{"{", 
             RowBox[{"Amats", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "topind"}], "]"}], "]"}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
           "ReportError", "[", 
            "\"\<Found multiple solutions while combining the differential \
equations. This may happen when the integrals become linearly dependent on \
the given line. Use the option IntegrationStrategy -> \
\\\"VariationOfParameters\\\" (note: this may run slower), or choose a \
different line.\>\"", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], "===", 
           "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"MtildeMat", "=", 
            RowBox[{"PChop", "@", 
             RowBox[{"DiffExpSeries", "[", 
              RowBox[{
               RowBox[{"Amats", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "topind"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Range", "[", "n", "]"}], ",", 
                 RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}], "]"}]}]}], 
           ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"MtildeMat", "=", 
            RowBox[{
             RowBox[{"Amats", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "topind"}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"Range", "[", "n", "]"}], ",", 
               RowBox[{"Range", "[", "n", "]"}]}], "]"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"Solns", "[", 
            RowBox[{"[", "1", "]"}], "]"}], 
           RowBox[{
            RowBox[{"Solns", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "//", "Last"}]], ",", 
          "MtildeMat"}], "}"}]}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Solution", " ", "from", " ", "the", " ", "Frobenius", " ", 
     RowBox[{"ansatz", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Frobenius1", "[", "DEqn_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"DEqnSer", ",", 
         RowBox[{"n", "=", 
          RowBox[{"Length", "[", "DEqn", "]"}]}], ",", "IndicialEquation", 
         ",", "rMax", ",", "Ansatz", ",", "c", ",", "Eqns", ",", "cUnknowns", 
         ",", "cSols", ",", "r", ",", "tmp", ",", "tmp2", ",", "Maxc", ",", 
         "IndicialDen", ",", "LeadingPowers"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"LeadingPowers", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"#", "[", 
                RowBox[{"[", "4", "]"}], "]"}], 
               RowBox[{"#", "[", 
                RowBox[{"[", "6", "]"}], "]"}]], "&"}], "@", 
             RowBox[{"LeadingCoefficientSeries", "[", 
              RowBox[{"#", ",", "2"}], "]"}]}], ")"}], "&"}], "/@", 
          "DEqn"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"LeadingPowers", "=", 
         RowBox[{"LeadingPowers", "-", 
          RowBox[{"Last", "[", "LeadingPowers", "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Check", " ", "that", " ", "equation", " ", "is", " ", "Fuchsian"}],
           " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"LeadingPowers", "[", 
               RowBox[{"[", "ind", "]"}], "]"}], "<", 
              RowBox[{"ind", "-", 
               RowBox[{"Length", "[", "LeadingPowers", "]"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", 
               "\"\<Obtained a higher order differential equation that is not \
in Fuchsian form.\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"ind", ",", 
            RowBox[{"Length", "@", "LeadingPowers"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "PrintDebug", "[", "\"\<Frobenius method: Series expanding..\>\"", 
          "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"DEqnSer", "=", 
         RowBox[{"DiffExpSeries", "[", "DEqn", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"IndicialEquation", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"LeadingCoefficientSeries", "[", 
               RowBox[{"DEqnSer", "[", 
                RowBox[{"[", "ind", "]"}], "]"}], "]"}], 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  SuperscriptBox["x", "r"], ",", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"ind", "-", "1"}]}], "]"}]}]}], "]"}], 
                SuperscriptBox["x", 
                 RowBox[{"-", "r"}]]}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"ind", ",", "n"}], "}"}]}], "]"}], "//", "Normal"}], "//", 
          RowBox[{
           RowBox[{"Rationalize", "[", 
            RowBox[{"#", ",", 
             SuperscriptBox["10", 
              RowBox[{"-", "ChopPrecisionVal"}]]}], "]"}], "&"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PrintDebug", "[", 
          RowBox[{"\"\<Indicial equation: \>\"", ",", 
           RowBox[{"IndicialEquation", "/.", 
            RowBox[{"r", "\[Rule]", "\"\<r\>\""}]}]}], "]"}], "[", "3", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"rMax", "=", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IndicialEquation", "\[Equal]", "0"}], "//", 
            RowBox[{
             RowBox[{"Solve", "[", 
              RowBox[{"#", ",", "r"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"Part", "[", 
             RowBox[{"#", ",", "All", ",", "1", ",", "2"}], "]"}], "&"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PrintDebug", "[", 
          RowBox[{"\"\<Considering largest root: r = \>\"", ",", "rMax"}], 
          "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Denominator", "[", "rMax", "]"}], ">", "2"}], "&&", 
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"FEC", "[", "\"\<IgnoreIndicialCheck\>\"", "]"}], "===",
               "True"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ReportError", "[", 
            RowBox[{
            "\"\<The root of the indicial equation is of degree greater than \
two: \>\"", ",", "rMax", ",", 
             "\"\<. This case is not implemented in DiffExp.\>\""}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"IndicialDen", "=", 
         RowBox[{"Denominator", "[", "rMax", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cUnknowns", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           SubscriptBox["c", "iind"], ",", 
           RowBox[{"{", 
            RowBox[{"iind", ",", 
             RowBox[{"IndicialDen", " ", "ExpansionOrderVal"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Ansatz", "=", 
         RowBox[{
          RowBox[{
           SuperscriptBox["x", "rMax"], 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["c", "iind"], " ", 
               SuperscriptBox["x", "iind"]}], "/.", 
              RowBox[{
               SubscriptBox["c", "0"], "\[Rule]", "1"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"iind", ",", "0", ",", 
               RowBox[{"IndicialDen", " ", "ExpansionOrderVal"}]}], "}"}]}], 
            "]"}]}], "+", 
          SuperscriptBox[
           RowBox[{"O", "[", "x", "]"}], 
           RowBox[{"IndicialDen", " ", "ExpansionOrderVal"}]]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Eqns", "=", 
         RowBox[{"PChop", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[Equal]", "0"}], "&"}], "/@", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"DEqnSer", "[", 
                RowBox[{"[", "ind", "]"}], "]"}], 
               RowBox[{"(", " ", 
                RowBox[{"D", "[", 
                 RowBox[{"Ansatz", ",", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"ConstantArray", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"ind", "-", "1"}]}], "]"}]}]}], "]"}], ")"}]}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"ind", ",", "n"}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Check", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"cSols", "=", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{"cUnknowns", "\[Rule]", 
                RowBox[{"LinearSolve", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "&"}], "@", 
                   RowBox[{"CoefficientArrays", "[", 
                    RowBox[{
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"Eqns", ",", "True"}], "]"}], ",", "cUnknowns"}], 
                    "]"}]}], ",", 
                  RowBox[{"ZeroTest", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"LSPChop", "@", 
                    RowBox[{"Expand", "@", 
                    RowBox[{"Normal", "[", "#1", "]"}]}]}], ",", 
                    "LinearSolveChopPrecisionVal"}], "]"}], "==", "0"}], 
                    "&"}], ")"}]}]}], "]"}]}], "]"}], ",", 
              "FEWorkingPrecision"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Global`DebugData", "=", 
            RowBox[{"{", 
             RowBox[{
             "DEqn", ",", "DEqnSer", ",", "IndicialEquation", ",", "rMax", 
              ",", "Ansatz", ",", "cUnknowns", ",", "Eqns", ",", "tmp", ",", 
              "cSols"}], "}"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"DependsQ", "[", 
              RowBox[{"cSols", ",", "LinearSolve"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", 
               "\"\<Something went wrong while applying the Frobenius method.\
\>\"", "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "PrintWarning", "[", 
               "\"\<Encountered possible instability during evaluation of the \
Frobenius method. Cross-checking the result.\>\"", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"tmp2", "=", 
               RowBox[{"Ansatz", "/.", 
                RowBox[{"(", 
                 RowBox[{"PChop", "[", "cSols", "]"}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"tmp2", "=", 
               RowBox[{"Normal", "[", 
                RowBox[{"SExpand", "@", 
                 RowBox[{"Sum", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"DEqnSer", "[", 
                    RowBox[{"[", "ord", "]"}], "]"}], 
                    RowBox[{"D", "[", 
                    RowBox[{"tmp2", ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"ord", "-", "1"}]}], "]"}]}]}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"ord", ",", 
                    RowBox[{"Length", "[", "DEqnSer", "]"}]}], "}"}]}], 
                  "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"tmp2", "===", "0"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "PrintInfo", "[", "\"\<Solution is valid. Continuing.\>\"", 
                   "]"}], "[", "1", "]"}], ";"}], "\[IndentingNewLine]", ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                 "ReportError", "[", "\"\<Result is incorrect. Aborting.\>\"",
                   "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "PrintDebug", "[", "\"\<Frobenius solution found.\>\"", "]"}], "[", 
         "3", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Maxc", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"Eqns", ",", 
            RowBox[{
             SubscriptBox["c", "i_"], "\[RuleDelayed]", "i"}], ",", 
            "Infinity"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Series", "[", 
          RowBox[{"Ansatz", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", 
             RowBox[{"Floor", "[", 
              RowBox[{"Maxc", "+", "rMax"}], "]"}]}], "}"}]}], "]"}], "/.", 
         RowBox[{"(", 
          RowBox[{"PChop", "[", "cSols", "]"}], ")"}]}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"All", " ", "Frobenius", " ", 
     RowBox[{"solutions", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FrobeniusSolutions", "[", "DEqn_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"DEqnOrder", "=", 
          RowBox[{
           RowBox[{"Length", "[", "DEqn", "]"}], "-", "1"}]}], ",", "Solns", 
         ",", "DEqnReduced", ",", "DEqnSer", ",", "DEqnZeros", ",", "Checks", 
         ",", "nTrail"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"DEqnSer", "=", 
         RowBox[{"DiffExpSeries", "[", 
          RowBox[{"DEqn", ",", "ExpansionOrderVal"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"DEqnZeros", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Normal", "[", "#", "]"}], "===", "0"}], ",", "0", ",", 
             "1"}], "]"}], "&"}], "/@", "DEqnSer"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Solns", "=", 
         RowBox[{"{", 
          RowBox[{"Frobenius1", "[", "DEqnSer", "]"}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"DEqnOrder", ">", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"DEqnReduced", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"SExpand", "[", 
               RowBox[{"Sum", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Binomial", "[", 
                   RowBox[{
                    RowBox[{"iind", "-", "1"}], ",", 
                    RowBox[{"kind", "-", "1"}]}], "]"}], 
                  RowBox[{"SMultiply", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"DEqnSer", "[", 
                    RowBox[{"[", "iind", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SD", "[", 
                    RowBox[{
                    RowBox[{"Solns", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"CA", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"iind", "-", "kind"}]}], "]"}]}]}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"iind", ",", "kind", ",", 
                   RowBox[{"DEqnOrder", "+", "1"}]}], "}"}]}], "]"}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"kind", ",", 
                RowBox[{"DEqnOrder", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"Cross", "-", "check"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{
               "CurrCrosscheckFlags", ",", "\"\<FrobeniusSolutions\>\""}], 
               "]"}], "===", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{
                  RowBox[{"Normal", "[", 
                   RowBox[{"(", 
                    RowBox[{"CPChop", "@", 
                    RowBox[{"DEqnReduced", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "]"}], "===", 
                  "0"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"PrintDebug", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"DEqnReduced", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], "ExpansionOrderVal"]}], "//",
                     "SN"}], "]"}], "[", "3", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                 "ReportError", "[", 
                  "\"\<Something went wrong while deriving a lower order \
differential equation from a multiplicative ansatz. Possibly the value of \
ChopPrecision is set too low.\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"DEqnReduced", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"DEqnReduced", ",", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Solns", "=", 
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{"Solns", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"SMultiply", "[", 
                 RowBox[{
                  RowBox[{"Solns", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
               RowBox[{"DiffExpIntegrate", "[", 
                RowBox[{"FrobeniusSolutions", "[", "DEqnReduced", "]"}], 
                "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
            "CurrCrosscheckFlags", ",", "\"\<FrobeniusSolutions\>\""}], "]"}],
            "===", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
            "PrintDebug", "[", 
             "\"\<Running cross-checks on Frobenius solutions..\>\"", "]"}], 
            "[", "1", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Checks", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CPChop", "@*", "SExpand"}], ")"}], "[", 
               RowBox[{"Sum", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"SMultiply", "[", 
                  RowBox[{
                   RowBox[{"DEqnSer", "[", 
                    RowBox[{"[", "iind", "]"}], "]"}], ",", 
                   RowBox[{"SD", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"CA", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"iind", "-", "1"}]}], "]"}]}]}], "]"}]}], "]"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"iind", ",", 
                   RowBox[{"DEqnOrder", "+", "1"}]}], "}"}]}], "]"}], "]"}], 
              "&"}], "/@", "Solns"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"PrintDebug", "[", 
             RowBox[{"\"\<Cross-checks: \>\"", ",", 
              RowBox[{"Checks", "//", "SN"}]}], "]"}], "[", "3", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"SameQ", "[", 
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{"Normal", "[", "Checks", "]"}], ",", "0"}], "]"}], 
               "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", 
               "\"\<Error while validating the Frobenius solutions. \
Aborting..\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "Solns"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Relates", " ", "line", " ", "parameters", " ", "of", " ", "different", 
     " ", 
     RowBox[{"segments", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RelateLines", "[", 
     RowBox[{"a2_Association", ",", "b2_Association", ",", 
      RowBox[{"noerror_", ":", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"KeySort", "[", "a2", "]"}]}], ",", 
        RowBox[{"b", "=", 
         RowBox[{"KeySort", "[", "b2", "]"}]}], ",", "Sol", ",", "Sols", ",", 
        "CanSolveFrom", ",", "SFKey", ",", "SugSol"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "We", " ", "find", " ", "one", " ", "component", " ", "of", " ", "a", 
         " ", "that", " ", "contains", " ", "x"}], ",", " ", 
        RowBox[{
        "and", " ", "use", " ", "that", " ", "to", " ", "solve", " ", "the", 
         " ", 
         RowBox[{"equation", ".", " ", "We"}], " ", "check", " ", "the", " ", 
         "solution", " ", "up", " ", "to", " ", "the", " ", "ChopPrecision", 
         " ", "with", " ", "the", " ", "other", " ", 
         RowBox[{"entries", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CanSolveFrom", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"DependsQ", "[", 
              RowBox[{
               RowBox[{"PChop", "@", 
                RowBox[{"Expand", "@", "#"}]}], ",", "x"}], "]"}], "&"}], "/@",
             "a"}], ",", "True"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "CanSolveFrom", "]"}], "===", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Global`DebugData", "=", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b"}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
          "ReportError", "[", 
           "\"\<Argument does not depend on the line parameter!\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"SFKey", "=", 
        RowBox[{"CanSolveFrom", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"Sol", "=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"a", "[", "SFKey", "]"}], "/.", 
               RowBox[{"x", "\[Rule]", "y"}]}], ")"}], "-", 
             RowBox[{"b", "[", "SFKey", "]"}]}], "\[Equal]", "0"}], ",", 
           "y"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "Sol", "]"}], ">", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ReportError", "[", 
           RowBox[{
           "\"\<Multiple solutions encountered while relating lines: \>\"", 
            ",", 
            RowBox[{
             RowBox[{
              RowBox[{"a", "//", "Normal"}], "//", "N"}], "//", 
             "Association"}], ",", "\"\< and \>\"", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"b", "//", "Normal"}], "//", "N"}], "//", 
             "Association"}], ",", 
            "\"\<. This is likely because you chose a non-linear line \
segment. Such line segments are not currently supported.\>\""}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "Sol", "]"}], "===", "1"}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Global`DebugData", "=", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b"}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", "noerror"}], ",", 
            RowBox[{
             RowBox[{
             "ReportError", "[", "\"\<Could not relate lines.\>\"", "]"}], 
             ";"}]}], "]"}], ";", "\[IndentingNewLine]", "False"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "Crosscheck", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SugSol", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Sol", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "//", 
             "Together"}], "//", "PChop"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"(", 
               RowBox[{"SameQ", "@@", 
                RowBox[{"Append", "[", 
                 RowBox[{
                  RowBox[{"Values", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"Together", "@", 
                    RowBox[{"N", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"FEC", "[", "WorkingPrecision", "]"}]}], 
                    "]"}]}]}], ")"}], "&"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "/.", 
                    RowBox[{"x", "\[Rule]", "SugSol"}]}], ")"}], "-", "b"}], 
                    ")"}]}], "]"}], ",", "0"}], "]"}]}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
               "PrintDebug", "[", "\"\<Could not relate lines:\>\"", "]"}], 
               "[", "1", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"PrintDebug", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Values", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"a", "/.", 
                    RowBox[{"x", "\[Rule]", "SugSol"}]}], ")"}], "-", "b"}], 
                   "]"}], "//", "Factor"}], "//", "N"}], "]"}], "[", "1", 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Global`DebugData", "=", 
               RowBox[{"{", 
                RowBox[{"a", ",", "b"}], "}"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", "noerror"}], ",", 
                RowBox[{
                 RowBox[{
                 "ReportError", "[", "\"\<Could not relate lines.\>\"", "]"}],
                  ";"}]}], "]"}], ";", "\[IndentingNewLine]", "False"}], ",", 
             "\[IndentingNewLine]", "SugSol"}], "\[IndentingNewLine]", "]"}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}],
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RelateLinesPoint", "[", 
      RowBox[{"a_Association", ",", "b_Association", ",", "pointb_"}], "]"}], 
     ":=", 
     RowBox[{
      RowBox[{"RelateLines", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "pointb"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Derives", " ", 
     SubscriptBox["X", "sing"]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindMatrixSingularities", "[", 
      RowBox[{"line_", ",", 
       RowBox[{"getcomplex_", ":", "False"}], ",", 
       RowBox[{"{", 
        RowBox[{"fixat_", ",", "to_"}], "}"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "AllSingularTerms", ",", "RatPoles", ",", "Sqrts", ",", "SPos1", ",", 
         "SPos1N", ",", "SPos", ",", "SPosProjections", ",", "MySing", ",", 
         "MySingN", ",", "NumPoles", ",", "Tmp", ",", "Tmp2", ",", "Tmp3", 
         ",", "Tmp4"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
         "PrintInfo", "[", 
          "\"\<Determining positions of singularities and branch-cuts.\>\"", 
          "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"AllSingularTerms", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"FactorList", "/@", 
              RowBox[{"Factor", "[", 
               RowBox[{"Union", "[", 
                RowBox[{
                 RowBox[{"MatricesIrreducibleFactors", "/.", "line"}], ",", 
                 RowBox[{"Denominator", "@", 
                  RowBox[{"Together", "@", 
                   RowBox[{"Values", "@", "line"}]}]}]}], "]"}], "]"}]}], 
             "]"}], "//", "DeleteDuplicates"}], "//", 
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"#", ",", 
              RowBox[{"a_", "/;", 
               RowBox[{"!", 
                RowBox[{"DependsQ", "[", 
                 RowBox[{"a", ",", "x"}], "]"}]}]}]}], "]"}], "&"}]}], "//", 
          RowBox[{
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Expand", "[", "#1", "]"}], "===", 
                RowBox[{"Expand", "[", "#2", "]"}]}], "||", 
               RowBox[{
                RowBox[{"Expand", "[", "#1", "]"}], "===", 
                RowBox[{"Expand", "[", 
                 RowBox[{"-", "#2"}], "]"}]}]}], "&"}]}], "]"}], "&"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"SPos1", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{"#", "\[Equal]", "0"}], ",", "x"}], "]"}], "&"}], "/@", 
           "AllSingularTerms"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"SPos1", "=", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"SPos1", "//", "Flatten"}], ")"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", 
             RowBox[{
              RowBox[{"DeleteDuplicatesBy", "[", 
               RowBox[{"#", ",", 
                RowBox[{
                 RowBox[{"N", "[", 
                  RowBox[{"#", ",", "ChopPrecisionVal"}], "]"}], "&"}]}], 
               "]"}], "&"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
           "]"}], "//", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"N", "[", 
                 RowBox[{"#1", ",", "ChopPrecisionVal"}], "]"}], "]"}], "<", 
               RowBox[{"Re", "[", 
                RowBox[{"N", "[", 
                 RowBox[{"#2", ",", "ChopPrecisionVal"}], "]"}], "]"}]}], 
              "&"}]}], "]"}], "&"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"SPos1N", "=", 
         RowBox[{"N", "[", 
          RowBox[{"SPos1", ",", "FEWorkingPrecision"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Project", " ", "complex", " ", "singularities", " ", "onto", " ", 
          "the", " ", "real", " ", 
          RowBox[{"line", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"SPosProjections", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"MySing", "=", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", 
             RowBox[{"MySingN", "=", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"LI", "=", 
              RowBox[{"Select", "[", 
               RowBox[{"SPos1N", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Re", "[", "MySingN", "]"}], "-", 
                   RowBox[{"Im", "[", "MySingN", "]"}]}], "<", 
                  RowBox[{"Re", "[", "#", "]"}], "<", 
                  RowBox[{"Re", "[", "MySingN", "]"}]}], "&"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"RI", "=", 
              RowBox[{"Select", "[", 
               RowBox[{"SPos1N", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", "MySingN", "]"}], "<", 
                  RowBox[{"Re", "[", "#", "]"}], "<", 
                  RowBox[{
                   RowBox[{"Re", "[", "MySingN", "]"}], "+", 
                   RowBox[{"Im", "[", "MySingN", "]"}]}]}], "&"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"LI", "===", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{
                  RowBox[{"Re", "[", "MySing", "]"}], "-", 
                  RowBox[{"Im", "[", "MySing", "]"}]}], ",", "Null"}], "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"Re", "[", "MySing", "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"RI", "===", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{
                  RowBox[{"Re", "[", "MySing", "]"}], "+", 
                  RowBox[{"Im", "[", "MySing", "]"}]}], ",", "Null"}], 
                "]"}]}], "\[IndentingNewLine]", "}"}]}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"SPos1", ",", "SPos1N"}], "}"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SPos", "=", 
           RowBox[{"Sort", "[", 
            RowBox[{
             RowBox[{"DeleteDuplicatesBy", "[", 
              RowBox[{
               RowBox[{"DeleteCases", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", "SPosProjections", "]"}], ",", 
                 "Null"}], "]"}], ",", 
               RowBox[{
                RowBox[{"N", "[", 
                 RowBox[{"#", ",", "ChopPrecisionVal"}], "]"}], "&"}]}], 
              "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"N", "[", 
                RowBox[{"#1", ",", "FEWorkingPrecision"}], "]"}], "<", 
               RowBox[{"N", "[", 
                RowBox[{"#2", ",", "FEWorkingPrecision"}], "]"}]}], "&"}]}], 
            "]"}]}], ";"}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"getcomplex", "===", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"SPos", ",", "SPos1"}], "}"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", "SPos"}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Normalizes", " ", "terms", " ", "in", " ", "numerator", " ", "and", " ", 
     "denominator", " ", "for", " ", 
     RowBox[{"printing", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PrintMobiusNormalized", "[", "a_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Tmp", "=", 
          RowBox[{"a", "//", "Together"}]}], ",", "mt", ",", "md", ",", "m"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mt", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "/@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Coefficient", "[", 
              RowBox[{
               RowBox[{"Tmp", "//", "Numerator"}], ",", "x"}], "]"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Tmp", "//", "Numerator"}], ")"}], "/.", 
              RowBox[{"x", "\[Rule]", "0"}]}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"md", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "/@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Coefficient", "[", 
              RowBox[{
               RowBox[{"Tmp", "//", "Denominator"}], ",", "x"}], "]"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Tmp", "//", "Denominator"}], ")"}], "/.", 
              RowBox[{"x", "\[Rule]", "0"}]}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"m", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"mt", ",", "md"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         FractionBox[
          RowBox[{"Expand", "[", 
           RowBox[{
            RowBox[{"Numerator", "[", "Tmp", "]"}], "/", "m"}], "]"}], 
          RowBox[{"Expand", "[", 
           RowBox[{
            RowBox[{"Denominator", "[", "Tmp", "]"}], "/", "m"}], "]"}]], "//",
          "N"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Gives", " ", "a", " ", "large", " ", "term", " ", "which", " ", "can", 
     " ", "be", " ", "used", " ", "to", " ", "estimate", " ", "the", " ", 
     RowBox[{"error", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetLargestTerm", "[", "line_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"Coefficient", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "//", 
               "Values"}], ",", "x", ",", 
              RowBox[{
              "ExpansionOrderVal", "-", "ISafetyExpansionSubtract", "-", 
               RowBox[{"(", 
                RowBox[{"MaxCouplingOrder", "-", "1"}], ")"}]}]}], "]"}], 
            "]"}], "//", "Abs"}], "//", "Max"}], ")"}], 
        SuperscriptBox["x", 
         RowBox[{"ExpansionOrderVal", "-", "ISafetyExpansionSubtract", "-", 
          RowBox[{"(", 
           RowBox[{"MaxCouplingOrder", "-", "1"}], ")"}]}]]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TransportTo", "[", 
     RowBox[{"bcs2_List", ",", 
      RowBox[{"line2_Association", "|", "line2_List"}], ",", 
      RowBox[{"to2", ":", 
       RowBox[{"_", "?", "NumericQ"}], ":", "1"}], ",", 
      RowBox[{"SaveExpansions", ":", 
       RowBox[{"_", "?", "BooleanQ"}], ":", "False"}], ",", 
      RowBox[{"SampleAtList_List", ":", 
       RowBox[{"{", "}"}]}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"line", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"line2", "[", 
             RowBox[{"[", "0", "]"}], "]"}], "===", "List"}], ",", 
           RowBox[{
            RowBox[{"line2", "//", "Association"}], "//", "KeySort"}], ",", 
           RowBox[{"line2", "//", "KeySort"}]}], "]"}]}], ",", "LineRat", ",",
         "ToRat", ",", "to", ",", "Tmp", ",", "bcs", ",", "FixAt", ",", 
        "MySingularities", ",", "MySingularitiesImaginary", ",", 
        "MySingularitiesRelevant", ",", "SingularitySegments", ",", 
        "PoleIntervals", ",", "CurrLine", ",", 
        RowBox[{"CurrLineNoMobius", "=", "Null"}], ",", "CurrIntegrated", ",",
         "CurrIntervalCurrLine", ",", "CurrIntervalLine", ",", 
        RowBox[{"Done", "=", "False"}], ",", "Tmp2", ",", "CurrEvalPoint", 
        ",", "CurrEvalPointCurrLine", ",", "CurrEval", ",", "Currbcs", ",", 
        RowBox[{"AllIntegrationData", "=", 
         RowBox[{"{", "}"}]}], ",", "MyCenter", ",", "EvaluateCurrPoint", ",", 
        RowBox[{"NextIsPole", "=", "False"}], ",", 
        RowBox[{"SegmentCounter", "=", "1"}], ",", "TmpRelateLines", ",", 
        "InterSec", ",", "CurrIntervalLinePos", ",", "CurrIntervalLineNeg", 
        ",", "CurrEvalError", ",", "CurrIntegratedError", ",", "CurrbcsError",
         ",", "PrintError", ",", "CurrError", ",", 
        RowBox[{"CurrErrorAcc", "=", "0"}], ",", 
        RowBox[{"CurrErrorAccs", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"NumIntegrals", ",", 
             RowBox[{"EpsilonOrderVal", "+", "1"}]}], "}"}]}], "]"}]}], ",", 
        "FixWithin", ",", "SegmentsToIntegrate", ",", 
        "UpdateMatrixExpansionError", ",", "TimeStart", ",", "TimeStart0", 
        ",", "LineReturn", ",", "FailedLine", ",", 
        RowBox[{"ExpansionsIndeterminates", "=", 
         RowBox[{"{", "}"}]}], ",", "bcsprev", ",", "CurrStatusBackup", ",", 
        "BoundaryFixPoint", ",", "CurrEvalErrorEx", ",", "CurrEvalError1", 
        ",", "CurrEvalError2", ",", "CurrEvalAtBoundaryFixPoint", ",", 
        "CurrEvalEx", ",", "AllSegmentsPredivision", ",", "TmpFile", ",", 
        "Ses", ",", "CompressedTermForExport", ",", 
        "CompressedTermForExportFN", ",", "CurrLineLR", ",", "FullLineLR", 
        ",", "TmpTmp"}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BenchmarkData", "=", 
        RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<TimeStart\>\"", "]"}], "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"MultivaluedFail", "=", "False"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Or", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"!", 
              RowBox[{"DependsQ", "[", 
               RowBox[{
                RowBox[{"Keys", "@", "line"}], ",", "#"}], "]"}]}], "&"}], "/@",
             "ExternalScalesVal"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "ReportError", "[", 
           "\"\<The point/line in the second argument does not fix all \
kinematic invariants and masses!\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ExpansionOrderVal", "=", 
        RowBox[{"FEC", "[", "ExpansionOrder", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DigitsNeeded", "=", 
        RowBox[{"FEAccuracyGoal", "+", "ISafetyDigits"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"TimeStart0", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "To", " ", "deal", " ", "with", " ", "the", " ", "output", " ", "of",
           " ", "SaveExpansions"}], " ", "=", " ", "True"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"bcs2", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a_Association", ",", "__"}], "}"}], ",", "_"}], 
            "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"bcs", "=", 
           RowBox[{"bcs2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"bcs", "=", "bcs2"}], ";"}]}], "\[IndentingNewLine]", "]"}],
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"bcs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"bcs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "//", "KeySort"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Increase", " ", "precision", " ", "of", " ", 
         RowBox[{"arguments", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Accuracy", "[", "line", "]"}], "<", "FEWorkingPrecision"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"line", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"line", "//", "Normal"}], "//", 
             RowBox[{
              RowBox[{"SetPrecision", "[", 
               RowBox[{"#", ",", 
                RowBox[{"2", "*", "FEWorkingPrecision"}]}], "]"}], "&"}]}], "//",
             "Association"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
          "PrintWarning", "[", 
           "\"\<Accuracy of the line/point is lower than the working \
precision. The precision has been artificially increased.\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"IsPoint", "[", "line", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IsPoint", "[", 
             RowBox[{"bcs", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"line", "=", 
              RowBox[{"Merge", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"bcs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "line"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"Expand", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "x"}], ")"}]}], "+", 
                   RowBox[{"x", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}]}], 
               "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Tmp", "=", 
              RowBox[{"RelateLines", "[", 
               RowBox[{
                RowBox[{"bcs", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "line", ",", "True"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"Tmp", "===", "False"}], ",", 
               RowBox[{
               "ReportError", "[", 
                "\"\<Endpoint does not lie on same line as the boundary \
conditions.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"line", "=", 
              RowBox[{
               RowBox[{"bcs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/.", 
               RowBox[{"x", "\[Rule]", 
                RowBox[{"x", " ", "Tmp"}]}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"to", "=", "1"}], ";"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"to", "=", "to2"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Accuracy", "[", "to", "]"}], "<", 
             "FEWorkingPrecision"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"to", "=", 
              RowBox[{"to", "//", 
               RowBox[{
                RowBox[{"SetPrecision", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"2", "*", "FEWorkingPrecision"}]}], "]"}], 
                "&"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
             "PrintWarning", "[", 
              "\"\<Accuracy of the endpoint is lower than the working \
precision. The precision has been artificially increased.\>\"", "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"ExpansionsIndeterminates", "=", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"bcs", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "//", "Variables"}], ",", 
          RowBox[{"\"\<?\>\"", "|", "x", "|", "Logx"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "ExpansionsIndeterminates", "]"}], ">", 
           "0"}], "&&", 
          RowBox[{
           RowBox[{"FEC", "[", "UsePade", "]"}], "===", "True"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "PrintInfo", "[", 
            "\"\<The use of Pad\[EAcute] approximants is not possible when \
transporting boundary conditions with indeterminate coefficients. Pade \
approximants will be turned off.\>\"", "]"}], "[", "1", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"DiffExpConfiguration", "[", "UsePade", "]"}], "=", 
           "False"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Check", " ", "whether", " ", "the", " ", "line", " ", "lies", " ", 
         "on", " ", "a", " ", "singularity", " ", "of", " ", "the", " ", 
         "differential", " ", 
         RowBox[{"equations", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Tmp", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"Factor", "[", 
                RowBox[{"MatricesIrreducibleFactors", "/.", "line"}], "]"}], 
               ",", "0"}], "]"}], "]"}]}], "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ReportError", "[", 
           RowBox[{
           "\"\<The line lies on a singularity of the differential equations. \
The vanishing factors are: \>\"", ",", 
            RowBox[{"MatricesIrreducibleFactors", "[", 
             RowBox[{"[", "Tmp", "]"}], "]"}], ",", "\"\<.\>\""}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Will", " ", "abort", " ", "if", " ", "something", " ", "is", " ", 
         "wrong", " ", "with", " ", "the", " ", "boundary", " ", 
         RowBox[{"conditions", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"bcs", ",", "FixAt"}], "}"}], "=", 
        RowBox[{"CheckBoundaryConditionsAndReparametrize", "[", 
         RowBox[{
          RowBox[{"bcsprev", "=", "bcs"}], ",", "line"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "bcsprev", "]"}], ">", "2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"CurrErrorAcc", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"bcsprev", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "//", "Abs"}], "//", "Max"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"CurrErrorAccs", "=", 
           RowBox[{"bcsprev", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"CurrErrorAccs", "=", 
             RowBox[{"10", "^", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MapAt", "[", 
                  RowBox[{"Accuracy", ",", 
                   RowBox[{"bcsprev", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"All", ",", "All"}], "}"}]}], "]"}], "//", 
                 RowBox[{
                  RowBox[{"SetPrecision", "[", 
                   RowBox[{"#", ",", "FEWorkingPrecision"}], "]"}], "&"}]}], 
                ")"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"CurrErrorAcc", "=", 
             RowBox[{"CurrErrorAccs", "//", "Max"}]}], ";"}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"CurrErrorAccs", "//", "Dimensions"}], "//", "Last"}], 
             ")"}], "===", 
            RowBox[{"EpsilonOrderVal", "+", "1"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"CurrErrorAccs", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"PadRight", "[", 
              RowBox[{"#", ",", 
               RowBox[{"EpsilonOrderVal", "+", "1"}], ",", 
               SuperscriptBox["10", 
                RowBox[{"-", "FEWorkingPrecision"}]]}], "]"}], "&"}], "/@", 
            "CurrErrorAccs"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PrintInfo", "[", 
         RowBox[{"\"\<Transporting boundary conditions along \>\"", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"line", "//", "Normal"}], "//", "N"}], "//", 
           "Association"}], ",", "\"\< from x = \>\"", ",", 
          RowBox[{"FixAt", "//", "N"}], ",", "\"\< to x = \>\"", ",", 
          RowBox[{"to", "//", "N"}]}], "]"}], "[", "1", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<BasicPreprocessing\>\"", "]"}], 
        "=", 
        RowBox[{
         RowBox[{"AbsoluteTime", "[", "]"}], "-", 
         RowBox[{"BenchmarkData", "[", "\"\<TimeStart\>\"", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<MatrixPreprocessing\>\"", "]"}], 
        "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "PrintInfo", "[", 
         "\"\<Preparing differential equations along current line..\>\"", 
         "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"PrepareMatricesFactored", "[", "line", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"InitializeIntegrationSequence", "[", "line", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"MySingularities", ",", "MySingularitiesImaginary"}], "}"}], 
        "=", 
        RowBox[{"FindMatrixSingularities", "[", 
         RowBox[{"line", ",", "True", ",", 
          RowBox[{"{", 
           RowBox[{"FixAt", ",", "to"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"MySingularitiesRelevant", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"MySingularities", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"FixAt", "\[LessEqual]", "#", "\[LessEqual]", "to"}], "||", 
            RowBox[{"to", "\[LessEqual]", "#", "\[LessEqual]", "FixAt"}]}], 
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FEC", "[", "UseMobius", "]"}], "===", "True"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SingularitySegments", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"#", ",", "\[IndentingNewLine]", 
               RowBox[{"GetLineRescaled", "[", 
                RowBox[{"line", ",", "#", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "MySingularities", ",", "MySingularitiesImaginary"}], 
                  "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"GetLineRescaled", "[", 
                RowBox[{"line", ",", "#", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "MySingularities", ",", "MySingularitiesImaginary"}], "}"}],
                  ",", "True"}], "]"}]}], "\[IndentingNewLine]", "}"}], "&"}],
             "/@", "MySingularitiesRelevant"}]}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SingularitySegments", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"GetLineRescaled", "[", 
                RowBox[{"line", ",", "#", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "MySingularities", ",", "MySingularitiesImaginary"}], 
                  "}"}]}], "]"}]}], "}"}], "&"}], "/@", 
            "MySingularitiesRelevant"}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PrintInfo", "[", 
         RowBox[{
         "\"\<Possible singularities along line at positions \>\"", ",", 
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"SingularitySegments", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"\[Infinity]", "|", 
              RowBox[{"-", "\[Infinity]"}]}]}], "]"}], "//", "N"}], ",", 
          "\"\<.\>\""}], "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<MatrixPreprocessing\>\"", "]"}], 
        "=", 
        RowBox[{
         RowBox[{"AbsoluteTime", "[", "]"}], "-", 
         RowBox[{
         "BenchmarkData", "[", "\"\<MatrixPreprocessing\>\"", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<PoleIntervals\>\"", "]"}], "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
          "\"\<Dynamic\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "PrintInfo", "[", 
            "\"\<Determining intervals around possible singularities.\>\"", 
            "]"}], "[", "1", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"PoleIntervals", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
              "\"\<Dynamic\>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"PrintInfo", "[", 
                RowBox[{
                "\"\<Expanding differential equations around x = \>\"", ",", 
                 RowBox[{
                  RowBox[{"sline", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "//", "N"}], ",", 
                 "\"\<.\>\""}], "]"}], "[", "1", "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"PrepareAnalyticContinuation", "[", 
               RowBox[{"sline", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"PrepareMatricesFrom", 
               RowBox[{"(*", "Mobius", "*)"}], "[", 
               RowBox[{"line", ",", 
                RowBox[{"sline", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], 
               RowBox[{"(*", 
                RowBox[{",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "sline", "]"}], "===", "3"}], ",", 
                   RowBox[{"sline", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "Null"}], "]"}]}], 
                "*)"}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Tmp", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "#"}], ",", "#"}], "}"}], "&"}], "@", 
                RowBox[{"GetMatricesPrecisionDistance", "[", 
                 RowBox[{"sline", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
              "\"\<Predivision\>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Tmp", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "RadiusOfConvergenceVal"}], "/", 
                  RowBox[{"FEC", "[", "DivisionOrder", "]"}]}], ",", 
                 RowBox[{"RadiusOfConvergenceVal", "/", 
                  RowBox[{"FEC", "[", "DivisionOrder", "]"}]}]}], "}"}]}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Tmp", "=", 
            RowBox[{"{", 
             RowBox[{"sline", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"RelateLinesPoint", "[", 
                 RowBox[{"line", ",", 
                  RowBox[{"sline", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "/@",
                "Tmp"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"PrintInfo", "[", 
             RowBox[{"\"\<Expansion around x = \>\"", ",", 
              RowBox[{
               RowBox[{"sline", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "//", "N"}], ",", " ", 
              "\"\< is valid within region x \[Element] [\>\"", ",", 
              RowBox[{
               RowBox[{"Tmp", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}], "//", "N"}], ",", 
              "\"\<, \>\"", ",", 
              RowBox[{
               RowBox[{"Tmp", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}], "//", "N"}], ",", 
              "\"\<].\>\""}], "]"}], "[", "2", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "Tmp"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"sline", ",", "SingularitySegments"}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<PoleIntervals\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"AbsoluteTime", "[", "]"}], "-", 
         RowBox[{"BenchmarkData", "[", "\"\<PoleIntervals\>\"", "]"}]}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Main", " ", 
         RowBox[{"loop", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"DependsQ", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "===", "0"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"SingularitySegments", "//", "PChop"}], ")"}]}], ",", 
           "True"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "PrintDebug", "[", "\"\<First expansion is at singularity.\>\"", 
            "]"}], "[", "1", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<SegmentCounting\>\"", "]"}], "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Duplicate", " ", "of", " ", "the", " ", "code", " ", "block", " ", 
          "below"}], ",", " ", 
         RowBox[{"without", " ", "print", " ", "statements", " ", "and", " ", 
          RowBox[{"integrations", ".", " ", "This"}], " ", "counts", " ", 
          "the", " ", "number", " ", "of", " ", 
          RowBox[{"segments", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AllSegmentsPredivision", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
          "\"\<Predivision\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "PrintInfo", "[", "\"\<Analyzing integration segments.\>\"", "]"}],
            "[", "1", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"PoleIntervals1", "=", "PoleIntervals"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"MyCenter", "=", "FixAt"}], ";", "\[IndentingNewLine]", 
          RowBox[{"CurrLine", "=", 
           RowBox[{"GetLineRescaled", "[", 
            RowBox[{"line", ",", "FixAt", ",", 
             RowBox[{"{", 
              RowBox[{"MySingularities", ",", "MySingularitiesImaginary"}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"AllSegmentsPredivision", ",", "CurrLine"}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Done", "=", "False"}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"!", "Done"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"PoleIntervals", "=", 
              RowBox[{"Select", "[", 
               RowBox[{"PoleIntervals", ",", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "===", 
                    "MyCenter"}], ")"}]}], "&"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"CurrIntervalCurrLine", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "RadiusOfConvergenceVal"}], "/", 
                 RowBox[{"FEC", "[", "DivisionOrder", "]"}]}], ",", 
                RowBox[{"RadiusOfConvergenceVal", "/", 
                 RowBox[{"FEC", "[", "DivisionOrder", "]"}]}]}], "}"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"CurrIntervalLine", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"RelateLinesPoint", "[", 
                 RowBox[{"line", ",", "CurrLine", ",", "#"}], "]"}], "&"}], "/@",
                "CurrIntervalCurrLine"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"IntervalContainsQ", "[", 
                RowBox[{"CurrIntervalLine", ",", "to"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"CurrEvalPoint", "=", "to"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"CurrEvalPointCurrLine", "=", 
                 RowBox[{"RelateLinesPoint", "[", 
                  RowBox[{"CurrLine", ",", "line", ",", "CurrEvalPoint"}], 
                  "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Done", "=", "True"}], ";"}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"SegmentCounter", "+=", "1"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"to", ">", "FixAt"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Tmp", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"PoleIntervals", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ">", "MyCenter"}], 
                    "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Tmp", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"PoleIntervals", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "<=", "MyCenter"}],
                     "&"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Tmp2", "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"IntervalOverlapQ", "[", 
                    RowBox[{"CurrIntervalLine", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@",
                   "Tmp"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"Tmp2", "=", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"Tmp2", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "True"}], 
                   "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"NextIsPole", "=", 
                 RowBox[{
                  RowBox[{"Length", "[", "Tmp2", "]"}], ">", "0"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"NextIsPole", ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Tmp", "=", 
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"Tmp2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"to", ">", "FixAt"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"FixWithin", "=", 
                    RowBox[{"IntervalIntersec", "[", 
                    RowBox[{
                    RowBox[{"IntervalIntersec", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"MyCenter", ",", 
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    "CurrIntervalLine"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"CurrEvalPoint", "=", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"FixWithin", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{"FixWithin", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "2"]}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"FixWithin", "=", 
                    RowBox[{"IntervalIntersec", "[", 
                    RowBox[{
                    RowBox[{"IntervalIntersec", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "MyCenter"}], 
                    "}"}], ",", 
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    "CurrIntervalLine"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"CurrEvalPoint", "=", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"FixWithin", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{"FixWithin", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "2"]}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"CurrEvalPointCurrLine", "=", 
                    RowBox[{"RelateLinesPoint", "[", 
                    RowBox[{"CurrLine", ",", "line", ",", "CurrEvalPoint"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"MyCenter", "=", 
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"CurrLine", "=", 
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "UseMobius", "]"}], "===", "True"}], 
                    ",", 
                    RowBox[{"CurrLineNoMobius", "=", 
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "3"}], "]"}], "]"}]}]}], "]"}], ";"}], 
                  "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"Finite", " ", "point"}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"to", ">", "FixAt"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"CurrEvalPoint", "=", 
                    RowBox[{"CurrIntervalLine", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CurrEvalPoint", "=", 
                    RowBox[{"CurrIntervalLine", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]",
                     "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"CurrEvalPointCurrLine", "=", 
                    RowBox[{"RelateLinesPoint", "[", 
                    RowBox[{"CurrLine", ",", "line", ",", "CurrEvalPoint"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
                    "\"\<Dynamic\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MyCenter", "=", "CurrEvalPoint"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
                    "\"\<Predivision\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"to", ">", "FixAt"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"MyCenter", "=", 
                    RowBox[{"FindNextCenterPointL", "[", 
                    RowBox[{"CurrEvalPoint", ",", "MySingularities"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"MyCenter", "=", 
                    RowBox[{"FindNextCenterPointR", "[", 
                    RowBox[{"CurrEvalPoint", ",", "MySingularities"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"CurrLine", "=", 
                    RowBox[{"GetLineRescaled", "[", 
                    RowBox[{"line", ",", "MyCenter", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MySingularities", ",", "MySingularitiesImaginary"}], 
                    "}"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"AllSegmentsPredivision", ",", "CurrLine"}], "]"}], ";",
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"PoleIntervals", "=", "PoleIntervals1"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PrintInfo", "[", 
            RowBox[{"\"\<Segments to integrate: \>\"", ",", 
             RowBox[{"SegmentsToIntegrate", "=", "SegmentCounter"}], ",", 
             "\"\<.\>\""}], "]"}], "[", "1", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<SegmentCounting\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"AbsoluteTime", "[", "]"}], "-", 
         RowBox[{"BenchmarkData", "[", "\"\<SegmentCounting\>\"", "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<AllPreprocessing\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"AbsoluteTime", "[", "]"}], "-", 
         RowBox[{"BenchmarkData", "[", "\"\<TimeStart\>\"", "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{
           RowBox[{"FEC", "[", "\"\<Parallel\>\"", "]"}], "===", "False"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "PrintInfo", "[", "\"\<Starting parallel matrix expansion..\>\"", 
            "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"TmpFile", "=", 
           RowBox[{"FileNameJoin", "[", 
            RowBox[{"{", 
             RowBox[{"$TemporaryDirectory", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Ses", "=", 
                 RowBox[{"ToString", "[", "$SessionID", "]"}]}], ")"}], "<>", 
               "\"\<SessionData.mx\>\""}]}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"DumpSave", "[", 
           RowBox[{"TmpFile", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<DiffExp`\>\"", ",", "\"\<DiffExpGridSampler`\>\""}],
              "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"CloseKernels", "[", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"LaunchKernels", "[", 
           RowBox[{"FEC", "[", "\"\<Parallel\>\"", "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"$DistributedContexts", "=", "None"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"file", "=", "TmpFile"}], "}"}], ",", 
            RowBox[{"ParallelEvaluate", "[", 
             RowBox[{"Get", "[", "file", "]"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"DeleteFile", "[", "TmpFile", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"AllSegmentsPredivision", "=", 
           RowBox[{"AllSegmentsPredivision", "//", "DeleteDuplicates"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"AParallelCounter", "=", "0"}], ";", "\[IndentingNewLine]", 
          RowBox[{"SetSharedVariable", "[", "AParallelCounter", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "AParallelCounter", "]"}], ",", 
            "\"\< / \>\"", ",", 
            RowBox[{"Length", "@", "AllSegmentsPredivision"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"lin", "=", "line"}], ",", 
                 RowBox[{"CurrLin", "=", "mylin"}], ",", 
                 RowBox[{"tmpdir", "=", "$TemporaryDirectory"}], ",", 
                 RowBox[{"PSes", "=", "Ses"}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"ParallelSubmit", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"MyTiming", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"PrepareMatricesFrom", "[", 
                    RowBox[{"lin", ",", "CurrLin"}], "]"}], "//", 
                    "AbsoluteTiming"}], "//", "First"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"MyFileName", "=", 
                  RowBox[{"FileNameJoin", "[", 
                   RowBox[{"{", 
                    RowBox[{"tmpdir", ",", 
                    RowBox[{"PSes", "<>", 
                    RowBox[{"Hash", "[", 
                    RowBox[{
                    "CurrLin", ",", "\"\<SHA256\>\"", ",", 
                    "\"\<HexString\>\""}], "]"}], "<>", "\"\<.mx\>\""}]}], 
                    "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Export", "[", 
                  RowBox[{"MyFileName", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DEqnMatricesFactored", "[", "CurrLin", "]"}], 
                    ",", 
                    RowBox[{"AlphabetLogRulesFactored", "[", "CurrLin", "]"}],
                     ",", 
                    RowBox[{"DEqnMatricesExpanded", "[", "CurrLin", "]"}]}], 
                    "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"ClearMatrices", "[", "CurrLin", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"PrintInfo", "[", 
                   RowBox[{"\"\<Finished: \>\"", ",", 
                    RowBox[{"CurrLin", "//", "N"}], ",", "\"\< in \>\"", ",", 
                    RowBox[{"MyTiming", "//", "N"}], ",", "\"\<s.\>\""}], 
                   "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"AParallelCounter", "++"}], ";"}], 
                "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"mylin", ",", "AllSegmentsPredivision"}], "}"}]}], 
            "]"}], "//", "WaitAll"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PrintInfo", "[", "\"\<Loading results..\>\"", "]"}], "[", 
           "1", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Check", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"TmpFile", "=", 
                 RowBox[{"Import", "@", 
                  RowBox[{"FileNameJoin", "[", 
                   RowBox[{"{", 
                    RowBox[{"$TemporaryDirectory", ",", 
                    RowBox[{"Ses", "<>", 
                    RowBox[{"Hash", "[", 
                    RowBox[{
                    "mylin", ",", "\"\<SHA256\>\"", ",", 
                    "\"\<HexString\>\""}], "]"}], "<>", "\"\<.mx\>\""}]}], 
                    "}"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"DEqnMatricesFactored", "[", "mylin", "]"}], "=", 
                 RowBox[{"TmpFile", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"AlphabetLogRulesFactored", "[", "mylin", "]"}], "=", 
                 RowBox[{"TmpFile", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"DEqnMatricesExpanded", "[", "mylin", "]"}], "=", 
                 RowBox[{"TmpFile", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"PrintInfo", "[", 
                  RowBox[{"\"\<Loaded: \>\"", ",", 
                   RowBox[{"mylin", "//", "N"}]}], "]"}], "[", "1", "]"}], 
                ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"KeyDropFrom", "[", 
                 RowBox[{"DEqnMatricesFactored", ",", "mylin"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"KeyDropFrom", "[", 
                 RowBox[{"AlphabetLogRulesFactored", ",", "mylin"}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"KeyDropFrom", "[", 
                 RowBox[{"DEqnMatricesExpanded", ",", "mylin"}], "]"}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"mylin", ",", "AllSegmentsPredivision"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"DeleteFile", "[", 
              RowBox[{"FileNameJoin", "[", 
               RowBox[{"{", 
                RowBox[{"$TemporaryDirectory", ",", 
                 RowBox[{"Ses", "<>", 
                  RowBox[{"Hash", "[", 
                   RowBox[{
                   "mylin", ",", "\"\<SHA256\>\"", ",", "\"\<HexString\>\""}],
                    "]"}], "<>", "\"\<.mx\>\""}]}], "}"}], "]"}], "]"}], 
             ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"mylin", ",", "AllSegmentsPredivision"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"CloseKernels", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"SegmentCounter", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ExpansionOrders", "=", 
        RowBox[{"{", "ExpansionOrderVal", "}"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
          "\"\<Predivision\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"DigitsNeeded", "=", 
           RowBox[{"FEAccuracyGoal", "+", 
            RowBox[{"Ceiling", "[", 
             RowBox[{"Log10", "[", "SegmentsToIntegrate", "]"}], "]"}], "+", 
            "ISafetyDigits"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"UpdateMatrixExpansionError", "[", "]"}], ":=", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "CurrErrorTerms", ",", "CurrErrorLeft", ",", "CurrErrorRight"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CurrErrorTerms", "=", 
            RowBox[{"GetLargestTerm", "[", "CurrLine", "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"FixAtLineSegment", "===", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"CurrErrorLeft", "=", "0"}], ";"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"CurrErrorLeft", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"CurrErrorTerms", "/.", 
                    RowBox[{"(", 
                    RowBox[{"AnalyticContinuationReplacements", "/.", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FixAtLineSegment", "\[GreaterEqual]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Theta]p", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Theta]m", "\[Rule]", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Theta]p", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Theta]m", "\[Rule]", "1"}]}], "}"}]}], "]"}]}],
                     ")"}]}], "/.", 
                    RowBox[{"Logx", "\[Rule]", 
                    RowBox[{"Log", "[", "x", "]"}]}]}], "/.", 
                   RowBox[{"x", "\[Rule]", "FixAtLineSegment"}]}], "//", 
                  "Abs"}], "//", 
                 RowBox[{
                  RowBox[{"N", "[", 
                   RowBox[{"#", ",", "FEWorkingPrecision"}], "]"}], "&"}]}], "//",
                 "Max"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"CurrErrorRight", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"CurrErrorTerms", "/.", 
                  RowBox[{"(", 
                   RowBox[{"AnalyticContinuationReplacements", "/.", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"CurrEvalPointCurrLine", "\[GreaterEqual]", "0"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Theta]p", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Theta]m", "\[Rule]", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\[Theta]p", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Theta]m", "\[Rule]", "1"}]}], "}"}]}], "]"}]}],
                    ")"}]}], "/.", 
                 RowBox[{"Logx", "\[Rule]", 
                  RowBox[{"Log", "[", "x", "]"}]}]}], "/.", 
                RowBox[{"x", "\[Rule]", "CurrEvalPointCurrLine"}]}], "//", 
               "Abs"}], "//", 
              RowBox[{
               RowBox[{"N", "[", 
                RowBox[{"#", ",", "FEWorkingPrecision"}], "]"}], "&"}]}], "//",
              "Max"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"CurrError", "=", 
            RowBox[{"Max", "[", 
             RowBox[{"CurrErrorLeft", ",", "CurrErrorRight"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"EvaluateCurrPoint", "[", "]"}], ":=", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "ErrorSufficient", ",", "FixAtLineSegment", ",", "NumExpansions", 
            ",", "DigitsHave", ",", "DeltaDigits", ",", 
            "DEqnMatricesExpandedBackup", ",", "CurrErrorBackup", ",", 
            "MyCounter"}], "}"}], ",", 
          RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], 
                "\[Equal]", "\"\<Predivision\>\""}], "&&", 
               RowBox[{"KeyExistsQ", "[", 
                RowBox[{"DiffExpConfiguration", ",", "AccuracyGoal"}], "]"}], 
               "&&", 
               RowBox[{
                RowBox[{
                "DiffExpConfiguration", "[", "\"\<AccuracyGoalValidate\>\"", 
                 "]"}], "===", "\"\<Before\>\""}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"NumericQ", "[", 
                  RowBox[{"DiffExpConfiguration", "[", "AccuracyGoal", "]"}], 
                  "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"ErrorSufficient", "=", "False"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"FixAtLineSegment", "=", 
                   RowBox[{"GetMatchingPoint", "[", 
                    RowBox[{"CurrLine", ",", 
                    RowBox[{"Currbcs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ExpansionOrderVal", "=", 
                   RowBox[{"Ceiling", "[", 
                    RowBox[{"Mean", "[", "ExpansionOrders", "]"}], "]"}]}], 
                  ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                   "PrintInfo", "[", 
                    "\"\<Determining expansion order for given accuracy goal.\
\>\"", "]"}], "[", "2", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"NumExpansions", "=", "1"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"While", "[", 
                   RowBox[{
                    RowBox[{"!", "ErrorSufficient"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PrintInfo", "[", 
                    RowBox[{
                    "\"\<Expanding differential equations at order: \>\"", 
                    ",", "ExpansionOrderVal"}], "]"}], "[", "2", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"KeyDropFrom", "[", 
                    RowBox[{"DEqnMatricesExpanded", ",", "CurrLine"}], "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"PrepareMatricesExpanded", "[", "CurrLine", "]"}],
                     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"UpdateMatrixExpansionError", "[", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"DigitsHave", "=", 
                    RowBox[{"-", 
                    RowBox[{"Log10", "[", "CurrError", "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"DeltaDigits", "=", 
                    RowBox[{"DigitsNeeded", "-", "DigitsHave"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"DeltaDigits", "<", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NumExpansions", "\[Equal]", "1"}], "&&", 
                    RowBox[{
                    RowBox[{"-", "DeltaDigits"}], ">", 
                    "IDigitsSurplusDecreaseExpansionOrder"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MyCounter", "=", "1"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "DeltaDigits"}], ">", 
                    "IDigitsSurplusDecreaseExpansionOrder"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "ExpansionOrderVal", "-", "IExpansionOrderDecrease"}], ">=",
                     "IMinExpansionOrder"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MyCounter", ">", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PrintInfo", "[", 
                    RowBox[{
                    "\"\<Reducing expansion order..: \>\"", ",", 
                    "ExpansionOrderVal"}], "]"}], "[", "2", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"DEqnMatricesExpandedBackup", "=", 
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"CurrErrorBackup", "=", "CurrError"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    "ExpansionOrderVal", "-=", "IExpansionOrderDecrease"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], "ExpansionOrderVal"]}], 
                    "&"}], "/@", 
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}]}]}], 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"UpdateMatrixExpansionError", "[", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"DigitsHave", "=", 
                    RowBox[{"-", 
                    RowBox[{"Log10", "[", "CurrError", "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"DeltaDigits", "=", 
                    RowBox[{"DigitsNeeded", "-", "DigitsHave"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"MyCounter", "++"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    "ExpansionOrderVal", "+=", "IExpansionOrderDecrease"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "=", 
                    "DEqnMatricesExpandedBackup"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CurrError", "=", "CurrErrorBackup"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintInfo", "[", 
                    RowBox[{"\"\<Error of matrix expansions: \>\"", ",", 
                    RowBox[{"CurrError", "//", "N"}]}], "]"}], "[", "2", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MyCounter", "==", "2"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PrintInfo", "[", 
                    RowBox[{
                    "\"\<Precision reached at order: \>\"", ",", 
                    "ExpansionOrderVal"}], "]"}], "[", "2", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PrintInfo", "[", 
                    RowBox[{"\"\<Error of matrix expansions: \>\"", ",", 
                    RowBox[{"CurrError", "//", "N"}]}], "]"}], "[", "2", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintInfo", "[", 
                    RowBox[{
                    "\"\<Precision reached at order: \>\"", ",", 
                    "ExpansionOrderVal"}], "]"}], "[", "2", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"ExpansionOrders", ",", "ExpansionOrderVal"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "ExpansionOrders", "]"}], ">", 
                    "IExpansionOrdersAveraging"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ExpansionOrders", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"ExpansionOrders", ",", "1"}], "]"}]}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ErrorSufficient", "=", "True"}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PrintInfo", "[", 
                    RowBox[{"\"\<Error of matrix expansions: \>\"", ",", 
                    RowBox[{"CurrError", "//", "N"}]}], "]"}], "[", "2", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    "ExpansionOrderVal", "+=", "IExpansionOrderIncrease"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"NumExpansions", "++"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"LastBoundaryConditions", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"Currbcs", ",", "CurrErrorAccs"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"LastIntegrateSystemCall", "=", 
               RowBox[{"IntegrateSystem2", "[", 
                RowBox[{"Currbcs", ",", "CurrLine", ",", 
                 RowBox[{"{", "\"\<TransportToCall\>\"", "}"}]}], "]"}]}], 
              ";"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"CurrIntegrated", "=", 
             RowBox[{"IntegrateSystem", "[", 
              RowBox[{"Currbcs", ",", "CurrLine", ",", 
               RowBox[{"{", "\"\<TransportToCall\>\"", "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"SaveExpansions", "===", "True"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"TmpRelateLines", "=", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"RelateLines", "[", 
                  RowBox[{"CurrLine", ",", "line"}], "]"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"AllIntegrationData", ",", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"CurrLine", ",", 
                   RowBox[{"(*", " ", 
                    RowBox[{"Current", " ", "line"}], " ", "*)"}], 
                   "\[IndentingNewLine]", "TmpRelateLines", ",", " ", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "Change", " ", "of", " ", "line", " ", "parameter", " ", 
                    "from", " ", "CurrLine", " ", "to", " ", "line"}], " ", 
                    "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"to", ">", "FixAt"}], ",", "Identity", ",", 
                    "Reverse"}], "]"}], "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Limit", "[", 
                    RowBox[{
                    RowBox[{"RelateLines", "[", 
                    RowBox[{"line", ",", 
                    RowBox[{"Currbcs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"x", "\[Rule]", "0"}]}], "]"}], ",", 
                    "CurrEvalPoint"}], "}"}]}], ",", 
                   RowBox[{"(*", "  ", 
                    RowBox[{
                    "Expansions", " ", "gives", " ", "results", " ", "on", 
                    " ", "line", " ", "between", " ", "x", " ", "and", " ", 
                    "y"}], " ", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Limit", "[", 
                    RowBox[{
                    RowBox[{"RelateLines", "[", 
                    RowBox[{"CurrLine", ",", 
                    RowBox[{"Currbcs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"x", "\[Rule]", "0"}]}], "]"}], ",", 
                    "CurrEvalPointCurrLine"}], "}"}], ",", 
                   RowBox[{"(*", "  ", 
                    RowBox[{
                    "Expansions", " ", "gives", " ", "results", " ", "on", 
                    " ", "CurrLine", " ", "between", " ", "x", " ", "and", 
                    " ", "y"}], " ", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "FEC", "[", "\"\<SaveExpansionsCompress\>\"", "]"}], "===",
                     "True"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CompressedTermForExport", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "ApplyAnalyticContinuation", "[", "CurrIntegrated", "]"}],
                     "//", "Project\[Theta]s"}], ")"}], "//", "Compress"}]}], 
                    " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "And", " ", "the", " ", "expansion", " ", "data", " ", 
                    "itself"}], " ", "*)"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    RowBox[{
                    "FEC", "[", "\"\<SaveExpansionsCompressDirectory\>\"", 
                    "]"}], "===", "\"\<?\>\""}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CompressedTermForExportFN", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "FEC", "[", "\"\<SaveExpansionsCompressDirectory\>\"", 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"Hash", "[", 
                    RowBox[{
                    "CompressedTermForExport", ",", "\"\<SHA256\>\"", ",", 
                    "\"\<HexString\>\""}], "]"}], "<>", "\"\<.m\>\""}]}], 
                    "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Export", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    "CompressedTermForExportFN", ",", "\[IndentingNewLine]", 
                    "CompressedTermForExport"}], "\[IndentingNewLine]", "]"}],
                     ";", "\[IndentingNewLine]", 
                    "CompressedTermForExportFN"}], "\[IndentingNewLine]", ",",
                     "\[IndentingNewLine]", "CompressedTermForExport"}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "ApplyAnalyticContinuation", "[", "CurrIntegrated", "]"}],
                     "//", "Project\[Theta]s"}], ")"}]}], " ", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "And", " ", "the", " ", "expansion", " ", "data", " ", 
                    "itself"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
                  "\[IndentingNewLine]", "}"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Write", " ", "out", " ", "points", " ", "if", " ", "provided"}],
              " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"SampleAtList", "===", 
                RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"CurrLineLR", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Limit", "[", 
                   RowBox[{
                    RowBox[{"RelateLines", "[", 
                    RowBox[{"CurrLine", ",", 
                    RowBox[{"Currbcs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"x", "\[Rule]", "0"}]}], "]"}], ",", 
                  "CurrEvalPointCurrLine"}], "}"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"FullLineLR", "=", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"to", ">", "FixAt"}], ",", "Identity", ",", 
                   "Reverse"}], "]"}], "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Limit", "[", 
                    RowBox[{
                    RowBox[{"RelateLines", "[", 
                    RowBox[{"line", ",", 
                    RowBox[{"Currbcs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"x", "\[Rule]", "0"}]}], "]"}], ",", 
                   "CurrEvalPoint"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "SampleAtList", " ", "has", " ", "the", " ", "form", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"xval", ",", " ", "filename"}], "}"}], ",", " ", 
                   "..."}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Do", "[", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"PrintInfo", "[", 
                    RowBox[{"\"\<Evaluating and exporting at x = \>\"", ",", 
                    RowBox[{"MyPoint", "//", "N"}], ",", "\"\<.\>\""}], "]"}],
                    "[", "2", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Export", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SampleAtList", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"line", "/.", 
                    RowBox[{"x", "\[Rule]", "MyPoint"}]}], " ", "//", " ", 
                    RowBox[{
                    RowBox[{"Hash", "[", 
                    RowBox[{
                    RowBox[{"Normal", "[", 
                    RowBox[{"KeySort", "[", "#", "]"}], "]"}], ",", " ", 
                    "\"\<SHA256\>\"", ",", " ", "\"\<HexString\>\""}], "]"}], 
                    "&"}]}], ")"}], "<>", "\"\<.m\>\""}]}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                    "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"line", "/.", 
                    RowBox[{"x", "\[Rule]", "MyPoint"}]}], "//", "Normal"}], "//",
                     "Association"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SEval", "[", "\[IndentingNewLine]", 
                    RowBox[{"CurrIntegrated", ",", "\[IndentingNewLine]", 
                    RowBox[{"RelateLinesPoint", "[", 
                    RowBox[{"CurrLine", ",", "line", ",", "MyPoint"}], 
                    "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "SampleAtList", "]"}], "===", 
                    "3"}], ",", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"SampleAtList", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", 
                    "Identity"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]",
                  "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"MyPoint", ",", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    "All", " ", "points", " ", "lying", " ", "in", " ", "the",
                     " ", "current", " ", "segment"}], " ", "*)"}], 
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"SampleAtList", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FullLineLR", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "#", "<=", 
                    RowBox[{"FullLineLR", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], 
                  "}"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"If", " ", "MultivaluedFail", " ", "is", " ", "True"}], 
              ",", " ", 
              RowBox[{
              "then", " ", "multivalued", " ", "functions", " ", "were", " ", 
               "encountered", " ", "but", " ", "no", " ", "singularity", " ", 
               "was", " ", 
               RowBox[{"expected", ".", " ", "We"}], " ", "then", " ", 
               "abort", " ", "the", " ", "computation", " ", 
               RowBox[{"early", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", "MultivaluedFail"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"PrintInfo", "[", 
                 RowBox[{"\"\<Evaluating at x = \>\"", ",", 
                  RowBox[{"CurrEvalPoint", "//", "N"}]}], "]"}], "[", "1", 
                "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"Global`DebugData", "=", "CurrIntegrated"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{
                 "Either", " ", "returns", " ", "the", " ", "Pade", " ", 
                  "approximant"}], ",", " ", 
                 RowBox[{
                 "or", " ", "the", " ", "series", " ", "with", " ", "Normal", 
                  " ", "applied"}]}], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"CurrEvalEx", "=", 
                RowBox[{"SEval1", "[", "CurrIntegrated", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"CurrEval", "=", 
                RowBox[{"SEval2", "[", 
                 RowBox[{"CurrEvalEx", ",", "CurrEvalPointCurrLine"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{
                   RowBox[{"FEC", "[", "\"\<EstimateError\>\"", "]"}], "===", 
                   "False"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Switch", "[", 
                   RowBox[{
                    RowBox[{"FEC", "[", "\"\<EstimateError\>\"", "]"}], ",", 
                    "\[IndentingNewLine]", "\"\<Fast\>\"", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "Obtain", " ", "the", " ", "point", " ", "at", " ", 
                    "which", " ", "the", " ", "boundary", " ", "conditions", 
                    " ", "were", " ", 
                    RowBox[{"fixed", "."}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"BoundaryFixPoint", "=", 
                    RowBox[{"GetMatchingPoint", "[", 
                    RowBox[{"CurrLine", ",", 
                    RowBox[{"Currbcs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "We", " ", "compute", " ", "the", " ", "error", " ", 
                    "both", " ", "at", " ", "the", " ", "position", " ", 
                    "where", " ", "the", " ", "boundary", " ", "conditions", 
                    " ", "were", " ", "fixed"}], ",", " ", 
                    RowBox[{
                    "and", " ", "at", " ", "the", " ", "evaluation", " ", 
                    "point", " ", "of", " ", "the", " ", "current", " ", 
                    "line", " ", 
                    RowBox[{"segment", "."}]}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"CurrEvalErrorEx", "=", 
                    RowBox[{"SEval1", "[", 
                    RowBox[{"CurrIntegrated", "//", 
                    RowBox[{
                    RowBox[{"DecreaseSeriesOrderBy", "[", 
                    RowBox[{"#", ",", "ICurrEvalErrorSeriesDecrease"}], "]"}],
                     "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"CurrEvalError1", "=", 
                    RowBox[{"SEval2", "[", 
                    RowBox[{"CurrEvalErrorEx", ",", "CurrEvalPointCurrLine"}],
                     "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "We", " ", "avoid", " ", "the", " ", "point", " ", "0"}], 
                    ",", " ", 
                    RowBox[{
                    "because", " ", "there", " ", "might", " ", "be", " ", 
                    "logarithms"}], ",", " ", 
                    RowBox[{
                    "and", " ", "the", " ", "error", " ", "should", " ", "be",
                     " ", "manifestly", " ", 
                    RowBox[{"zero", "."}]}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"BoundaryFixPoint", "===", "0"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CurrEvalError2", "=", 
                    RowBox[{"SEval2", "[", 
                    RowBox[{"CurrEvalErrorEx", ",", "BoundaryFixPoint"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"CurrEvalAtBoundaryFixPoint", "=", 
                    RowBox[{"SEval2", "[", 
                    RowBox[{"CurrEvalEx", ",", "BoundaryFixPoint"}], "]"}]}], 
                    ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"As", " ", "a", " ", "small", " ", "hack"}], ",", 
                    " ", 
                    RowBox[{
                    "we", " ", "set", " ", "the", " ", "same", " ", "values", 
                    " ", "as", " ", "at", " ", "the", " ", 
                    RowBox[{"endpoint", "."}]}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CurrEvalError2", "=", "CurrEvalError1"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CurrEvalAtBoundaryFixPoint", "=", "CurrEval"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"PrintInfo", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
                    "\"\<Predivision\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<Integrated segment \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"SegmentCounter", "-", "1"}], "]"}], "<>", 
                    "\"\< out of \>\"", "<>", 
                    RowBox[{"ToString", "[", "SegmentsToIntegrate", "]"}], 
                    "<>", "\"\< in \>\""}], ",", "\[IndentingNewLine]", 
                    "\"\<Integrated segment in \>\""}], "\[IndentingNewLine]",
                    "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], "-", "TimeStart"}], "//",
                    "N"}], ",", "\[IndentingNewLine]", "\"\< seconds.\>\""}], 
                 "\[IndentingNewLine]", "]"}], "[", "1", "]"}], ";"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "Computation", " ", "should", " ", "be", " ", "aborted", " ", 
                "and", " ", "last", " ", "integrated", " ", "system", " ", 
                "should", " ", "be", " ", "returned"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"FailedLine", "=", "CurrLine"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"CurrEval", "=", "CurrIntegrated"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"CurrEvalError", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"{", 
                   RowBox[{"ii", ",", "NumIntegrals"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"jj", ",", "0", ",", "EpsilonOrderVal"}], "}"}]}], 
                 "]"}]}], ";"}]}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{
                "PrintInfo", "[", "\"\<Quitting prematurely.\>\"", "]"}], "[",
                 "1", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"DebugData", "=", "CurrEval"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Abort", "[", "]"}], ";"}], "*)"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ComputeErrorsPerIndeterminate", "[", 
         RowBox[{"aaa_", ",", "bbb_", ",", "ExpansionsIndeterminates_"}], 
         "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "TmpErrors", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TmpErrors", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"LogxCoeffNS", "[", 
               RowBox[{
                RowBox[{"aaa", "-", "bbb"}], ",", "logxord"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"logxord", ",", "0", ",", "IMaxLogOrder"}], "}"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"TmpErrors", "=", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
                   RowBox[{"Append", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Coefficient", "[", 
                    RowBox[{
                    RowBox[{"TmpErrors", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "ii", ",", "jj"}], "]"}], "]"}], ",", 
                    "var"}], "]"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "ExpansionsIndeterminates"}], "}"}]}],
                     "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"TmpErrors", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "ii", ",", "jj"}], "]"}], "]"}], "/.", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[Rule]", "0"}], "&"}], "/@", 
                    "ExpansionsIndeterminates"}], ")"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
                   "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}],
                  "//", "Abs"}], "//", "Max"}], ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"TmpErrors", "//", "Dimensions"}], ")"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"jj", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"TmpErrors", "//", "Dimensions"}], ")"}], "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}], "//", 
             "N"}]}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PrintError", "[", "]"}], ":=", 
        RowBox[{"Block", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TmpErrors", ",", "TmpErrors1", ",", "TmpErrors2"}], "}"}],
           ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", "MultivaluedFail"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ExpansionsIndeterminates", "=", 
               RowBox[{"DeleteCases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Currbcs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "//", "Variables"}], ",", 
                 RowBox[{"\"\<?\>\"", "|", "x", "|", "Logx"}]}], "]"}]}], ";",
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"TmpErrors1", "=", 
               RowBox[{"ComputeErrorsPerIndeterminate", "[", 
                RowBox[{
                "CurrEvalError1", ",", "CurrEval", ",", 
                 "ExpansionsIndeterminates"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"TmpErrors2", "=", 
               RowBox[{"ComputeErrorsPerIndeterminate", "[", 
                RowBox[{
                "CurrEvalError2", ",", "CurrEvalAtBoundaryFixPoint", ",", 
                 "ExpansionsIndeterminates"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"TmpErrors", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Max", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"TmpErrors1", "[", 
                    RowBox[{"[", 
                    RowBox[{"ii", ",", "jj"}], "]"}], "]"}], ",", 
                    RowBox[{"TmpErrors2", "[", 
                    RowBox[{"[", 
                    RowBox[{"ii", ",", "jj"}], "]"}], "]"}]}], "}"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"ii", ",", 
                   RowBox[{"First", "@", 
                    RowBox[{"Dimensions", "@", "TmpErrors1"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"jj", ",", 
                   RowBox[{"Last", "@", 
                    RowBox[{"Dimensions", "@", "TmpErrors1"}]}]}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"CurrError", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Flatten", "[", "TmpErrors", "]"}], "//", "Abs"}], "//",
                 "Max"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Switch", "[", 
               RowBox[{
                RowBox[{"FEC", "[", "\"\<EstimateError\>\"", "]"}], ",", 
                "\[IndentingNewLine]", "\"\<Fast\>\"", ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"CurrErrorAcc", "=", 
                  RowBox[{"CurrErrorAcc", "+", "CurrError"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"CurrErrorAccs", "=", 
                  RowBox[{"CurrErrorAccs", "+", "TmpErrors"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"FEC", "[", "\"\<EstimateError\>\"", "]"}], 
                 "\[Equal]", "\"\<Fast\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"PrintInfo", "[", 
                   RowBox[{
                   "\"\<Current segment error estimate: \>\"", ",", 
                    "CurrError"}], "]"}], "[", "1", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"PrintInfo", "[", 
                   RowBox[{
                   "\"\<Total error estimate: \>\"", ",", "CurrErrorAcc"}], 
                   "]"}], "[", "1", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"CurrError", ">", "1"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                 "ReportError", "[", 
                  "\"\<The reported error is very large. This likely \
indicates a numerical instability.\>\"", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"MyCenter", "=", "FixAt"}], ";", "\[IndentingNewLine]", 
       RowBox[{"CurrLine", "=", 
        RowBox[{"GetLineRescaled", "[", 
         RowBox[{"line", ",", "FixAt", ",", 
          RowBox[{"{", 
           RowBox[{"MySingularities", ",", "MySingularitiesImaginary"}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FEC", "[", "UseMobius", "]"}], "===", "True"}], ",", 
         RowBox[{"CurrLineNoMobius", "=", 
          RowBox[{"GetLineRescaled", "[", 
           RowBox[{"line", ",", "FixAt", ",", 
            RowBox[{"{", 
             RowBox[{"MySingularities", ",", "MySingularitiesImaginary"}], 
             "}"}], ",", "True"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Currbcs", "=", 
        RowBox[{"CurrbcsError", "=", "bcs"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "=", 
        RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Done", "=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"!", "Done"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
            RowBox[{"CurrLine", "//", "N"}], "]"}], "=", 
           RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
             RowBox[{"CurrLine", "//", "N"}], "]"}], "[", 
            "\"\<ComputationTime\>\"", "]"}], "=", 
           RowBox[{"TimeStart", "=", 
            RowBox[{"AbsoluteTime", "[", "]"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"CurrStatusBackup", "=", 
           RowBox[{"{", 
            RowBox[{
            "Currbcs", ",", "CurrbcsError", ",", "bcs", ",", "CurrLine", ",", 
             "MyCenter", ",", "FixAt", ",", "CurrErrorAcc", ",", 
             "CurrErrorAccs"}], "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PrintInfo", "[", 
            RowBox[{"\"\<Integrating segment: \>\"", ",", 
             RowBox[{"PrintMobiusNormalized", "/@", "CurrLine"}], ",", 
             "\"\<.\>\""}], "]"}], "[", "1", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NextIsPole", "&&", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"MySingularitiesImaginary", ",", "MyCenter"}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
              "PrintInfo", "[", 
               "\"\<Current segment is centered at singularity.\>\"", "]"}], 
              "[", "1", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"LastEvaluation", "=", "Currbcs"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"LastSavedData", "=", "AllIntegrationData"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"LastLine", "=", "CurrLine"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"PoleIntervals", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"PoleIntervals", ",", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "===", "MyCenter"}],
                 ")"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"AnalyticContinuationFailed", "=", "False"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"PrepareAnalyticContinuation", "[", "CurrLine", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"AnalyticContinuationFailed", "===", "True"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"SegmentCounter", ">", "1"}], "||", 
               RowBox[{"to", "<", "FixAt"}]}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"SegmentCounter", "===", "1"}], "&&", 
                RowBox[{"to", "<", "FixAt"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                "ReportError", "[", 
                 "\"\<Can only perform the expansions for x > 0 along the \
current line segment. Please integrate in the positive line direction.\>\"", 
                 "]"}], ";"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                "ReportError", "[", 
                 "\"\<Analytic continuation failed. Please separate out the \
singularities by transporting along a different line.\>\"", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
             RowBox[{"LastLine", "//", "N"}], "]"}], "[", 
            "\"\<MatrixExpansion\>\"", "]"}], "=", 
           RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
             "\"\<Dynamic\>\""}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"PrepareMatricesFrom", "[", 
              RowBox[{"line", ",", "CurrLine"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"CurrIntervalCurrLine", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "#"}], ",", "#"}], "}"}], "&"}], "@", 
               RowBox[{
               "GetMatricesPrecisionDistance", "[", "CurrLine", "]"}]}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
             "\"\<Predivision\>\""}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"PrepareMatricesFrom1", "[", 
              RowBox[{"line", ",", "CurrLine"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"CurrIntervalCurrLine", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "RadiusOfConvergenceVal"}], "/", 
                 RowBox[{"FEC", "[", "DivisionOrder", "]"}]}], ",", 
                RowBox[{"RadiusOfConvergenceVal", "/", 
                 RowBox[{"FEC", "[", "DivisionOrder", "]"}]}]}], "}"}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
             RowBox[{"LastLine", "//", "N"}], "]"}], "[", 
            "\"\<MatrixExpansion\>\"", "]"}], "=", 
           RowBox[{
            RowBox[{"AbsoluteTime", "[", "]"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
              RowBox[{"LastLine", "//", "N"}], "]"}], "[", 
             "\"\<MatrixExpansion\>\"", "]"}]}]}], ";", "\[IndentingNewLine]",
           "\[IndentingNewLine]", 
          RowBox[{"CurrIntervalLine", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"RelateLinesPoint", "[", 
              RowBox[{"line", ",", "CurrLine", ",", "#"}], "]"}], "&"}], "/@",
             "CurrIntervalCurrLine"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"PrintInfo", "[", 
            RowBox[{"\"\<Current line segment covers x \[Element] [\>\"", ",", 
             RowBox[{
              RowBox[{"CurrIntervalLine", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "//", "N"}], ",", "\"\<, \>\"",
              ",", 
             RowBox[{
              RowBox[{"CurrIntervalLine", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "N"}], ",", 
             "\"\<].\>\""}], "]"}], "[", "2", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"SegmentCounter", "+=", "1"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IntervalContainsQ", "[", 
             RowBox[{"CurrIntervalLine", ",", "to"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"CurrEvalPoint", "=", "to"}], ";", "\[IndentingNewLine]", 
             RowBox[{"CurrEvalPointCurrLine", "=", 
              RowBox[{"RelateLinesPoint", "[", 
               RowBox[{"CurrLine", ",", "line", ",", "CurrEvalPoint"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"EvaluateCurrPoint", "[", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Currbcs", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"line", "/.", 
                 RowBox[{"x", "\[Rule]", "CurrEvalPoint"}]}], ",", 
                "CurrEval"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{
                 RowBox[{"FEC", "[", "\"\<EstimateError\>\"", "]"}], "===", 
                 "False"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"CurrbcsError", "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"line", "/.", 
                    RowBox[{"x", "\[Rule]", "CurrEvalPoint"}]}], ",", 
                   "CurrEvalError"}], "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"PrintError", "[", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"Done", "=", "True"}], ";"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"to", ">", "FixAt"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Tmp", "=", 
                 RowBox[{"Select", "[", 
                  RowBox[{"PoleIntervals", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ">", "MyCenter"}], 
                    "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Tmp", "=", 
                 RowBox[{"Select", "[", 
                  RowBox[{"PoleIntervals", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "<=", "MyCenter"}],
                     "&"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Tmp2", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"IntervalOverlapQ", "[", 
                   RowBox[{"CurrIntervalLine", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@",
                "Tmp"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Tmp2", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"Tmp2", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "True"}], 
                "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"NextIsPole", "=", 
              RowBox[{
               RowBox[{"Length", "[", "Tmp2", "]"}], ">", "0"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"NextIsPole", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Tmp", "=", 
                 RowBox[{"Tmp", "[", 
                  RowBox[{"[", 
                   RowBox[{"Tmp2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"to", ">", "FixAt"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Current", " ", "line", " ", "center"}], ",", " ", 
                    RowBox[{"pole", " ", "center"}]}], ")"}], ",", " ", 
                    RowBox[{"(", "poleinterval", ")"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"FixWithin", "=", 
                    RowBox[{"IntervalIntersec", "[", 
                    RowBox[{
                    RowBox[{"IntervalIntersec", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"MyCenter", ",", 
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    "CurrIntervalLine"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"CurrEvalPoint", "=", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"FixWithin", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{"FixWithin", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "2"]}], ";"}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pole", " ", "center"}], ",", " ", 
                    RowBox[{"current", " ", "line", " ", "center"}]}], ")"}], 
                    ",", " ", 
                    RowBox[{"(", "poleinterval", ")"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"FixWithin", "=", 
                    RowBox[{"IntervalIntersec", "[", 
                    RowBox[{
                    RowBox[{"IntervalIntersec", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "MyCenter"}], 
                    "}"}], ",", 
                    RowBox[{"Tmp", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    "CurrIntervalLine"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"CurrEvalPoint", "=", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"FixWithin", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{"FixWithin", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "2"]}], ";"}]}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"CurrEvalPointCurrLine", "=", 
                 RowBox[{"RelateLinesPoint", "[", 
                  RowBox[{"CurrLine", ",", "line", ",", "CurrEvalPoint"}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"EvaluateCurrPoint", "[", "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"MyCenter", "=", 
                 RowBox[{"Tmp", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"CurrLine", "=", 
                 RowBox[{"Tmp", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"FEC", "[", "UseMobius", "]"}], "===", "True"}], 
                  ",", 
                  RowBox[{"CurrLineNoMobius", "=", 
                   RowBox[{"Tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "3"}], "]"}], "]"}]}]}], "]"}], ";"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"Finite", " ", "point"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"to", ">", "FixAt"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"CurrEvalPoint", "=", 
                   RowBox[{"CurrIntervalLine", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"CurrEvalPoint", "=", 
                   RowBox[{"CurrIntervalLine", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]",
                  "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"CurrEvalPointCurrLine", "=", 
                 RowBox[{"RelateLinesPoint", "[", 
                  RowBox[{"CurrLine", ",", "line", ",", "CurrEvalPoint"}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"EvaluateCurrPoint", "[", "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
                   "\"\<Dynamic\>\""}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"MyCenter", "=", "CurrEvalPoint"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "===", 
                   "\"\<Predivision\>\""}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"to", ">", "FixAt"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"MyCenter", "=", 
                    RowBox[{"FindNextCenterPointL", "[", 
                    RowBox[{"CurrEvalPoint", ",", "MySingularities"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"MyCenter", "=", 
                    RowBox[{"FindNextCenterPointR", "[", 
                    RowBox[{"CurrEvalPoint", ",", "MySingularities"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"CurrLine", "=", 
                 RowBox[{"GetLineRescaled", "[", 
                  RowBox[{"line", ",", "MyCenter", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "MySingularities", ",", "MySingularitiesImaginary"}], 
                    "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"FEC", "[", "UseMobius", "]"}], "===", "True"}], 
                  ",", 
                  RowBox[{"CurrLineNoMobius", "=", 
                   RowBox[{"GetLineRescaled", "[", 
                    RowBox[{"line", ",", "MyCenter", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "MySingularities", ",", "MySingularitiesImaginary"}], 
                    "}"}], ",", "True"}], "]"}]}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"Currbcs", "=", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"line", "/.", 
                 RowBox[{"x", "\[Rule]", "CurrEvalPoint"}]}], ",", 
                "\[IndentingNewLine]", "CurrEval"}], "\[IndentingNewLine]", 
               "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{
                 RowBox[{"FEC", "[", "\"\<EstimateError\>\"", "]"}], "===", 
                 "False"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"CurrbcsError", "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"line", "/.", 
                    RowBox[{"x", "\[Rule]", "CurrEvalPoint"}]}], ",", 
                   "CurrEvalError"}], "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"PrintError", "[", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
             RowBox[{"LastLine", "//", "N"}], "]"}], "[", 
            "\"\<ComputationTime\>\"", "]"}], "=", 
           RowBox[{
            RowBox[{"AbsoluteTime", "[", "]"}], "-", 
            RowBox[{
             RowBox[{
              RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
              RowBox[{"LastLine", "//", "N"}], "]"}], "[", 
             "\"\<ComputationTime\>\"", "]"}]}]}], ";", "\[IndentingNewLine]",
           "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Analytic", " ", "continuation", " ", 
            RowBox[{"failed", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"MultivaluedFail", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "PrintWarning", "[", 
              "\"\<The computation will be aborted, and the last line segment \
will be returned.\>\"", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"Done", "=", "True"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"RepeatingSegment", "=", "False"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"FEC", "[", "SegmentationStrategy", "]"}], "\[Equal]", 
              "\"\<Predivision\>\""}], "&&", 
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"DiffExpConfiguration", ",", "AccuracyGoal"}], "]"}], "&&", 
             RowBox[{
              RowBox[{
              "DiffExpConfiguration", "[", "\"\<AccuracyGoalValidate\>\"", 
               "]"}], "===", "\"\<After\>\""}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"CurrError", ">", 
                RowBox[{"10", "^", 
                 RowBox[{"-", 
                  RowBox[{"FEC", "[", "AccuracyGoal", "]"}]}]}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                "ExpansionOrderVal", "+=", "IExpansionOrderIncrease2"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"PrintInfo", "[", 
                  RowBox[{
                  "\"\<The estimated error of the results is lower than the \
requested AccuracyGoal. The expansions will be repeated at the order \>\"", 
                   ",", "ExpansionOrderVal", ",", "\"\<.\>\""}], "]"}], "[", 
                 "1", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "Reload", " ", "variables", " ", "for", " ", "the", " ", 
                  "computation", " ", "of", " ", "the", " ", "segment"}], " ",
                  "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "Currbcs", ",", "CurrbcsError", ",", "bcs", ",", "CurrLine",
                    ",", "MyCenter", ",", "FixAt", ",", "CurrErrorAcc", ",", 
                   "CurrErrorAccs"}], "}"}], "=", "CurrStatusBackup"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"SaveExpansions", "===", "True"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"AllIntegrationData", "=", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"AllIntegrationData", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "Drop", " ", "the", " ", "expansion", " ", "matrices"}], " ",
                  "*)"}], "\[IndentingNewLine]", 
                RowBox[{"KeyDropFrom", "[", 
                 RowBox[{"DEqnMatricesExpanded", ",", "CurrLine"}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"Decrease", " ", "counter"}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"SegmentCounter", "-=", "1"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"We", " ", "are", " ", "not", " ", "done", " ", 
                  RowBox[{"yet", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Done", "=", "False"}], ";", "\[IndentingNewLine]", 
                RowBox[{"RepeatingSegment", " ", "=", " ", "True"}], ";"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{
                 "If", " ", "we", " ", "had", " ", "reset", " ", "the", " ", 
                  "value", " ", "of", " ", "expansion", " ", "order"}], ",", 
                 " ", 
                 RowBox[{"we", " ", "put", " ", "it", " ", 
                  RowBox[{"back", "."}]}]}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"ExpansionOrderVal", "\[NotEqual]", 
                   RowBox[{"FEC", "[", "ExpansionOrder", "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ExpansionOrderVal", "=", 
                    RowBox[{"FEC", "[", "ExpansionOrder", "]"}]}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]",
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", "RepeatingSegment"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"Clear", " ", "up", " ", "some", " ", 
              RowBox[{"memory", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ClearMatrices", "[", 
              RowBox[{"CurrStatusBackup", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PrintInfo", "[", 
         RowBox[{"\"\<Finished integration of \>\"", ",", 
          RowBox[{"SegmentCounter", "-", "1"}], ",", "\"\< segments in \>\"", 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"AbsoluteTime", "[", "]"}], "-", "TimeStart0"}], "//", 
           "N"}], ",", "\"\< seconds.\>\""}], "]"}], "[", "1", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PrintDebug", "[", 
         RowBox[{"\"\<Performed \>\"", ",", 
          RowBox[{"SegmentCounter", "-", "SegmentsToIntegrate"}], ",", 
          "\"\< additional expansions due to changing the expansion \
order.\>\""}], "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"MultivaluedFail", ",", "\[IndentingNewLine]", 
         RowBox[{"LineReturn", "=", "FailedLine"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"LineReturn", "=", 
           RowBox[{"line", "/.", 
            RowBox[{"x", "\[Rule]", "to"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<TimeEnd\>\"", "]"}], "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BenchmarkData", "[", "\"\<ComputationTime\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"BenchmarkData", "[", "\"\<TimeEnd\>\"", "]"}], "-", 
         RowBox[{"BenchmarkData", "[", "\"\<TimeStart\>\"", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"KeyDropFrom", "[", 
        RowBox[{"BenchmarkData", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<TimeEnd\>\"", ",", "\"\<TimeStart\>\""}], "}"}]}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"SaveExpansions", "===", "True"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{
             RowBox[{"FEC", "[", "\"\<EstimateError\>\"", "]"}], "===", 
             "False"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"LineReturn", ",", "CurrEval", ",", "CurrErrorAccs"}], 
              "}"}], ",", "AllIntegrationData"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"LineReturn", ",", "CurrEval"}], "}"}], ",", 
             "AllIntegrationData"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{
             RowBox[{"FEC", "[", "\"\<EstimateError\>\"", "]"}], "===", 
             "False"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"LineReturn", ",", "CurrEval", ",", "CurrErrorAccs"}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"LineReturn", ",", "CurrEval"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Get", " ", "a", " ", "line", " ", "segment", " ", "centered", " ", "at", 
     " ", "at_"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetLineRescaled", "[", 
      RowBox[{"line_Association", ",", "at_", ",", 
       RowBox[{"{", 
        RowBox[{"signsproj_", ",", "signsim_"}], "}"}], ",", 
       RowBox[{"nomobius_", ":", "False"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"$MaxExtraPrecision", "=", "1000"}], "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"UseMobiusVal", "===", "True"}], "&&", 
          RowBox[{"nomobius", "===", "False"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t1l", ",", "t1r", ",", "tmp"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"t1l", "=", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"signsproj", ",", 
                RowBox[{
                 RowBox[{"#", "<", "at"}], "&"}]}], "]"}], "//", "Last"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"t1r", "=", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"signsproj", ",", 
                RowBox[{
                 RowBox[{"#", ">", "at"}], "&"}]}], "]"}], "//", "First"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"tmp", "=", 
                   RowBox[{"Together", "[", "#", "]"}]}], ";", 
                  FractionBox[
                   RowBox[{"Collect", "[", 
                    RowBox[{
                    RowBox[{"Numerator", "[", "#", "]"}], ",", "x"}], "]"}], 
                   RowBox[{"Collect", "[", 
                    RowBox[{
                    RowBox[{"Denominator", "[", "#", "]"}], ",", "x"}], 
                    "]"}]]}], ")"}], "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{"(", 
                 RowBox[{"line", "/.", 
                  RowBox[{"x", "\[Rule]", 
                   RowBox[{"GetMobius", "[", 
                    RowBox[{"{", 
                    RowBox[{"t1l", ",", "at", ",", "t1r"}], "}"}], "]"}]}]}], 
                 ")"}], ")"}]}], "/.", 
              RowBox[{"x", "\[Rule]", 
               RowBox[{"x", "/", 
                RowBox[{"FEC", "[", "RadiusOfConvergence", "]"}]}]}]}], "//", 
             RowBox[{
              RowBox[{"SetPrecision", "[", 
               RowBox[{"#", ",", 
                RowBox[{"2", "FEWorkingPrecision"}]}], "]"}], "&"}]}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t1", ",", "tmp", ",", "mynearest"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"t1l", "=", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"signsproj", ",", 
                RowBox[{
                 RowBox[{"#", "<", "at"}], "&"}]}], "]"}], "//", "Last"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"t1r", "=", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"signsproj", ",", 
                RowBox[{
                 RowBox[{"#", ">", "at"}], "&"}]}], "]"}], "//", "First"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"t1", "=", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"at", "-", "t1l"}], ",", 
               RowBox[{"t1r", "-", "at"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"tmp", "=", 
                 RowBox[{"Together", "[", "#", "]"}]}], ";", 
                FractionBox[
                 RowBox[{"Collect", "[", 
                  RowBox[{
                   RowBox[{"Numerator", "[", "#", "]"}], ",", "x"}], "]"}], 
                 RowBox[{"Collect", "[", 
                  RowBox[{
                   RowBox[{"Denominator", "[", "#", "]"}], ",", "x"}], 
                  "]"}]]}], ")"}], "&"}], "/@", 
             RowBox[{"(", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Normal", "[", "line", "]"}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"at", "+", 
                    RowBox[{"x", " ", "#"}]}]}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"x", "/", 
                    RowBox[{"FEC", "[", "RadiusOfConvergence", "]"}]}]}]}], "//", 
                    RowBox[{
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"2", "FEWorkingPrecision"}]}], "]"}], "&"}]}], "//",
                     "Expand"}], "//", "Association"}], ")"}], "&"}], "@", 
                "t1"}], ")"}], ")"}]}]}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Functions", " ", "for", " ", "deriving", " ", "center", " ", "points", 
     " ", "in", " ", "the", " ", "predivision", " ", "segmentation", " ", 
     RowBox[{"strategy", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMobiusCPL", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Infinity]"}], ",", "zbound_", ",", "zmax_"}], "}"}], 
      "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "zbound"}], "+", 
        RowBox[{"k", " ", "zbound"}], "+", 
        RowBox[{"2", " ", "zmax"}]}], 
       RowBox[{"1", "+", "k"}]], "/.", 
      RowBox[{"k", "\[Rule]", 
       RowBox[{"FEC", "[", "DivisionOrder", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMobiusCPL", "[", 
      RowBox[{"{", 
       RowBox[{"zmin_", ",", "zbound_", ",", "\[Infinity]"}], "}"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"zbound", "+", 
        RowBox[{"k", " ", "zbound"}], "-", 
        RowBox[{"2", " ", "zmin"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "k"}]], "/.", 
      RowBox[{"k", "\[Rule]", 
       RowBox[{"FEC", "[", "DivisionOrder", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMobiusCPL", "[", 
      RowBox[{"{", 
       RowBox[{"zmin_", ",", "zbound_", ",", "zmax_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"zbound", " ", "zmax"}], "+", 
         RowBox[{"k", " ", "zbound", " ", "zmax"}], "+", 
         RowBox[{"zbound", " ", "zmin"}], "-", 
         RowBox[{"k", " ", "zbound", " ", "zmin"}], "-", 
         RowBox[{"2", " ", "zmax", " ", "zmin"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "zbound"}], "-", "zmax", "+", 
         RowBox[{"k", " ", "zmax"}], "-", "zmin", "-", 
         RowBox[{"k", " ", "zmin"}]}], ")"}]}], "/.", 
      RowBox[{"k", "\[Rule]", 
       RowBox[{"FEC", "[", "DivisionOrder", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMobiusCPR", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Infinity]"}], ",", "zbound_", ",", "zmax_"}], "}"}], 
      "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{"zbound", "+", 
        RowBox[{"k", " ", "zbound"}], "-", 
        RowBox[{"2", " ", "zmax"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "k"}]], "/.", 
      RowBox[{"k", "\[Rule]", 
       RowBox[{"FEC", "[", "DivisionOrder", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMobiusCPR", "[", 
      RowBox[{"{", 
       RowBox[{"zmin_", ",", "zbound_", ",", "\[Infinity]"}], "}"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "zbound"}], "+", 
        RowBox[{"k", " ", "zbound"}], "+", 
        RowBox[{"2", " ", "zmin"}]}], 
       RowBox[{"1", "+", "k"}]], "/.", 
      RowBox[{"k", "\[Rule]", 
       RowBox[{"FEC", "[", "DivisionOrder", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMobiusCPR", "[", 
      RowBox[{"{", 
       RowBox[{"zmin_", ",", "zbound_", ",", "zmax_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"zbound", " ", "zmax"}], "-", 
         RowBox[{"k", " ", "zbound", " ", "zmax"}], "+", 
         RowBox[{"zbound", " ", "zmin"}], "+", 
         RowBox[{"k", " ", "zbound", " ", "zmin"}], "-", 
         RowBox[{"2", " ", "zmax", " ", "zmin"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "zbound"}], "-", "zmax", "-", 
         RowBox[{"k", " ", "zmax"}], "-", "zmin", "+", 
         RowBox[{"k", " ", "zmin"}]}], ")"}]}], "/.", 
      RowBox[{"k", "\[Rule]", 
       RowBox[{"FEC", "[", "DivisionOrder", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetCPLRep", "[", "MyEq_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "rs", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rs", "=", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"MyEq", ",", 
            RowBox[{
             RowBox[{"xnew", "\[Equal]", "a_"}], "|", 
             RowBox[{"s", "\[Equal]", "a_"}]}]}], "]"}], "/.", 
          RowBox[{"Equal", "\[Rule]", "Rule"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xnew", "//.", "rs"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetCPL", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "zbound_", ",", "zmax_"}], "}"}], 
       ",", 
       RowBox[{"k2_", ":", "Null"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MyEq", ",", 
         RowBox[{"k", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"k2", "===", "Null"}], ",", "DivisionOrderVal", ",", 
            "k2"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MyEq", "=", 
         RowBox[{
          RowBox[{"zmax", "\[Element]", 
           TemplateBox[{},
            "Reals"]}], "&&", 
          RowBox[{"zbound", "<", "zmax"}], "&&", 
          RowBox[{"k", "\[GreaterEqual]", "1"}], "&&", 
          RowBox[{"s", "\[Equal]", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "k"}], " ", "zbound"}], "+", 
             RowBox[{"k", " ", "zmax"}]}], 
            RowBox[{"1", "+", "k"}]]}], "&&", 
          RowBox[{"xnew", "\[Equal]", 
           RowBox[{
            RowBox[{"-", "s"}], "+", "zmax"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"GetCPLRep", "[", "MyEq", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetCPL", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zmin_", ",", "zbound_", ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"k2_", ":", "Null"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MyEq", ",", 
         RowBox[{"k", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"k2", "===", "Null"}], ",", "DivisionOrderVal", ",", 
            "k2"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MyEq", "=", 
         RowBox[{
          RowBox[{"zmin", "\[Element]", 
           TemplateBox[{},
            "Reals"]}], "&&", 
          RowBox[{"zbound", ">", "zmin"}], "&&", 
          RowBox[{"k", ">", "1"}], "&&", 
          RowBox[{"s", "\[Equal]", 
           FractionBox[
            RowBox[{
             RowBox[{"k", " ", "zbound"}], "-", 
             RowBox[{"k", " ", "zmin"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", "k"}]]}], "&&", 
          RowBox[{"xnew", "\[Equal]", 
           RowBox[{"s", "+", "zmin"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"GetCPLRep", "[", "MyEq", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetCPL", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zmin_", ",", "zbound_", ",", "zmax_"}], "}"}], ",", 
       RowBox[{"k2_", ":", "Null"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MyEq", ",", 
         RowBox[{"k", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"k2", "===", "Null"}], ",", "DivisionOrderVal", ",", 
            "k2"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MyEq", "=", 
         RowBox[{
          RowBox[{"zmin", "\[Element]", 
           TemplateBox[{},
            "Reals"]}], "&&", 
          RowBox[{"zmax", ">", "zmin"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"zmin", "<", "zbound", "<", 
               FractionBox[
                RowBox[{"zmax", "+", "zmin"}], "2"]}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", 
                   FractionBox[
                    RowBox[{"zmax", "-", "zmin"}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "zbound"}], "+", "zmax", "+", 
                    "zmin"}]]}], "&&", 
                  RowBox[{"s", "\[Equal]", 
                   FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "k"}], " ", "zbound"}], "+", 
                    RowBox[{"k", " ", "zmax"}]}], 
                    RowBox[{"1", "+", "k"}]]}]}], ")"}], "||", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"k", ">", 
                   FractionBox[
                    RowBox[{"zmax", "-", "zmin"}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "zbound"}], "+", "zmax", "+", 
                    "zmin"}]]}], "&&", 
                  RowBox[{"s", "\[Equal]", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"k", " ", "zbound"}], "-", 
                    RowBox[{"k", " ", "zmin"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "k"}]]}]}], ")"}]}], ")"}]}], 
             ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"zmax", "+", "zmin"}], "2"], "\[LessEqual]", "zbound",
                "<", "zmax"}], "&&", 
              RowBox[{"k", "\[GreaterEqual]", "1"}], "&&", 
              RowBox[{"s", "\[Equal]", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "k"}], " ", "zbound"}], "+", 
                 RowBox[{"k", " ", "zmax"}]}], 
                RowBox[{"1", "+", "k"}]]}]}], ")"}]}], ")"}], "&&", 
          RowBox[{"xnew", "\[Equal]", 
           FractionBox[
            RowBox[{"s", "+", 
             RowBox[{"k", " ", "zbound"}]}], "k"]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"GetCPLRep", "[", "MyEq", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetCPR", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "zbound_", ",", "zmax_"}], "}"}], 
       ",", 
       RowBox[{"k2_", ":", "Null"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MyEq", ",", 
         RowBox[{"k", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"k2", "===", "Null"}], ",", "DivisionOrderVal", ",", 
            "k2"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MyEq", "=", 
         RowBox[{
          RowBox[{"zmax", "\[Element]", 
           TemplateBox[{},
            "Reals"]}], "&&", 
          RowBox[{"zbound", "<", "zmax"}], "&&", 
          RowBox[{"k", ">", "1"}], "&&", 
          RowBox[{"s", "\[Equal]", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "k"}], " ", "zbound"}], "+", 
             RowBox[{"k", " ", "zmax"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", "k"}]]}], "&&", 
          RowBox[{"xnew", "\[Equal]", 
           RowBox[{
            RowBox[{"-", "s"}], "+", "zmax"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"GetCPLRep", "[", "MyEq", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetCPR", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zmin_", ",", "zbound_", ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"k2_", ":", "Null"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MyEq", ",", 
         RowBox[{"k", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"k2", "===", "Null"}], ",", "DivisionOrderVal", ",", 
            "k2"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MyEq", "=", 
         RowBox[{
          RowBox[{"zmin", "\[Element]", 
           TemplateBox[{},
            "Reals"]}], "&&", 
          RowBox[{"zbound", ">", "zmin"}], "&&", 
          RowBox[{"k", "\[GreaterEqual]", "1"}], "&&", 
          RowBox[{"s", "\[Equal]", 
           FractionBox[
            RowBox[{
             RowBox[{"k", " ", "zbound"}], "-", 
             RowBox[{"k", " ", "zmin"}]}], 
            RowBox[{"1", "+", "k"}]]}], "&&", 
          RowBox[{"xnew", "\[Equal]", 
           RowBox[{"s", "+", "zmin"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"GetCPLRep", "[", "MyEq", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetCPR", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"zmin_", ",", "zbound_", ",", "zmax_"}], "}"}], ",", 
       RowBox[{"k2_", ":", "Null"}]}], "]"}], ":=", 
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MyEq", ",", 
         RowBox[{"k", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"k2", "===", "Null"}], ",", "DivisionOrderVal", ",", 
            "k2"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MyEq", "=", 
         RowBox[{
          RowBox[{"zmin", "\[Element]", 
           TemplateBox[{},
            "Reals"]}], "&&", 
          RowBox[{"zmax", ">", "zmin"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"zmin", "<", "zbound", "\[LessEqual]", 
               FractionBox[
                RowBox[{"zmax", "+", "zmin"}], "2"]}], "&&", 
              RowBox[{"k", "\[GreaterEqual]", "1"}], "&&", 
              RowBox[{"s", "\[Equal]", 
               FractionBox[
                RowBox[{
                 RowBox[{"k", " ", "zbound"}], "-", 
                 RowBox[{"k", " ", "zmin"}]}], 
                RowBox[{"1", "+", "k"}]]}]}], ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"zmax", "+", "zmin"}], "2"], "<", "zbound", "<", 
               "zmax"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "zmax"}], "+", "zmin"}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "zbound"}], "+", "zmax", "+", 
                    "zmin"}]]}], "&&", 
                  RowBox[{"s", "\[Equal]", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"k", " ", "zbound"}], "-", 
                    RowBox[{"k", " ", "zmin"}]}], 
                    RowBox[{"1", "+", "k"}]]}]}], ")"}], "||", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"k", ">", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "zmax"}], "+", "zmin"}], 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "zbound"}], "+", "zmax", "+", 
                    "zmin"}]]}], "&&", 
                  RowBox[{"s", "\[Equal]", 
                   FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "k"}], " ", "zbound"}], "+", 
                    RowBox[{"k", " ", "zmax"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "k"}]]}]}], ")"}]}], ")"}]}], 
             ")"}]}], ")"}], "&&", 
          RowBox[{"xnew", "\[Equal]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{"s", "-", 
              RowBox[{"k", " ", "zbound"}]}], "k"]}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"GetCPLRep", "[", "MyEq", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindNextCenterPointL", "[", 
      RowBox[{"xbc_", ",", "singsproj_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xl", ",", "xr"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xl", "=", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"singsproj", ",", 
            RowBox[{
             RowBox[{"#", "<", "xbc"}], "&"}]}], "]"}], "//", "Last"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"xr", "=", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"singsproj", ",", 
            RowBox[{
             RowBox[{"#", ">", "xbc"}], "&"}]}], "]"}], "//", "First"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FEC", "[", "UseMobius", "]"}], "===", "True"}], ",", 
          RowBox[{"GetMobiusCPL", "[", 
           RowBox[{"{", 
            RowBox[{"xl", ",", "xbc", ",", "xr"}], "}"}], "]"}], ",", 
          RowBox[{"GetCPL", "[", 
           RowBox[{"{", 
            RowBox[{"xl", ",", "xbc", ",", "xr"}], "}"}], "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FindNextCenterPointR", "[", 
      RowBox[{"xbc_", ",", "singsproj_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xl", ",", "xr"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xl", "=", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"singsproj", ",", 
            RowBox[{
             RowBox[{"#", "<", "xbc"}], "&"}]}], "]"}], "//", "Last"}]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"xr", "=", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"singsproj", ",", 
            RowBox[{
             RowBox[{"#", ">", "xbc"}], "&"}]}], "]"}], "//", "First"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"FEC", "[", "UseMobius", "]"}], "===", "True"}], ",", 
          RowBox[{"GetMobiusCPR", "[", 
           RowBox[{"{", 
            RowBox[{"xl", ",", "xbc", ",", "xr"}], "}"}], "]"}], ",", 
          RowBox[{"GetCPR", "[", 
           RowBox[{"{", 
            RowBox[{"xl", ",", "xbc", ",", "xr"}], "}"}], "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Get", " ", "intervals", " ", "in", " ", "the", " ", "dynamic", " ", 
     "segmentation", " ", 
     RowBox[{"strategy", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMatricesPrecisionDistance", "[", "line_Association", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "DiffCoeffs", ",", "MaxVariation", ",", "SmallestCanGo", ",", 
         "MaxDisc"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"NumericQ", "[", 
            RowBox[{"FEC", "[", "AccuracyGoal", "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "ReportError", "[", 
            "\"\<Accuracy goal is not given as a number.\>\"", "]"}], ";"}]}],
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"DiffCoeffs", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"GetLargestTerm", "[", "line", "]"}], "}"}], "/.", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a_", ":", "1"}], ")"}], 
            SuperscriptBox["x", 
             RowBox[{"b_", ":", "1"}]]}], "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "@", "a"}], ",", "b"}], "}"}]}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"DiffCoeffs", "===", 
           RowBox[{"{", 
            RowBox[{"-", "\[Infinity]"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Global`DebugData", "=", 
            RowBox[{"{", 
             RowBox[{"line", ",", 
              RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}]}], "}"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"ReportError", "[", 
            RowBox[{
            "\"\<Could not determine variation in the expanded matrices. \
Suggestions: 1. Decreasing \\\"ExpansionOrder\\\" (currently \>\"", " ", "<>", 
             RowBox[{"ToString", "[", "ExpansionOrderVal", "]"}], "<>", 
             "\"\<.) 2. Increasing \\\"ChopPrecision\\\" (currently \>\"", 
             " ", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"FEC", "[", "ChopPrecision", "]"}], "]"}], "<>", 
             "\"\<.) 3. Decreasing \\\"RadiusOfConvergence\\\" (currently \
\>\"", " ", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"FEC", "[", "RadiusOfConvergence", "]"}], "]"}], "<>", 
             "\"\<.)\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"MaxVariation", "=", 
         RowBox[{"First", "[", "DiffCoeffs", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"SmallestCanGo", "=", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"eps", "=", 
              SuperscriptBox["10", 
               RowBox[{"-", "DigitsNeeded"}]]}], ",", 
             RowBox[{"Const", "=", 
              RowBox[{"MaxVariation", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"Ord", "=", 
              RowBox[{"MaxVariation", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OddQ", "[", "ExpansionOrderVal", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"eps", 
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}]}], "+", 
                   RowBox[{"Const", " ", 
                    SuperscriptBox["#1", 
                    RowBox[{"MaxVariation", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]]}]}], "&"}], ",", "1"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Root", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"eps", 
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}]}], "+", 
                   RowBox[{"Const", " ", 
                    SuperscriptBox["#1", 
                    RowBox[{"MaxVariation", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]]}]}], "&"}], ",", "2"}], 
                "]"}]}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
             ",", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"Root", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"eps", 
                   RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}]}], "+", 
                  RowBox[{"Const", " ", 
                   SuperscriptBox["#1", 
                    RowBox[{"MaxVariation", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]]}]}], "&"}], ",", "1"}], 
               "]"}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
            "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"SmallestCanGo", "=", 
         RowBox[{"Min", "[", 
          RowBox[{"Abs", "/@", "SmallestCanGo"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "SmallestCanGo"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Provides", " ", "a", " ", "number", " ", "of", " ", "consistency", " ", 
      "checks"}], ",", " ", 
     RowBox[{"and", " ", "reparametrizes", " ", "boundary", " ", 
      RowBox[{"conditions", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CheckBoundaryConditionsAndReparametrize", "[", 
      RowBox[{"bcs3_", ",", "line_Association"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bcs2", ",", 
         RowBox[{"bcs", "=", 
          RowBox[{"{", 
           RowBox[{"Null", ",", "Null"}], "}"}]}], ",", "lrln", ",", "lrln2", 
         ",", "FixAt", ",", "zerlim", ",", "linerelser", ",", "tmp"}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"bcs2", "=", "bcs3"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"DependsQ", "[", 
           RowBox[{"line", ",", 
            RowBox[{
             SuperscriptBox["x", 
              RowBox[{"k_", ":", "1"}]], "/;", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"k", "\[NotEqual]", "1"}], "&"}], "k"}], 
               "\[NotEqual]", 
               RowBox[{"-", "1"}]}], ")"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "ReportError", "[", 
            "\"\<Non-linear line segments are currently not supported!\>\"", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"!", 
               RowBox[{"DependsQ", "[", 
                RowBox[{
                 RowBox[{"Keys", "@", 
                  RowBox[{"bcs2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", "#"}], "]"}]}], 
              "&"}], "/@", "ExternalScalesVal"}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Global`DebugData", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Keys", "@", 
               RowBox[{"bcs2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", "ExternalScalesVal"}], 
             "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
           "ReportError", "[", 
            "\"\<The point/line where the boundary conditions are defined \
does not fix all kinematic invariants and masses!\>\"", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"IsPoint", "[", 
             RowBox[{"bcs2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ")"}], "&&", 
           RowBox[{"DependsQ", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"bcs2", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "Normal"}], ",", "x"}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ReportError", "[", 
            RowBox[{
            "\"\<The boundary terms that are provided depend on the line \
parameter \>\"", ",", "x", ",", 
             "\"\<, but the second argument does not.\>\""}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"IsLine", "[", 
           RowBox[{"bcs2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"DeleteDuplicates", "@", 
                RowBox[{"Flatten", "@", 
                 RowBox[{"MapAt", "[", 
                  RowBox[{"Head", ",", 
                   RowBox[{
                    RowBox[{"bcs2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/.", 
                    RowBox[{"\"\<?\>\"", "\[Rule]", 
                    RowBox[{"O", "[", "x", "]"}]}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"All", ",", "All"}], "}"}]}], "]"}]}]}], ")"}], "===", 
              RowBox[{"{", "SeriesData", "}"}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "ReportError", "[", 
              "\"\<Line depends on x but boundary data is not given as a \
series.\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"bcs2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "===", "NumIntegrals"}], 
            ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "ReportError", "[", 
            "\"\<The number of entries in the boundary conditions does not \
match the size of the system.\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", 
               RowBox[{"bcs2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">=", 
             RowBox[{"EpsilonOrderVal", "+", "1"}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "ReportError", "[", 
            "\"\<Not enough orders in \[Epsilon] are given in the boundary \
conditions. Try running PrepareBoundaryConditions[...] again.\>\"", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bcs2", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"bcs2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Range", "@", "NumIntegrals"}], ",", 
            RowBox[{"Range", "@", 
             RowBox[{"(", 
              RowBox[{"EpsilonOrderVal", "+", "1"}], ")"}]}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"lrln", "=", 
         RowBox[{"RelateLines", "[", 
          RowBox[{"line", ",", 
           RowBox[{"bcs2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "True"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lrln", "===", "False"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Global`DebugData", "=", 
            RowBox[{"{", 
             RowBox[{"bcs2", ",", "line"}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
           "ReportError", "[", 
            "\"\<Chosen boundary point does not lie on line. This error might \
also occur when the ChopPrecision is set too high.\>\"", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bcs2", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=", 
         RowBox[{"MapAt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{
                RowBox[{"Accuracy", "[", "#", "]"}], "===", "\[Infinity]"}]}],
               ",", 
              RowBox[{"SetPrecision", "[", 
               RowBox[{"#", ",", "FEWorkingPrecision"}], "]"}], ",", "#"}], 
             "]"}], "&"}], ",", 
           RowBox[{"bcs2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"All", ",", "All"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"zerlim", "=", 
         RowBox[{
          RowBox[{"Limit", "[", 
           RowBox[{"lrln", ",", 
            RowBox[{"x", "\[Rule]", "0"}]}], "]"}], "//", "PChop"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"zerlim", "===", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"FixAt", "=", "0"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"DependsQ", "[", 
               RowBox[{
                RowBox[{"bcs2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "x"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "Point", " ", "that", " ", "happens", " ", "to", " ", "lie", 
               " ", "at", " ", "origin"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"bcs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "=", 
               RowBox[{"line", "/.", 
                RowBox[{"x", "\[Rule]", "FixAt"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bcs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=", 
               RowBox[{"MapAt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"SeriesAlways", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "0"}], "}"}], ",", "2"}], 
                   "]"}], "&"}], ",", 
                 RowBox[{"bcs2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"All", ",", "All"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bcs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"bcs", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "/.", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"a_", ":", "1"}], ")"}], "\"\<?\>\""}], "+", 
                  SuperscriptBox[
                   RowBox[{"O", "[", "x", "]"}], 
                   RowBox[{"1", "/", "2"}]]}], "\[Rule]", "\"\<?\>\""}]}]}], 
              ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"Line", " ", "segment", " ", "around", " ", "origin"}], 
              " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"lrln2", "=", 
               RowBox[{"RelateLines", "[", 
                RowBox[{
                 RowBox[{"bcs2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "line"}], "]"}]}], ";",
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Sign", "@", 
                   RowBox[{"Limit", "[", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{"lrln2", ",", "x"}], "]"}], ",", 
                    RowBox[{"x", "\[Rule]", "0"}]}], "]"}]}], ")"}], "===", 
                 RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                 "ReportError", "[", 
                  "\"\<Asymptotic boundary conditions should be oriented in \
the same direction as the integration line.\>\"", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bcs", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"bcs2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "/.", 
                RowBox[{"x", "\[Rule]", "lrln2"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"linerelser", "=", 
               RowBox[{"x", "\[Rule]", 
                RowBox[{"(", 
                 RowBox[{"Series", "[", 
                  RowBox[{"lrln2", ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{
                    "ISeriesChangeCoefficient", " ", "ExpansionOrderVal"}]}], 
                    "}"}], ",", 
                   RowBox[{"Assumptions", "\[Rule]", 
                    RowBox[{"x", ">", "0"}]}]}], "]"}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bcs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=", 
               RowBox[{"Assuming", "[", 
                RowBox[{
                 RowBox[{"x", ">", "0"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"bcs2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/.", "linerelser"}], "/.", 
                  RowBox[{"Logx", "\[Rule]", 
                   RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"linerelser", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "//", "Normal"}], ")"}], "/.", 
                    RowBox[{"x", "\[Rule]", "yy"}]}], "]"}]}]}]}], "]"}]}], 
              ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"tmp", "=", 
               RowBox[{
                RowBox[{"bcs", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "//", 
                RowBox[{
                 RowBox[{"GetCases", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"Log", "[", "_", "]"}]}], "]"}], "&"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"tmp", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "\[Rule]", 
                  RowBox[{"Normal", "[", 
                   RowBox[{"Series", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"yy", ",", "0", ",", "ExpansionOrderVal"}], "}"}],
                     ",", 
                    RowBox[{"Assumptions", "\[Rule]", 
                    RowBox[{"yy", ">", "0"}]}]}], "]"}], "]"}]}], "&"}], "/@",
                 "tmp"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"tmp", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"tmp", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "/.", 
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"a_", " ", "yy"}], "]"}], "/;", 
                    RowBox[{"a", ">", "0"}]}], "\[RuleDelayed]", 
                    RowBox[{
                    RowBox[{"Log", "[", "a", "]"}], "+", 
                    RowBox[{"Log", "[", "yy", "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"a_", " ", "yy"}], "]"}], "/;", 
                    RowBox[{"a", "<", "0"}]}], "\[RuleDelayed]", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"-", "a"}], "]"}], "+", 
                    RowBox[{"Log", "[", "yy", "]"}]}]}]}], 
                    "\[IndentingNewLine]", "}"}]}], "/.", 
                  RowBox[{
                   RowBox[{"Log", "[", "yy", "]"}], "\[Rule]", "Logx"}]}], "/.", 
                 RowBox[{"yy", "\[Rule]", "x"}]}], ")"}]}], 
              RowBox[{"(*", 
               RowBox[{"+", 
                SuperscriptBox[
                 RowBox[{"O", "[", "x", "]"}], "ExpansionOrderVal"]}], "*)"}],
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bcs", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"SafeReplaceSeries11", "[", 
                 RowBox[{
                  RowBox[{"bcs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", "tmp"}], "]"}], "//", 
                RowBox[{
                 RowBox[{"Quiet", "[", 
                  RowBox[{"N", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"FEC", "[", "WorkingPrecision", "]"}]}], "]"}], 
                  "]"}], "&"}]}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"DependsQ", "[", 
                 RowBox[{
                  RowBox[{"bcs", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"Log", "[", "_", "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Global`DebugData", "=", 
                  RowBox[{"SExpand", "@", 
                   RowBox[{"bcs", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                 "ReportError", "[", 
                  "\"\<Error rescaling boundary conditions.\>\"", "]"}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"DependsQ", "[", 
              RowBox[{
               RowBox[{"Normal", "[", "lrln", "]"}], ",", "x"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", 
               "\"\<Boundary conditions given on asymptotic limit that is not \
centered at current line.\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "From", " ", "hereon", " ", "we", " ", "can", " ", "assume", " ", 
             "we", " ", "are", " ", "fixing", " ", "at", " ", "a", " ", 
             "point"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"bcs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", 
            RowBox[{"line", "/.", 
             RowBox[{"x", "\[Rule]", "lrln"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"bcs", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "=", 
            RowBox[{"bcs2", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"FixAt", "=", "lrln"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"bcs", ",", "FixAt"}], "}"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMatchingPoint", "[", 
      RowBox[{"line_Association", ",", "bcsline_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"lrln", ",", "zerlim", ",", "FixAt"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lrln", "=", 
         RowBox[{"RelateLines", "[", 
          RowBox[{"line", ",", "bcsline", ",", "True"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"lrln", "===", "False"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Global`DebugData", "=", 
            RowBox[{"{", 
             RowBox[{"bcsline", ",", "line"}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
           "ReportError", "[", "\"\<GetMatchingPoint: Internal error\>\"", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"DependsQ", "[", 
           RowBox[{"lrln", ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"zerlim", "=", 
            RowBox[{
             RowBox[{"Limit", "[", 
              RowBox[{"lrln", ",", 
               RowBox[{"x", "\[Rule]", "0"}]}], "]"}], "//", "PChop"}]}], ";",
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"zerlim", "===", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"FixAt", "=", "0"}], ";"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "ReportError", "[", "\"\<GetMatchingPoint: Internal error.\>\"",
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"FixAt", "=", "lrln"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "FixAt"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Removes", " ", "multiple", " ", "occurrences", " ", "of", " ", "theta", 
     " ", 
     RowBox[{"functions", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetAttributes", "[", 
     RowBox[{"Project\[Theta]s", ",", "Listable"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Project\[Theta]s", "[", 
      RowBox[{"Expr_", ",", 
       RowBox[{"f_", ":", "Expand"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "\[Theta]mPart", ",", "\[IndentingNewLine]", "\[Theta]pPart"}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"GetCases", "[", 
            RowBox[{"Expr", ",", 
             RowBox[{"\[Theta]p", "|", "\[Theta]m"}]}], "]"}], "]"}], "===", 
          "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"f", "[", "Expr", "]"}], "//", "SExpand"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Theta]mPart", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Expr", "/.", 
              RowBox[{"\[Theta]p", "\[Rule]", "0"}]}], "/.", 
             RowBox[{"\[Theta]m", "\[Rule]", "1"}]}], ")"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Theta]pPart", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Expr", "/.", 
              RowBox[{"\[Theta]m", "\[Rule]", "0"}]}], "/.", 
             RowBox[{"\[Theta]p", "\[Rule]", "1"}]}], ")"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"\[Theta]pPart", "+", "\[Theta]mPart"}], "]"}], "//", 
              RowBox[{"(", 
               RowBox[{"PChop", "@*", "SExpand"}], ")"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                FractionBox["1", "2"], "\[Theta]m"}], "+", 
               RowBox[{
                FractionBox["1", "2"], "\[Theta]p"}]}], "*)"}], 
             FractionBox["1", "2"], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"\[Theta]pPart", "-", "\[Theta]mPart"}], "]"}], "//", 
              RowBox[{"(", 
               RowBox[{"PChop", "@*", "SExpand"}], ")"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], "\[Theta]p"}], "-", 
              RowBox[{
               FractionBox["1", "2"], "\[Theta]m"}]}], ")"}]}]}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"MatrixLogxInverse", "[", "Mat_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"MaxLogxPower", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Mat", "//", "Dimensions"}], "//", "First"}], ")"}], "-",
            "1"}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{"Mat", ",", 
               RowBox[{
                SuperscriptBox["Logx", 
                 RowBox[{"k_", ":", "1"}]], "\[RuleDelayed]", "k"}], ",", 
               "Infinity"}], "]"}], ",", "0"}], "]"}], "//", "Max"}], "*)"}], 
         ",", "BB", ",", "AAA", ",", "AA"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AAA", "=", 
         RowBox[{"Mat", "//", "DiffExp`Private`SExpand"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AA", "[", "0", "]"}], "=", 
         RowBox[{"AAA", "/.", 
          RowBox[{"Logx", "\[Rule]", "0"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"BB", "[", "0", "]"}], "=", 
         RowBox[{"Inverse", "[", 
          RowBox[{"AA", "[", "0", "]"}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{
            "Method", "\[Rule]", "\"\<DivisionFreeRowReduction\>\""}]}], 
           "*)"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"AA", "[", "mm", "]"}], "=", 
            RowBox[{"Coefficient", "[", 
             RowBox[{"AAA", ",", 
              SuperscriptBox["Logx", "mm"]}], "]"}]}], 
           RowBox[{"(*", 
            RowBox[{"AAA", "-", 
             RowBox[{"(", 
              RowBox[{"AAA", "/.", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["Logx", "k_"], "/;", 
                 RowBox[{"(", 
                  RowBox[{"k", "===", "mm"}], ")"}]}], "\[RuleDelayed]", 
                "0"}]}], ")"}]}], "*)"}], 
           RowBox[{"(*", 
            RowBox[{"AAA", "/.", 
             RowBox[{
              RowBox[{
               SuperscriptBox["Logx", "k_"], "/;", 
               RowBox[{"!", 
                RowBox[{"(", 
                 RowBox[{"k", "===", "mm"}], ")"}]}]}], "\[RuleDelayed]", 
              "0"}]}], "*)"}], 
           RowBox[{"(*", 
            RowBox[{"Coefficient", "[", 
             RowBox[{"AAA", ",", 
              SuperscriptBox["Logx", "mm"]}], "]"}], "*)"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"BB", "[", "mm", "]"}], "=", 
            RowBox[{"-", 
             RowBox[{"MatrixMultiplySExpand", "[", 
              RowBox[{
               RowBox[{"BB", "[", "0", "]"}], ",", 
               RowBox[{"(", 
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"AA", "[", "jj", "]"}], ".", 
                   RowBox[{"BB", "[", 
                    RowBox[{"mm", "-", "jj"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"jj", ",", "1", ",", "mm"}], "}"}]}], "]"}], 
                ")"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"mm", ",", "1", ",", "MaxLogxPower"}], "}"}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"BB", "[", "mm", "]"}], 
            SuperscriptBox["Logx", "mm"]}], ",", 
           RowBox[{"{", 
            RowBox[{"mm", ",", "0", ",", "MaxLogxPower"}], "}"}]}], "]"}], "//",
          "DiffExp`Private`SExpand"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntegrateSystem", "[", 
      RowBox[{
       RowBox[{"bcs2", ":", "_List", ":", "\"\<?\>\""}], ",", 
       RowBox[{"line2_Association", "|", "line2_List"}], ",", 
       RowBox[{"opts2_", ":", 
        RowBox[{"{", "}"}]}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "bcs", ",", "line", ",", "lrln", ",", "lrln2", ",", "BCSRelevant", 
         ",", "relevantinds", ",", "IgnorePositions", ",", "CurrBlock", ",", 
         "HomogeneousEquation", ",", "Solns", ",", "MtildeMat", ",", "GMat", 
         ",", "FMat", ",", "FMatInv", ",", "FMatInvBMat", ",", "BMat", ",", 
         "CrossC", ",", "bVec", ",", "IntegrationData", ",", "fGeneral", ",", 
         "FixAt", ",", "BoundaryEqns1", ",", "BoundaryEqns2", ",", 
         "boundarysols", ",", "cIndices", ",", "Cmat", ",", "Cb", ",", 
         "cpivs", ",", "csol", ",", "NewResults", ",", "Wronsk", ",", "ll", 
         ",", "FMat2", ",", "NMat", ",", "HomogeneousEquation2", ",", 
         "MtildeMat2", ",", "NMat2", ",", "Solns2", ",", "Wronsk2", ",", 
         "WronskInvPrime", ",", "WWinvprimeprod", ",", "WronskInv", ",", 
         RowBox[{"opts", "=", "opts2"}], ",", "DEqnMatricesExpandedCopy", ",",
          "TurnOffPade", ",", "MyN", ",", "MatricesMSupj", ",", 
         "nthOrderDifferentialEquations", ",", "TmpSols", ",", 
         "HighestOrderDifferentialEquationPosition", ",", "SolveFrom", ",", 
         "nthOrderDifferentialEquationsSolutions", ",", "MtildeMatrix", ",", 
         "bSupjVecs", ",", "MyHomogeneousSolutions", ",", 
         "MyNumberOfSolutions", ",", "MyInhomogeneousTerm", ",", 
         "VanishingTerms", ",", "csCurr", ",", "OverdeterminedEqns", ",", 
         "CsPartSol", ",", "CsNullVectors", ",", "CsGeneralSol", ",", 
         "CsReps", ",", "DerivativeVec", ",", "BDerVec", ",", "LineRat", ",", 
         "csFreedom", ",", "CouldntSolve", ",", "xAdd", ",", 
         "IndeterminatesRemaining", ",", "VanishingTermsCurr", ",", 
         "LogsPresent", ",", "AlgebraicRootsPresent", ",", 
         "TmpSolutionsNormal", ",", "MatricesMSupjExp", ",", 
         "InhomPlaceHolder", ",", "MtildeInv"}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"line2", "[", 
            RowBox[{"[", "0", "]"}], "]"}], "===", "List"}], ",", 
          RowBox[{"line", "=", 
           RowBox[{
            RowBox[{"line2", "//", "Association"}], "//", "KeySort"}]}], ",", 
          RowBox[{"line", "=", 
           RowBox[{"line2", "//", "KeySort"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"opts", ",", "\"\<TransportToCall\>\""}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"BenchmarkData", "=", 
            RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "=", 
            RowBox[{"Association", "[", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{
             RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], ",", 
             RowBox[{"line", "//", "N"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
             RowBox[{"line", "//", "N"}], "]"}], "=", 
            RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
             "\"\<ComputationTime\>\"", "]"}], "=", 
            RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "@@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"!", 
               RowBox[{"DependsQ", "[", 
                RowBox[{
                 RowBox[{"Keys", "@", "line"}], ",", "#"}], "]"}]}], "&"}], "/@",
              "ExternalScalesVal"}], ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "ReportError", "[", 
            "\"\<The line does not fix all kinematic invariants and masses!\>\
\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"opts", ",", "\"\<TransportToCall\>\""}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
            "PrintInfo", "[", 
             "\"\<Obtaining series solutions along provided line..\>\"", 
             "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Accuracy", "[", "line", "]"}], "<", 
              "FEWorkingPrecision"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"line", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"line", "//", "Normal"}], "//", 
                 RowBox[{
                  RowBox[{"SetPrecision", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"2", "FEWorkingPrecision"}]}], "]"}], "&"}]}], "//",
                 "Association"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
              "PrintWarning", "[", 
               "\"\<Accuracy of the line/point is lower than the working \
precision. The precision has been artificially increased.\>\"", "]"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TurnOffPade", "[", "]"}], ":=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"FEC", "[", "UsePade", "]"}], "===", "True"}], "&&", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"opts", ",", "\"\<TransportToCall\>\""}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "PrintWarning", "[", 
             "\"\<Due to the presence of free parameters Pade approximants \
will be disabled. You will have to manually enable them again in the \
configuration by setting UsePade -> True!\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"DiffExpConfiguration", "[", "UsePade", "]"}], "=", 
             "False"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{
              RowBox[{"FEC", "[", "\"\<Parallel\>\"", "]"}], "===", 
              "False"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Kernels", "[", "]"}], "===", 
                RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"LaunchKernels", "[", 
                 RowBox[{"FEC", "[", "\"\<Parallel\>\"", "]"}], "]"}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"$DistributedContexts", "=", "None"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"DistributeDefinitions", "[", 
              RowBox[{
              "DiffExpConfiguration", ",", "FEC", ",", "SExpand", ",", 
               "SMultiply"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
          ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"BufferedData", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"MyWronsk", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"MyWronskDetInv", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "To", " ", "deal", " ", "with", " ", "the", " ", "output", " ", 
           "of", " ", "SaveExpansions"}], " ", "=", " ", "True"}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"bcs2", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a_Association", ",", "__"}], "}"}], ",", "_"}], 
             "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"bcs", "=", 
            RowBox[{"bcs2", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"bcs", "=", "bcs2"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{"bcs2", "===", "\"\<?\>\""}], ")"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"bcs", ",", "FixAt"}], "}"}], "=", 
            RowBox[{"CheckBoundaryConditionsAndReparametrize", "[", 
             RowBox[{"bcs", ",", "line"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
            "PrintDebug", "[", "\"\<Boundary conditions are given by:\>\"", 
             "]"}], "[", "2", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"PrintDebug", "[", 
             RowBox[{"\"\<Line: \>\"", ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"bcs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "//", "Normal"}], "//", 
                "N"}], "//", "Association"}]}], "]"}], "[", "2", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"PrintDebug", "[", 
             RowBox[{"\"\<Conditions: \>\"", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"bcs", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "//", "Normal"}], "//", 
               "N"}]}], "]"}], "[", "2", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"PrintDebug", "[", 
             RowBox[{
             "\"\<Fixing boundary conditions at x = \>\"", ",", "FixAt"}], 
             "]"}], "[", "2", "]"}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TurnOffPade", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{
            RowBox[{"Complement", "[", 
             RowBox[{"ExternalScalesVal", ",", 
              RowBox[{"Keys", "[", "line", "]"}]}], "]"}], "===", 
            RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "ReportError", "[", 
            "\"\<Line does not fix all kinematic variables!\>\"", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"PrepareAnalyticContinuation", "[", "line", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"opts", ",", "\"\<TransportToCall\>\""}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "We", " ", "do", " ", "this", " ", "because", " ", "the", " ", 
            "user", " ", "might", " ", "have", " ", "aborted", " ", 
            "TransportTo", " ", "while", " ", "using", " ", "the", " ", 
            "option", " ", 
            RowBox[{"AccuracyGoal", "."}]}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ExpansionOrderVal", "=", 
            RowBox[{"FEC", "[", "ExpansionOrder", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ClearMatrices", "[", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
              RowBox[{"line", "//", "N"}], "]"}], "[", 
             "\"\<MatrixExpansion\>\"", "]"}], "=", 
            RowBox[{"AbsoluteTime", "[", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"PrepareMatrices", "[", "line", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"opts", ",", "\"\<TransportToCall\>\""}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
              RowBox[{"line", "//", "N"}], "]"}], "[", 
             "\"\<MatrixExpansion\>\"", "]"}], "=", 
            RowBox[{
             RowBox[{"AbsoluteTime", "[", "]"}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
               RowBox[{"line", "//", "N"}], "]"}], "[", 
              "\"\<MatrixExpansion\>\"", "]"}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"InitializeIntegrationSequence", "[", "line", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"IntegrationData", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"DEqnMatricesExpandedCopy", "=", 
         RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
           RowBox[{"line", "//", "N"}], "]"}], "[", 
          "\"\<ComputationTimes\>\"", "]"}], "=", 
         RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
            RowBox[{"line", "//", "N"}], "]"}], "[", 
           "\"\<ComputationTimes\>\"", "]"}], "[", "\"\<Integrals\>\"", "]"}],
          "=", 
         RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
           RowBox[{"line", "//", "N"}], "]"}], "[", 
          "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "=", 
         RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
            RowBox[{"line", "//", "N"}], "]"}], "[", 
           "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
          "\"\<Integrals\>\"", "]"}], "=", 
         RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"PrintInfo", "[", 
             RowBox[{
             "\"\<Currently at order: \[Epsilon]^\>\"", ",", "epsord", ",", 
              "\"\<.\>\""}], "]"}], "[", "2", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
               RowBox[{"line", "//", "N"}], "]"}], "[", 
              "\"\<ComputationTimes\>\"", "]"}], "[", "epsord", "]"}], "=", 
            RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"IntegrationDataTab", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"IntegrationData", "[", 
               RowBox[{"{", 
                RowBox[{"ind", ",", "myeps"}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"ind", ",", "NumIntegrals"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"myeps", ",", "0", ",", 
                RowBox[{"epsord", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"epsord", ">", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"bVec1", "=", 
               RowBox[{
                RowBox[{"DEqnMatricesExpandedCopy", "[", "1", "]"}], ".", 
                RowBox[{"IntegrationDataTab", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", 
                   RowBox[{"epsord", "-", "1", "+", "1"}]}], "]"}], "]"}]}]}],
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"epsord", ">", "1"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"bVecRest", "=", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"DEqnMatricesExpandedCopy", "[", "lind", "]"}], 
                   ".", 
                   RowBox[{"IntegrationDataTab", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"epsord", "-", "lind", "+", "1"}]}], "]"}], 
                    "]"}]}], "//", "SExpand"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"lind", ",", "2", ",", "epsord"}], "}"}]}], "]"}]}],
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"KeyExistsQ", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<ComputationTimes\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], ",", "intind"}], "]"}]}], ",",
                 "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<ComputationTimes\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "=", 
                  RowBox[{"Association", "[", "]"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                   "\"\<ComputationTimes\>\"", "]"}], "[", 
                  "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "[", 
                "epsord", "]"}], "=", 
               RowBox[{"AbsoluteTime", "[", "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"PrintInfo", "[", 
                RowBox[{
                "\"\<Integrating integral(s) \>\"", ",", "intind", ",", " ", 
                 "\"\< at order \[Epsilon]^\>\"", ",", "epsord", ",", 
                 "\"\<.\>\""}], "]"}], "[", "3", "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "PrintDebug", "[", "\"\<Getting inhomogeneous terms.\>\"", 
                "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"jinds", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"Range", "[", "NumIntegrals", "]"}], ",", "intind"}],
                 "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"IntegrationDataTab0jind", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"IntegrationData", "[", 
                  RowBox[{"{", 
                   RowBox[{"ind", ",", "myeps"}], "}"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"ind", ",", "jinds"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"myeps", ",", "0", ",", "epsord"}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"bVec0", "=", 
               RowBox[{"SExpand", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"DEqnMatricesExpandedCopy", "[", "0", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"intind", ",", "jinds"}], "]"}], "]"}], ".", 
                 RowBox[{"IntegrationDataTab0jind", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"epsord", "+", "1"}]}], "]"}], "]"}]}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"Which", "[", 
               RowBox[{
                RowBox[{"epsord", "===", "0"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"bVec", "=", 
                  RowBox[{"bVec0", "//", "SExpand"}]}], ";"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"epsord", "===", "1"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"bVec", "=", 
                  RowBox[{
                   RowBox[{"bVec0", "+", 
                    RowBox[{"bVec1", "[", 
                    RowBox[{"[", "intind", "]"}], "]"}]}], "//", 
                   "SExpand"}]}], ";"}], ",", "\[IndentingNewLine]", 
                RowBox[{"epsord", ">", "1"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"bVec", "=", 
                  RowBox[{
                   RowBox[{"bVec0", "+", 
                    RowBox[{"bVec1", "[", 
                    RowBox[{"[", "intind", "]"}], "]"}], "+", 
                    RowBox[{"bVecRest", "[", 
                    RowBox[{"[", "intind", "]"}], "]"}]}], "//", 
                   "SExpand"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"PrintDebug", "[", "\"\<Done.\>\"", "]"}], "[", "3", 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Which", "[", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "Integration", " ", "of", " ", "integral", " ", "without", 
                 " ", "homogeneous", " ", "components"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "intind", "]"}], "===", "1"}], "&&", 
                 RowBox[{
                  RowBox[{"PChop", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], "]"}], "===", 
                  RowBox[{"{", 
                   RowBox[{"{", "0", "}"}], "}"}]}]}], ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"epsord", "===", "0"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "=", 
                    "0"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"cIndices", "=", 
                  RowBox[{"{", 
                   SubscriptBox["c", "1"], "}"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"PChop", "[", "bVec", "]"}], "===", 
                    RowBox[{"{", "0", "}"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"fGeneral", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["c", "1"], "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    RowBox[{"ExpansionOrderVal", "+", "1"}]]}], "}"}]}], 
                    ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"fGeneral", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DiffExpIntegrate", "[", 
                    RowBox[{
                    RowBox[{"bVec", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "x"}], "]"}], "+", 
                    SubscriptBox["c", "1"], "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    RowBox[{"ExpansionOrderVal", "+", "1"}]]}], 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{"+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    RowBox[{"ExpansionOrderVal", "+", "1"}]]}], " ", "is", 
                    " ", "added", " ", "because", " ", "otherwise", " ", "it",
                     " ", "might", " ", "happen", " ", "that", " ", 
                    "fGeneral", " ", "is", " ", "not", " ", "a", " ", 
                    RowBox[{"series", "."}]}], " ", "*)"}], "}"}]}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{"FEC", "[", "IntegrationStrategy", "]"}], "===", 
                 "\"\<Default\>\""}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"Default", " ", "integration", " ", "strategy"}], 
                 "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"epsord", "===", "0"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"BufferedData", ",", "intind"}], "]"}]}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "=", 
                    RowBox[{"AbsoluteTime", "[", "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "intind", "]"}], ">", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"PrintInfo", "[", 
                    RowBox[{"\"\<Combining differential equations: \>\"", ",", 
                    RowBox[{"intind", "\[Rule]", 
                    RowBox[{"intind", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", "\"\<.\>\""}], 
                    "]"}], "[", "3", "]"}], ";"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ll", "=", 
                    RowBox[{"intind", "//", "Length"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"HomogeneousEquation", ",", "MtildeMat"}], "}"}], 
                    "=", 
                    RowBox[{
                    "CombineDifferentialEquationsHomogeneous", "[", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesFactored", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
                    "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{
                    "\"\<Found homogeneous differential equation: \>\"", ",", 
                    RowBox[{
                    RowBox[{"HomogeneousEquation", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], "4"]}], "//", "SN"}]}], 
                    "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"NMat", "=", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ind", "<", "ll"}], ",", 
                    RowBox[{"UnitVector", "[", 
                    RowBox[{"ll", ",", 
                    RowBox[{"ind", "+", "1"}]}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"HomogeneousEquation", "[", 
                    RowBox[{"[", 
                    RowBox[{"Range", "@", "ll"}], "]"}], "]"}]}]}], "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", "ll"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", "\"\<Deriving solutions...\>\"", "]"}],
                     "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Solns", "=", 
                    RowBox[{
                    "FrobeniusSolutions", "[", "HomogeneousEquation", "]"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", 
                    "\"\<All homogeneous solutions found...\>\"", "]"}], "[", 
                    "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", "\"\<Deriving period matrix...\>\"", 
                    "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Wronsk", "=", 
                    RowBox[{
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{
                    RowBox[{"Solns", "[", 
                    RowBox[{"[", "iind", "]"}], "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"CA", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"jind", "-", "1"}]}], "]"}]}]}], "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"jind", ",", "ll"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"iind", ",", "ll"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}], "//", "SExpand"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", "\"\<Got Wronskian...\>\"", "]"}], "[",
                     "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", "\"\<Inverting Wronskian...\>\"", 
                    "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<InvWronskSolver\>\"", "]"}], 
                    "===", "\"\<Auto\>\""}], ")"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"DependsQ", "[", 
                    RowBox[{"Wronsk", ",", "Logx"}], "]"}], ")"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CurrInvWronskSolver", "=", "\"\<Frobenius\>\""}],
                     ";"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CurrInvWronskSolver", "=", "\"\<Inverse\>\""}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"CurrInvWronskSolver", "=", 
                    RowBox[{"FEC", "[", "\"\<InvWronskSolver\>\"", "]"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "CurrInvWronskSolver", "===", "\"\<Frobenius\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", 
                    "\"\<Determining inverse Wronskian using the Frobenius \
method.\>\"", "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"HomogeneousEquation2", ",", "MtildeMat2"}], 
                    "}"}], "=", 
                    RowBox[{
                    "CombineDifferentialEquationsHomogeneous", "[", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "NMat"}], "//", "Transpose"}], ",", "1"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"NMat2", "=", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ind", "<", "ll"}], ",", 
                    RowBox[{"UnitVector", "[", 
                    RowBox[{"ll", ",", 
                    RowBox[{"ind", "+", "1"}]}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"HomogeneousEquation2", "[", 
                    RowBox[{"[", 
                    RowBox[{"Range", "@", "ll"}], "]"}], "]"}]}]}], "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", "ll"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"Solns2", "=", 
                    RowBox[{
                    "FrobeniusSolutions", "[", "HomogeneousEquation2", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", "\"\<Deriving inverse Wronskian.\>\"", 
                    "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Wronsk2", "=", 
                    RowBox[{
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{
                    RowBox[{"Solns2", "[", 
                    RowBox[{"[", "iind", "]"}], "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"CA", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"jind", "-", "1"}]}], "]"}]}]}], "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"jind", ",", "ll"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"iind", ",", "ll"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}], "//", "SExpand"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{"Cross", "-", 
                    RowBox[{"checking", " ", "Wronskians"}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "CurrCrosscheckFlags", ",", "\"\<Wronskians\>\""}], "]"}],
                     "===", "True"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", "\"\<Cross-checking Wronskians.\>\"", 
                    "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"CrossC", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"Wronsk", ",", "x"}], "]"}], "-", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"NMat", ",", "Wronsk"}], "]"}]}], "//", 
                    RowBox[{"(", 
                    RowBox[{"CPChop", "@*", "SExpand"}], ")"}]}], ")"}], "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckVerifyResultOrder"]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{"\"\<Found: \>\"", ",", 
                    RowBox[{
                    RowBox[{"CrossC", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckPrintResultOrder"]}], "//", "SN"}]}], "]"}], 
                    "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{"SameQ", "@@", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CrossC", "//", "Normal"}], "//", "Flatten"}], 
                    ",", "0"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "ReportError", "[", "\"\<Cross-check failed.\>\"", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"CrossC", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"Wronsk2", ",", "x"}], "]"}], "-", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"NMat2", ",", "Wronsk2"}], "]"}]}], "//", 
                    RowBox[{"(", 
                    RowBox[{"PChop", "@*", "SExpand"}], ")"}]}], ")"}], "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckVerifyResultOrder"]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{"\"\<Found: \>\"", ",", 
                    RowBox[{
                    RowBox[{"CrossC", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckPrintResultOrder"]}], "//", "SN"}]}], "]"}], 
                    "[", "1", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{"SameQ", "@@", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CrossC", "//", "Normal"}], "//", "Flatten"}], 
                    ",", "0"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "ReportError", "[", "\"\<Cross-check failed.\>\"", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"WronskInvPrime", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Inverse", "[", "MtildeMat2", "]"}], ".", 
                    "Wronsk2"}], "//", "Transpose"}], "//", "SExpand"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", "\"\<Deriving inverse Wronskian..\>\"",
                     "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"WWinvprimeprod", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"Normal", "@", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"WronskInvPrime", ",", "Wronsk"}], "]"}]}]}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", 
                    "\"\<Deriving inverse Wronskian...\>\"", "]"}], "[", "3", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"CurrCrosscheckFlags", ",", "\"\<WronskInv\>\""}],
                     "]"}], "===", "True"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"DependsQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"WWinvprimeprod", "//", "CPChop"}], ")"}], "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckVerifyResultOrder"]}], "//", "Normal"}], ",", 
                    "x"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Global`DebugData", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "WronskInvPrime", ",", "Wronsk", ",", "WWinvprimeprod"}], 
                    "}"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "ReportError", "[", 
                    "\"\<Warning, product of Wronskian inverse times \
Wronskian does not match identity. Try increasing \\\"ChopPrecision\\\" or \\\
\"WorkingPrecision\\\", or try decreasing \\\"ExpansionOrder\\\".\>\"", "]"}],
                     "[", "1", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Global`DebugData", "=", 
                    RowBox[{"{", "WWinvprimeprod", "}"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"WWinvprimeprod", "=", 
                    RowBox[{
                    RowBox[{"WWinvprimeprod", "/.", " ", 
                    RowBox[{
                    SuperscriptBox["x", 
                    RowBox[{"k_", ":", "1"}]], "\[RuleDelayed]", "0"}]}], "/.", 
                    RowBox[{"Logx", "\[Rule]", "0"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"WronskInv", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"WWinvprimeprod", "//", "Inverse"}], ")"}], ",", 
                    "WronskInvPrime"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", "\"\<Done.\>\"", "]"}], "[", 
                    "3", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"CurrInvWronskSolver", "===", "\"\<Inverse\>\""}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"WronskInv", "=", 
                    RowBox[{"Inverse", "[", 
                    RowBox[{"Wronsk", ",", 
                    RowBox[{
                    "Method", "\[Rule]", 
                    "\"\<DivisionFreeRowReduction\>\""}]}], "]"}]}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "CurrInvWronskSolver", "===", "\"\<InverseLogx\>\""}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"WronskInv", "=", 
                    RowBox[{"MatrixLogxInverse", "[", "Wronsk", "]"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", "\"\<Inverting MTilde... \>\"", "]"}], 
                    "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Check", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeInv", "=", 
                    RowBox[{"Inverse", "[", 
                    RowBox[{"MtildeMat", ",", 
                    RowBox[{
                    "Method", "\[Rule]", "\"\<DivisionFreeRowReduction\>\""}],
                     ",", 
                    RowBox[{"ZeroTest", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Normal", "[", "#", "]"}], "\[Equal]", "0"}], 
                    "&"}], ")"}]}]}], "]"}]}], ";"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeInv", "=", 
                    RowBox[{"DiffExpSeries", "[", 
                    RowBox[{
                    RowBox[{"Inverse", "[", "MtildeMat", "]"}], "//", 
                    "Together"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"FMat", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"MtildeInv", ",", "Wronsk"}], "]"}], "//", 
                    "SExpand"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", ",",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintWarning", "[", 
                    "\"\<Encountered numerical instability while inverting \
Mtilde. Turning off DivisionFreeRowReduction and trying again..\>\"", "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"FMat", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{
                    RowBox[{"Inverse", "[", "MtildeMat", "]"}], ",", 
                    "Wronsk"}], "]"}], "//", "SExpand"}], ")"}]}]}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"FMatInv", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"(", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"WronskInv", ",", "MtildeMat"}], "]"}], ")"}]}]}],
                     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{"Cross", "-", 
                    RowBox[{"checking", " ", "FMat"}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "CurrCrosscheckFlags", ",", "\"\<PeriodMatrix\>\""}], 
                    "]"}], "===", "True"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", 
                    "\"\<Cross-checking period matrix..\>\"", "]"}], "[", "1",
                     "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"CrossC", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"FMat", ",", "x"}], "]"}], "-", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], ",", 
                    RowBox[{"FMat", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckVerifyResultOrder"]}]}], "]"}]}], "//", 
                    RowBox[{"(", 
                    RowBox[{"CPChop", "@*", "SExpand"}], ")"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Global`DebugData", "=", 
                    RowBox[{"{", 
                    RowBox[{"FMat", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], ",", 
                    "CrossC", ",", "MtildeMat", ",", "Wronsk"}], "}"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{"\"\<Found: \>\"", ",", 
                    RowBox[{
                    RowBox[{"CrossC", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckPrintResultOrder"]}], "//", "SN"}]}], "]"}], 
                    "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{"SameQ", "@@", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CrossC", "//", "Normal"}], "//", "Flatten"}], 
                    ",", "0"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "ReportError", "[", 
                    "\"\<Cross-check of period matrix failed\>\"", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", "\"\<Period matrix derived.\>\"", 
                    "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"BufferedData", "[", "intind", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"FMat", ",", "FMatInv"}], "}"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "=", 
                    RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}]}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"FMat", ",", "FMatInv"}], "}"}], "=", 
                  RowBox[{"BufferedData", "[", "intind", "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                  "PrintDebug", "[", "\"\<Setting up general solution.\>\"", 
                   "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"BMat", "=", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", 
                    RowBox[{"Length", "@", "intind"}]], 
                    RowBox[{"Table", "[", 
                    RowBox[{"bVec", ",", 
                    RowBox[{"{", 
                    RowBox[{"iind", ",", 
                    RowBox[{"intind", "//", "Length"}]}], "}"}]}], "]"}]}], "//",
                    "Transpose"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"cIndices", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    SubscriptBox["c", "i"], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"intind", "//", "Length"}]}], "}"}]}], "]"}]}], 
                 ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"GMat", "=", 
                  RowBox[{
                   RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"FMat", ",", 
                    RowBox[{
                    RowBox[{"DiffExpIntegrate", "[", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"FMatInv", ",", "BMat"}], "]"}], "]"}], "+", 
                    RowBox[{"DiagonalMatrix", "[", "cIndices", "]"}]}]}], 
                    "]"}], "//", "PChop"}]}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "CurrCrosscheckFlags", ",", 
                    "\"\<GeneralSolutionMatrix\>\""}], "]"}], "===", "True"}],
                    ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", 
                    "\"\<Cross-checking GMat with differential \
equations.\>\"", "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"CrossC", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"GMat", ",", "x"}], "]"}], "-", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], ",", 
                    RowBox[{"GMat", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckVerifyResultOrder"]}]}], "]"}], "-", "BMat"}],
                     "//", 
                    RowBox[{"(", 
                    RowBox[{"CPChop", "@*", "SExpand"}], ")"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Global`DebugData", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "FMat", ",", "GMat", ",", "FMatInv", ",", "BMat", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], ",", 
                    "CrossC", ",", "MtildeMat", ",", "Wronsk"}], "}"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{"\"\<Found: \>\"", ",", 
                    RowBox[{
                    RowBox[{"CrossC", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckPrintResultOrder"]}], "//", "SN"}]}], "]"}], 
                    "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{"SameQ", "@@", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"CrossC", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckVerifyResultOrder"]}], "//", "Normal"}], "//",
                     "Flatten"}], ",", "0"}], "]"}]}], ")"}]}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "ReportError", "[", 
                    "\"\<Cross-check of solution matrix failed\>\"", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"fGeneral", "=", 
                  RowBox[{"Total", "[", 
                   RowBox[{"GMat", "//", "Transpose"}], "]"}]}], ";"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}], "*)"}], "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{"FEC", "[", "IntegrationStrategy", "]"}], "===", 
                 "\"\<VOPAlt\>\""}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"PrintDebug", "[", 
                   RowBox[{
                   "\"\<Solving by alternative strategy. \>\"", ",", 
                    "intind"}], "]"}], "[", "3", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"MyN", "=", 
                  RowBox[{"intind", "//", "Length"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"epsord", "===", "0"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"BufferedData", ",", "intind"}], "]"}]}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "=", 
                    RowBox[{"AbsoluteTime", "[", "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"NestList", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SExpand", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "+", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}]}], 
                    "]"}]}], ")"}], "]"}], "&"}], ",", 
                    RowBox[{"IdentityMatrix", "[", "MyN", "]"}], ",", "MyN"}],
                     "]"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "=", 
                    RowBox[{"NestList", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Together", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "+", 
                    RowBox[{"#", ".", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesFactored", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}]}]}], 
                    ")"}], "]"}], "&"}], ",", 
                    RowBox[{"IdentityMatrix", "[", "MyN", "]"}], ",", "MyN"}],
                     "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"nthOrderDifferentialEquations", "=", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"TmpSols", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MatricesMSupj", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "ind"}], "]"}], "]"}], "//", 
                    "Transpose"}], "//", 
                    RowBox[{
                    RowBox[{"NullSpace", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    "Method", "\[Rule]", "\"\<DivisionFreeRowReduction\>\""}],
                     ",", 
                    RowBox[{"Tolerance", "\[Rule]", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "LinearSolveChopPrecisionVal"}]}]}]}], "]"}],
                     "&"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"TmpSols", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MatricesMSupj", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "ind"}], "]"}], "]"}], "//", 
                    "Transpose"}], "//", "NullSpace"}], "//", "Together"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"TmpSols", "=", 
                    RowBox[{
                    "Internal`DeleteTrailingZeros", "/@", "TmpSols"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"TmpSols", "=", 
                    RowBox[{"DiffExpSeries", "[", 
                    RowBox[{
                    RowBox[{"MinimalBy", "[", 
                    RowBox[{"TmpSols", ",", "Length"}], "]"}], "//", 
                    "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    FractionBox["TmpSols", 
                    RowBox[{"TmpSols", "//", "Last"}]]}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", "MyN"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "=", 
                    RowBox[{"DiffExpSeries", "[", "MatricesMSupj", "]"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"HighestOrderDifferentialEquationPosition", "=", 
                    RowBox[{
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"Length", "/@", "nthOrderDifferentialEquations"}],
                     ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Length", "/@", "nthOrderDifferentialEquations"}],
                     "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SolveFrom", "=", 
                    RowBox[{"Range", "@", 
                    RowBox[{
                    "Length", "@", "nthOrderDifferentialEquations"}]}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"nthOrderDifferentialEquationsSolutions", "=", 
                    RowBox[{
                    "FrobeniusSolutions", "/@", 
                    "nthOrderDifferentialEquations"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MyN", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeMatrix", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"DiffExpSeries", "[", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"SolveFrom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Range", "[", "MyN", "]"}], ",", 
                    RowBox[{"Range", "[", "MyN", "]"}]}], "]"}], "]"}], 
                    "]"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeMatrix", "=", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"SolveFrom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Range", "[", "MyN", "]"}], ",", 
                    RowBox[{"Range", "[", "MyN", "]"}]}], "]"}], "]"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeMatrix", "=", 
                    RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", 
                    "\"\<Determining Wronskian matrices.\>\"", "]"}], "[", 
                    "3", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MyHomogeneousSolutions", "=", 
                    RowBox[{"nthOrderDifferentialEquationsSolutions", "[", 
                    RowBox[{"[", "myintind", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MyWronsk", "[", 
                    RowBox[{"{", 
                    RowBox[{"intind", ",", "myintind"}], "}"}], "]"}], "=", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{
                    RowBox[{"MyHomogeneousSolutions", "[", 
                    RowBox[{"[", "mysolind", "]"}], "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"x", ",", "diffind"}], "]"}]}]}], "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"diffind", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "MyHomogeneousSolutions", "]"}], 
                    "-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"mysolind", ",", 
                    RowBox[{"Length", "[", "MyHomogeneousSolutions", "]"}]}], 
                    "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"myintind", ",", "SolveFrom"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"BufferedData", "[", "intind", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "MatricesMSupj", ",", "nthOrderDifferentialEquations", 
                    ",", "nthOrderDifferentialEquationsSolutions", ",", 
                    "SolveFrom", ",", "MtildeMatrix"}], "}"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "=", 
                    RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}]}]}], ";",
                     "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{
                    "\"\<Combining homogeneous solutions. \>\"", ",", 
                    "intind"}], "]"}], "[", "3", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"fGeneral", "=", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MyHomogeneousSolutions", "=", 
                    RowBox[{"nthOrderDifferentialEquationsSolutions", "[", 
                    RowBox[{"[", "myintind", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"SExpand", "@", 
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MyHomogeneousSolutions", "[", 
                    RowBox[{"[", "ind", "]"}], "]"}], 
                    RowBox[{"(", 
                    SubscriptBox["c", 
                    RowBox[{"myintind", ",", "ind"}]], ")"}]}], "//", 
                    "SExpand"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", 
                    RowBox[{"MyHomogeneousSolutions", "//", "Length"}]}], 
                    "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"myintind", ",", "SolveFrom"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{"\"\<Done. \>\"", ",", "intind"}], "]"}], "[", 
                    "3", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"VanishingTerms", "=", 
                    RowBox[{"SExpand", "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"fGeneral", ",", "x"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], ".", 
                    "fGeneral"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"IndeterminatesRemaining", "=", 
                    RowBox[{"csCurr", "=", 
                    RowBox[{"GetCases", "[", 
                    RowBox[{"fGeneral", ",", 
                    SubscriptBox["c", 
                    RowBox[{"i_", ",", "j_"}]]}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{"Normal", "[", "VanishingTerms", "]"}], "]"}], "===", 
                    RowBox[{"{", "0", "}"}]}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"xAdd", "=", 
                    RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "IndeterminatesRemaining", "]"}], 
                    ">", 
                    RowBox[{"Length", "[", "fGeneral", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"VanishingTermsCurr", "=", 
                    RowBox[{"Series", "[", 
                    RowBox[{"VanishingTerms", ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "xAdd"}], "}"}]}], "]"}]}], 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{
                    "\"\<Reducing number of indeterminate constants, \
considering terms up to O[x]^\>\"", ",", "xAdd"}], "]"}], "[", "3", "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"OverdeterminedEqns", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"LogxCoeffList", "/@", "VanishingTermsCurr"}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "OverdeterminedEqns", "]"}], ">", 
                    "0"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Cmat", ",", "Cb"}], "}"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "&"}], "@", 
                    RowBox[{"CoefficientArrays", "[", 
                    RowBox[{
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"OverdeterminedEqns", ",", "True"}], "]"}], ",", 
                    "csCurr"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CsPartSol", "=", 
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{"Cmat", ",", "Cb", ",", 
                    RowBox[{"ZeroTest", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"LSPChop", "@", 
                    RowBox[{"Expand", "@", 
                    RowBox[{"Normal", "[", "#1", "]"}]}]}], ",", 
                    "LinearSolveChopPrecisionVal"}], "]"}], "==", "0"}], 
                    "&"}], ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CsNullVectors", "=", 
                    RowBox[{"Cmat", "//", 
                    RowBox[{
                    RowBox[{"NullSpace", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Tolerance", "\[Rule]", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "LinearSolveChopPrecisionVal"}]]}]}], "]"}], 
                    "&"}]}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"CsGeneralSol", "=", 
                    RowBox[{
                    RowBox[{"CsPartSol", "+", 
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CsNullVectors", "[", 
                    RowBox[{"[", "ind", "]"}], "]"}], 
                    SubscriptBox["c", "ind"]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", 
                    RowBox[{"Length", "[", "CsNullVectors", "]"}]}], "}"}]}], 
                    "]"}]}], "//", "SExpand"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CsReps", "=", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"csCurr", "\[Rule]", "CsGeneralSol"}], "]"}], "//",
                     "PChop"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"IndeterminatesRemaining", "=", 
                    RowBox[{"GetCases", "[", 
                    RowBox[{"CsGeneralSol", ",", 
                    SubscriptBox["c", "__"]}], "]"}]}], ";"}]}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"xAdd", "+=", "1"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "IndeterminatesRemaining", "]"}], 
                    "<", 
                    RowBox[{"Length", "[", "fGeneral", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Global`DebugData", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "Cmat", ",", "Cb", ",", "CsGeneralSol", ",", "fGeneral"}],
                     "}"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ReportError", "[", 
                    RowBox[{
                    "\"\<There was an error in obtaining the solutions for \
integrals \>\"", ",", "intind", ",", "\"\< at order \>\"", ",", "epsord", 
                    ",", "\"\< using the \\\"VOP\\\" strategy. Try decreasing \
the value of the option ChopPrecision or increasing the \
WorkingPrecision.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"fGeneral", "=", 
                    RowBox[{"fGeneral", "/.", "CsReps"}]}], ";"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"fGeneral", "=", 
                    RowBox[{"fGeneral", "/.", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"csCurr", "[", 
                    RowBox[{"[", "ind", "]"}], "]"}], "\[Rule]", 
                    SubscriptBox["c", "ind"]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", 
                    RowBox[{"Length", "@", "csCurr"}]}], "}"}]}], "]"}]}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"cIndices", "=", 
                    RowBox[{"GetCases", "[", 
                    RowBox[{"fGeneral", ",", 
                    SubscriptBox["c", "i_"]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"FMat", "=", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"fGeneral", "/.", 
                    RowBox[{"myc", "\[Rule]", "1"}]}], "/.", 
                    RowBox[{
                    SubscriptBox["c", "_"], "\[RuleDelayed]", "0"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"myc", ",", "cIndices"}], "}"}]}], "]"}], "//", 
                    "Transpose"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"FMatInv", "=", 
                    RowBox[{"MatrixLogxInverse", "[", "FMat", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"BufferedData", "[", "intind", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{"FMat", ",", "FMatInv"}], "}"}]}], ";"}]}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"FMat", ",", "FMatInv"}], "}"}], "=", 
                  RowBox[{"BufferedData", "[", "intind", "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                  "PrintDebug", "[", "\"\<Setting up general solution.\>\"", 
                   "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"BMat", "=", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", 
                    RowBox[{"Length", "@", "intind"}]], 
                    RowBox[{"Table", "[", 
                    RowBox[{"bVec", ",", 
                    RowBox[{"{", 
                    RowBox[{"iind", ",", 
                    RowBox[{"intind", "//", "Length"}]}], "}"}]}], "]"}]}], "//",
                    "Transpose"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"cIndices", "=", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    SubscriptBox["c", "i"], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"intind", "//", "Length"}]}], "}"}]}], "]"}]}], 
                 ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"GMat", "=", 
                  RowBox[{
                   RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"FMat", ",", 
                    RowBox[{
                    RowBox[{"DiffExpIntegrate", "[", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"FMatInv", ",", "BMat"}], "]"}], "]"}], "+", 
                    RowBox[{"DiagonalMatrix", "[", "cIndices", "]"}]}]}], 
                    "]"}], "//", "PChop"}]}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    "CurrCrosscheckFlags", ",", 
                    "\"\<GeneralSolutionMatrix\>\""}], "]"}], "===", "True"}],
                    ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", 
                    "\"\<Cross-checking GMat with differential \
equations.\>\"", "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"CrossC", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"GMat", ",", "x"}], "]"}], "-", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], ",", 
                    RowBox[{"GMat", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckVerifyResultOrder"]}]}], "]"}], "-", "BMat"}],
                     "//", 
                    RowBox[{"(", 
                    RowBox[{"CPChop", "@*", "SExpand"}], ")"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Global`DebugData", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "FMat", ",", "GMat", ",", "FMatInv", ",", "BMat", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], ",", 
                    "CrossC", ",", "MtildeMat", ",", "Wronsk"}], "}"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{"\"\<Found: \>\"", ",", 
                    RowBox[{
                    RowBox[{"CrossC", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckPrintResultOrder"]}], "//", "SN"}]}], "]"}], 
                    "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{"SameQ", "@@", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"CrossC", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckVerifyResultOrder"]}], "//", "Normal"}], "//",
                     "Flatten"}], ",", "0"}], "]"}]}], ")"}]}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "ReportError", "[", 
                    "\"\<Cross-check of solution matrix failed\>\"", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"fGeneral", "=", 
                  RowBox[{"Total", "[", 
                   RowBox[{"GMat", "//", "Transpose"}], "]"}]}], ";"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}], "*)"}], "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"FEC", "[", "IntegrationStrategy", "]"}], "===", 
                  "\"\<VOP\>\""}], "||", 
                 RowBox[{
                  RowBox[{"FEC", "[", "IntegrationStrategy", "]"}], "===", 
                  "\"\<VariationOfParameters\>\""}]}], ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"PrintDebug", "[", 
                   RowBox[{
                   "\"\<Solving by variation of parameters. \>\"", ",", 
                    "intind"}], "]"}], "[", "3", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"MyN", "=", 
                  RowBox[{"intind", "//", "Length"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"epsord", "===", "0"}], "&&", 
                    RowBox[{"!", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"BufferedData", ",", "intind"}], "]"}]}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "=", 
                    RowBox[{"AbsoluteTime", "[", "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"NestList", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SExpand", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "+", 
                    RowBox[{"MatrixMultiplySExpand", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}]}], 
                    "]"}]}], ")"}], "]"}], "&"}], ",", 
                    RowBox[{"IdentityMatrix", "[", "MyN", "]"}], ",", "MyN"}],
                     "]"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "=", 
                    RowBox[{"NestList", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Together", "[", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "+", 
                    RowBox[{"#", ".", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesFactored", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}]}]}], 
                    ")"}], "]"}], "&"}], ",", 
                    RowBox[{"IdentityMatrix", "[", "MyN", "]"}], ",", "MyN"}],
                     "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"nthOrderDifferentialEquations", "=", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"TmpSols", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MatricesMSupj", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "ind"}], "]"}], "]"}], "//", 
                    "Transpose"}], "//", 
                    RowBox[{
                    RowBox[{"NullSpace", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    "Method", "\[Rule]", "\"\<DivisionFreeRowReduction\>\""}],
                     ",", 
                    RowBox[{"Tolerance", "\[Rule]", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "LinearSolveChopPrecisionVal"}]}]}]}], "]"}],
                     "&"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"TmpSols", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"MatricesMSupj", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "ind"}], "]"}], "]"}], "//", 
                    "Transpose"}], "//", "NullSpace"}], "//", "Together"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"TmpSols", "=", 
                    RowBox[{
                    "Internal`DeleteTrailingZeros", "/@", "TmpSols"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"TmpSols", "=", 
                    RowBox[{"DiffExpSeries", "[", 
                    RowBox[{
                    RowBox[{"MinimalBy", "[", 
                    RowBox[{"TmpSols", ",", "Length"}], "]"}], "//", 
                    "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    FractionBox["TmpSols", 
                    RowBox[{"TmpSols", "//", "Last"}]]}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", "MyN"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "=", 
                    RowBox[{"DiffExpSeries", "[", "MatricesMSupj", "]"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"HighestOrderDifferentialEquationPosition", "=", 
                    RowBox[{
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"Length", "/@", "nthOrderDifferentialEquations"}],
                     ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"Length", "/@", "nthOrderDifferentialEquations"}],
                     "]"}]}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"nthOrderDifferentialEquations", "[", 
                    RowBox[{
                    "[", "HighestOrderDifferentialEquationPosition", "]"}], 
                    "]"}], "]"}], "<", 
                    RowBox[{"MyN", "+", "1"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SolveFrom", "=", 
                    RowBox[{"Range", "@", 
                    RowBox[{
                    "Length", "@", "nthOrderDifferentialEquations"}]}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"nthOrderDifferentialEquationsSolutions", "=", 
                    RowBox[{
                    "FrobeniusSolutions", "/@", 
                    "nthOrderDifferentialEquations"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MyN", "\[Equal]", "1"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeMatrix", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"DiffExpSeries", "[", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"SolveFrom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Range", "[", "MyN", "]"}], ",", 
                    RowBox[{"Range", "[", "MyN", "]"}]}], "]"}], "]"}], 
                    "]"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeMatrix", "=", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"SolveFrom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Range", "[", "MyN", "]"}], ",", 
                    RowBox[{"Range", "[", "MyN", "]"}]}], "]"}], "]"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeMatrix", "=", 
                    RowBox[{"{", "}"}]}], ";"}]}], "\[IndentingNewLine]", 
                    "]"}], ";"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SolveFrom", "=", 
                    RowBox[{
                    "{", "HighestOrderDifferentialEquationPosition", "}"}]}], 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeMatrix", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"DiffExpSeries", "[", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"SolveFrom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Range", "[", "MyN", "]"}], ",", 
                    RowBox[{"Range", "[", "MyN", "]"}]}], "]"}], "]"}], 
                    "]"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeMatrix", "=", 
                    RowBox[{
                    RowBox[{"MatricesMSupj", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"SolveFrom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Range", "[", "MyN", "]"}], ",", 
                    RowBox[{"Range", "[", "MyN", "]"}]}], "]"}], "]"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"nthOrderDifferentialEquationsSolutions", "=", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"Null", ",", 
                    RowBox[{
                    "Length", "@", "nthOrderDifferentialEquations"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"nthOrderDifferentialEquationsSolutions", "[", 
                    RowBox[{
                    "[", "HighestOrderDifferentialEquationPosition", "]"}], 
                    "]"}], "=", 
                    RowBox[{"FrobeniusSolutions", "@", 
                    RowBox[{"nthOrderDifferentialEquations", "[", 
                    RowBox[{
                    "[", "HighestOrderDifferentialEquationPosition", "]"}], 
                    "]"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", 
                    "\"\<Determining Wronskian matrices.\>\"", "]"}], "[", 
                    "3", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MyHomogeneousSolutions", "=", 
                    RowBox[{"nthOrderDifferentialEquationsSolutions", "[", 
                    RowBox[{"[", "myintind", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MyWronsk", "[", 
                    RowBox[{"{", 
                    RowBox[{"intind", ",", "myintind"}], "}"}], "]"}], "=", 
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{
                    RowBox[{"MyHomogeneousSolutions", "[", 
                    RowBox[{"[", "mysolind", "]"}], "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"x", ",", "diffind"}], "]"}]}]}], "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"diffind", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "MyHomogeneousSolutions", "]"}], 
                    "-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"mysolind", ",", 
                    RowBox[{"Length", "[", "MyHomogeneousSolutions", "]"}]}], 
                    "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{
                    "\"\<Determining 1/WronskianDet: \>\"", ",", "myintind"}],
                     "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MyWronskDetInv", "[", 
                    RowBox[{"{", 
                    RowBox[{"intind", ",", "myintind"}], "}"}], "]"}], "=", 
                    RowBox[{"DiffExpSeries", "[", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MyWronsk", "[", 
                    RowBox[{"{", 
                    RowBox[{"intind", ",", "myintind"}], "}"}], "]"}], "//", 
                    "Det"}], "//", "SExpand"}]], ",", "ExpansionOrderVal"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{
                    "\"\<Done determining 1/WronskianDet: \>\"", ",", 
                    "myintind"}], "]"}], "[", "3", "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"myintind", ",", "SolveFrom"}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"BufferedData", "[", "intind", "]"}], "=", 
                    RowBox[{"{", 
                    RowBox[{
                    "MatricesMSupj", ",", "nthOrderDifferentialEquations", 
                    ",", "nthOrderDifferentialEquationsSolutions", ",", 
                    "SolveFrom", ",", "MtildeMatrix"}], "}"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "=", 
                    RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<HomogeneousSolveAllPreprocessing\>\"", "]"}], "[", 
                    "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}]}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "MatricesMSupj", ",", "nthOrderDifferentialEquations", ",",
                     "nthOrderDifferentialEquationsSolutions", ",", 
                    "SolveFrom", ",", "MtildeMatrix"}], "}"}], "=", 
                  RowBox[{"BufferedData", "[", "intind", "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                  "PrintDebug", "[", "\"\<Determining b's..\>\"", "]"}], "[", 
                  "3", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"bSupjVecs", "=", 
                  RowBox[{"FoldList", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"SExpand", "[", 
                    RowBox[{
                    RowBox[{"#2", ".", "bVec"}], "+", 
                    RowBox[{"SD", "[", 
                    RowBox[{"#1", ",", "x"}], "]"}]}], "]"}], "&"}], ",", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", "MyN"}], "]"}], ",", 
                    RowBox[{"Delete", "[", 
                    RowBox[{"MatricesMSupj", ",", 
                    RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"PrintDebug", "[", 
                   RowBox[{
                   "\"\<Setting up general solutions. \>\"", ",", "intind"}], 
                   "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"fGeneral", "=", 
                  RowBox[{"Table", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"MyHomogeneousSolutions", "=", 
                    RowBox[{"nthOrderDifferentialEquationsSolutions", "[", 
                    RowBox[{"[", "myintind", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"MyNumberOfSolutions", "=", 
                    RowBox[{"MyHomogeneousSolutions", "//", "Length"}]}], ";",
                     "\[IndentingNewLine]", 
                    RowBox[{"MyInhomogeneousTerm", "=", 
                    RowBox[{
                    RowBox[{"nthOrderDifferentialEquations", "[", 
                    RowBox[{"[", "myintind", "]"}], "]"}], ".", 
                    RowBox[{
                    RowBox[{"bSupjVecs", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "myintind"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"Range", "@", 
                    RowBox[{"(", 
                    RowBox[{"MyNumberOfSolutions", "+", "1"}], ")"}]}], "]"}],
                     "]"}]}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"SExpand", "@", 
                    RowBox[{"Sum", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MyWi", "=", 
                    RowBox[{"MyWronsk", "[", 
                    RowBox[{"{", 
                    RowBox[{"intind", ",", "myintind"}], "}"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MyWi", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "ind"}], "]"}], "]"}], "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"MyNumberOfSolutions", "-", "1"}]}], "]"}], ",", 
                    "PlaceHolder"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MyHomogeneousSolutions", "[", 
                    RowBox[{"[", "ind", "]"}], "]"}], 
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["c", 
                    RowBox[{"myintind", ",", "ind"}]], "+", 
                    RowBox[{"DiffExpIntegrate", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MyWronskDetInv", "[", 
                    RowBox[{"{", 
                    RowBox[{"intind", ",", "myintind"}], "}"}], "]"}], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MyWi", "//", "Det"}], "//", "SExpand"}], ")"}], "/.", 
                    RowBox[{
                    "PlaceHolder", "\[Rule]", "MyInhomogeneousTerm"}]}], "//",
                     "SExpand"}], ")"}]}], "//", "SExpand"}], 
                    "\[IndentingNewLine]", "]"}]}], ")"}]}], "//", 
                    "SExpand"}], ")"}], "//", "SExpand"}]}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", 
                    RowBox[{"MyHomogeneousSolutions", "//", "Length"}]}], 
                    "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"myintind", ",", "SolveFrom"}], "}"}]}], 
                   "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]",
                  "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"PrintDebug", "[", 
                   RowBox[{"\"\<Done. \>\"", ",", "intind"}], "]"}], "[", "3",
                   "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Length", "[", "SolveFrom", "]"}], ">", "1"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"VanishingTerms", "=", 
                    RowBox[{"SExpand", "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"fGeneral", ",", "x"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], ".", 
                    "fGeneral"}], "-", "bVec"}], ")"}]}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"IndeterminatesRemaining", "=", 
                    RowBox[{"csCurr", "=", 
                    RowBox[{"GetCases", "[", 
                    RowBox[{"fGeneral", ",", 
                    SubscriptBox["c", 
                    RowBox[{"i_", ",", "j_"}]]}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{
                    RowBox[{"DeleteDuplicates", "[", 
                    RowBox[{"Normal", "[", "VanishingTerms", "]"}], "]"}], "===", 
                    RowBox[{"{", "0", "}"}]}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"xAdd", "=", 
                    RowBox[{"-", "1"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "IndeterminatesRemaining", "]"}], 
                    ">", 
                    RowBox[{"Length", "[", "fGeneral", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"VanishingTermsCurr", "=", 
                    RowBox[{"Series", "[", 
                    RowBox[{"VanishingTerms", ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "xAdd"}], "}"}]}], "]"}]}], 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{
                    "\"\<Reducing number of indeterminate constants, \
considering terms up to O[x]^\>\"", ",", "xAdd"}], "]"}], "[", "3", "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"OverdeterminedEqns", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"LogxCoeffList", "/@", "VanishingTermsCurr"}], 
                    "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "OverdeterminedEqns", "]"}], ">", 
                    "0"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Cmat", ",", "Cb"}], "}"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "&"}], "@", 
                    RowBox[{"CoefficientArrays", "[", 
                    RowBox[{
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"OverdeterminedEqns", ",", "True"}], "]"}], ",", 
                    "csCurr"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CsPartSol", "=", 
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{"Cmat", ",", "Cb", ",", 
                    RowBox[{"ZeroTest", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"LSPChop", "@", 
                    RowBox[{"Expand", "@", 
                    RowBox[{"Normal", "[", "#1", "]"}]}]}], ",", 
                    "LinearSolveChopPrecisionVal"}], "]"}], "==", "0"}], 
                    "&"}], ")"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CsNullVectors", "=", 
                    RowBox[{"Cmat", "//", 
                    RowBox[{
                    RowBox[{"NullSpace", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Tolerance", "\[Rule]", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "LinearSolveChopPrecisionVal"}]]}]}], "]"}], 
                    "&"}]}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"CsGeneralSol", "=", 
                    RowBox[{
                    RowBox[{"CsPartSol", "+", 
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CsNullVectors", "[", 
                    RowBox[{"[", "ind", "]"}], "]"}], 
                    SubscriptBox["c", "ind"]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", 
                    RowBox[{"Length", "[", "CsNullVectors", "]"}]}], "}"}]}], 
                    "]"}]}], "//", "SExpand"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CsReps", "=", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"csCurr", "\[Rule]", "CsGeneralSol"}], "]"}], "//",
                     "PChop"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"IndeterminatesRemaining", "=", 
                    RowBox[{"GetCases", "[", 
                    RowBox[{"CsGeneralSol", ",", 
                    SubscriptBox["c", "__"]}], "]"}]}], ";"}]}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"xAdd", "+=", "1"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "IndeterminatesRemaining", "]"}], 
                    "<", 
                    RowBox[{"Length", "[", "fGeneral", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Global`DebugData", "=", 
                    RowBox[{"{", 
                    RowBox[{"Cmat", ",", "Cb", ",", "CsGeneralSol"}], "}"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"ReportError", "[", 
                    RowBox[{
                    "\"\<There was an error in obtaining the solutions for \
integrals \>\"", ",", "intind", ",", "\"\< at order \>\"", ",", "epsord", 
                    ",", "\"\< using the \\\"VOP\\\" strategy. Try decreasing \
the value of the option ChopPrecision or increasing the \
WorkingPrecision.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"fGeneral", "=", 
                    RowBox[{"fGeneral", "/.", "CsReps"}]}], ";"}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"fGeneral", "=", 
                    RowBox[{"fGeneral", "/.", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"csCurr", "[", 
                    RowBox[{"[", "ind", "]"}], "]"}], "\[Rule]", 
                    SubscriptBox["c", "ind"]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", 
                    RowBox[{"Length", "@", "csCurr"}]}], "}"}]}], "]"}]}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"(*", " ", 
                    RowBox[{
                    RowBox[{
                    "We", " ", "can", " ", "currently", " ", "put", " ", 
                    RowBox[{"fGeneral", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                    RowBox[{
                    "as", " ", "SolveFrom", " ", "is", " ", "either", " ", 
                    "one", " ", "element"}], ",", " ", 
                    RowBox[{"or", " ", "all", " ", 
                    RowBox[{"elements", "."}]}]}], " ", "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"DerivativeVec", "=", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{
                    RowBox[{"fGeneral", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"CA", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"jind", "-", "1"}]}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"jind", ",", 
                    RowBox[{"intind", "//", "Length"}]}], "}"}]}], "]"}], "//",
                     "SExpand"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", " ", 
                    RowBox[{
                    "But", " ", "for", " ", "BDerVec", " ", "we", " ", 
                    "should", " ", "choose", " ", 
                    RowBox[{"SolveFrom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"BDerVec", "=", 
                    RowBox[{
                    RowBox[{"bSupjVecs", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"SolveFrom", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"Range", "@", "MyN"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"Check", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FEC", "[", "\"\<HomogeneousSolve\>\"", "]"}], 
                    "===", "\"\<Expand\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeInv", "=", 
                    RowBox[{"Inverse", "[", 
                    RowBox[{"MtildeMatrix", ",", 
                    RowBox[{
                    "Method", "\[Rule]", "\"\<DivisionFreeRowReduction\>\""}],
                     ",", 
                    RowBox[{"ZeroTest", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Normal", "[", "#", "]"}], "\[Equal]", "0"}], 
                    "&"}], ")"}]}]}], "]"}]}], ";"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"MtildeInv", "=", 
                    RowBox[{"DiffExpSeries", "[", 
                    RowBox[{
                    RowBox[{"Inverse", "[", "MtildeMatrix", "]"}], "//", 
                    "Together"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"fGeneral", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MtildeInv", ".", 
                    RowBox[{"(", 
                    RowBox[{"DerivativeVec", "-", "BDerVec"}], ")"}]}], "//", 
                    "SExpand"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", ",",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "PrintWarning", "[", 
                    "\"\<Encountered numerical instability while inverting \
Mtilde. Turning off DivisionFreeRowReduction and trying again..\>\"", "]"}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"fGeneral", "=", 
                    RowBox[{"PChop", "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Inverse", "[", "MtildeMatrix", "]"}], ".", 
                    RowBox[{"(", 
                    RowBox[{"DerivativeVec", "-", "BDerVec"}], ")"}]}], "//", 
                    "SExpand"}], ")"}]}]}], ";"}]}], "\[IndentingNewLine]", 
                    "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"fGeneral", "=", 
                    RowBox[{"fGeneral", "/.", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"GetCases", "[", 
                    RowBox[{"fGeneral", ",", 
                    SubscriptBox["c", 
                    RowBox[{"i_", ",", "j_"}]]}], "]"}], "\[Rule]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox["c", "ind"], ",", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", "MyN"}], "}"}]}], "]"}]}], "]"}]}]}], 
                    ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"cIndices", "=", 
                  RowBox[{"GetCases", "[", 
                   RowBox[{"fGeneral", ",", 
                    SubscriptBox["c", "i_"]}], "]"}]}], ";"}]}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "Code", " ", "for", " ", "fixing", " ", "boundary", " ", 
                RowBox[{"conditions", "."}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", 
                 RowBox[{"(", 
                  RowBox[{"bcs2", "===", "\"\<?\>\""}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "PrintDebug", "[", 
                   "\"\<General solution found. Fixing the indeterminates \
from boundary conditions.\>\"", "]"}], "[", "2", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"BCSRelevant", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"bcs", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "intind", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"epsord", "+", "1"}]}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"IgnorePositions", "=", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Position", "[", 
                    RowBox[{"BCSRelevant", ",", "\"\<?\>\""}], "]"}], "]"}]}],
                  ";", "\[IndentingNewLine]", 
                 RowBox[{"relevantinds", "=", 
                  RowBox[{"Complement", "[", 
                   RowBox[{
                    RowBox[{"Range", "@", 
                    RowBox[{"Length", "[", "intind", "]"}]}], ",", 
                    "IgnorePositions"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"BCSRelevant", "=", 
                  RowBox[{"BCSRelevant", "[", 
                   RowBox[{"[", "relevantinds", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"FixAt", "===", "0"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"BoundaryEqns1", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"PChop", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Chop", "[", 
                    RowBox[{"#", ",", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "35"}]]}], "]"}], "&"}], "*)"}], "@*", 
                    "SExpand"}], ")"}], "/@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"fGeneral", "[", 
                    RowBox[{"[", "relevantinds", "]"}], "]"}], "-", 
                    "BCSRelevant"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"SameQ", "[", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"BoundaryEqns1", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "0"}], "]"}], "]"}], ",", 
                    "SeriesData"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "ReportError", "[", 
                    "\"\<Internal bug while fixing the solutions from the \
boundary data.\>\"", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"BoundaryEqns2", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "0"}], "&"}], "/@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "/.", 
                    RowBox[{"Logx", "\[Rule]", "0"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Coefficient", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    SuperscriptBox["Logx", "kind"]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"kind", ",", "1", ",", "IMaxLogOrder"}], "}"}]}], 
                    "]"}]}], "\[IndentingNewLine]", "}"}], "&"}], "/@", 
                    "BoundaryEqns1"}], "]"}]}]}], ";"}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"BoundaryEqns1", "=", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sum", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cIndices", "[", 
                    RowBox[{"[", "ind", "]"}], "]"}], 
                    RowBox[{"SEval", "[", 
                    RowBox[{
                    RowBox[{"SApply", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Coefficient", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"cIndices", "[", 
                    RowBox[{"[", "ind", "]"}], "]"}]}], "]"}], "&"}], ",", 
                    "term"}], "]"}], ",", "FixAt"}], "]"}]}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"ind", ",", 
                    RowBox[{"cIndices", "//", "Length"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}], "+", 
                    RowBox[{"SEval", "[", 
                    RowBox[{
                    RowBox[{"term", "/.", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[Rule]", "0"}], "&"}], "/@", "cIndices"}], 
                    ")"}]}], ",", "FixAt"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"term", ",", 
                    RowBox[{"fGeneral", "[", 
                    RowBox[{"[", "relevantinds", "]"}], "]"}]}], "}"}]}], 
                    "]"}], "-", "BCSRelevant"}]}], ";", "\[IndentingNewLine]",
                     "\[IndentingNewLine]", 
                    RowBox[{"BoundaryEqns2", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "0"}], "&"}], "/@", 
                    RowBox[{"Flatten", "[", "BoundaryEqns1", "]"}]}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"BoundaryEqns2", "=", 
                  RowBox[{
                   RowBox[{"DeleteCases", "[", 
                    RowBox[{"BoundaryEqns2", ",", "True"}], "]"}], "//", 
                   "Expand"}]}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{"BoundaryEqns2", "===", 
                    RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "PrintDebug", "[", "\"\<Boundary equations are: \>\"", 
                    "]"}], "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{
                    RowBox[{"BoundaryEqns2", "//", "N"}], "//", 
                    RowBox[{"R", "[", 
                    RowBox[{"c", "\[Rule]", "\"\<c\>\""}], "]"}]}], "]"}], 
                    "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Cmat", ",", "Cb"}], "}"}], "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "&"}], "@", 
                    RowBox[{"CoefficientArrays", "[", 
                    RowBox[{"BoundaryEqns2", ",", "cIndices"}], "]"}]}]}], 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"CouldntSolve", "=", "False"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"BoundaryEqns2", ",", "False"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Check", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"csol", "=", 
                    RowBox[{"LinearSolve", "[", 
                    RowBox[{"Cmat", ",", "Cb", ",", 
                    RowBox[{"ZeroTest", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"LSPChop", "@", 
                    RowBox[{"Expand", "@", 
                    RowBox[{"Normal", "[", "#1", "]"}]}]}], ",", 
                    "LinearSolveChopPrecisionVal"}], "]"}], "==", "0"}], 
                    "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
                    ",", 
                    RowBox[{
                    RowBox[{"CouldntSolve", "=", "True"}], ";"}]}], "]"}], 
                    ";"}], "\[IndentingNewLine]", ",", 
                    RowBox[{
                    RowBox[{"CouldntSolve", "=", "True"}], ";"}]}], "]"}], 
                    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{"CouldntSolve", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Global`DebugData", "=", 
                    RowBox[{"{", 
                    RowBox[{"BMat", ",", 
                    RowBox[{"fGeneral", "[", 
                    RowBox[{"[", "relevantinds", "]"}], "]"}], ",", 
                    "BoundaryEqns1", ",", "BoundaryEqns2", ",", "BCSRelevant",
                     ",", "Cmat", ",", "Cb", ",", "MtildeMat", ",", "Wronsk", 
                    ",", "WronskInv", ",", "WronskInvPrime", ",", "bVec", ",",
                     "FMat", ",", "FMatInv", ",", "GMat", ",", "csol"}], 
                    "}"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ReportError", "[", 
                    RowBox[{
                    "\"\<Boundary conditions cannot be matched to general \
solution for integral(s): \>\"", ",", "intind"}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintDebug", "[", 
                    RowBox[{"\"\<Solutions: \>\"", ",", 
                    RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"ToString", "/@", "cIndices"}], ")"}], "\[Rule]", 
                    RowBox[{"N", "[", "csol", "]"}]}], "]"}]}], "]"}], "[", 
                    "2", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"csFreedom", "=", 
                    RowBox[{"Cmat", "//", 
                    RowBox[{
                    RowBox[{"NullSpace", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    "Method", "\[Rule]", "\"\<DivisionFreeRowReduction\>\""}],
                     ",", 
                    RowBox[{"Tolerance", "\[Rule]", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "LinearSolveChopPrecisionVal"}]}]}]}], "]"}],
                     "&"}]}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "csFreedom", "]"}], ">", "0"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintWarning", "[", 
                    RowBox[{
                    "\"\<Not enough boundary data was provided for \
integral(s): \>\"", ",", "intind", ",", "\"\< at epsilon order \>\"", ",", 
                    "epsord", ",", "\"\<.\>\""}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintWarning", "[", 
                    RowBox[{"\"\<Introducing free parameters: \>\"", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox["Global`c", 
                    RowBox[{"epsord", ",", "intind", ",", "i"}]], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Length", "@", "csFreedom"}]}], "}"}]}], "]"}]}], 
                    "]"}], "[", "1", "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"csol", "=", 
                    RowBox[{"csol", "+", 
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"csFreedom", "[", 
                    RowBox[{"[", "nullvecind", "]"}], "]"}], " ", 
                    SubscriptBox["Global`c", 
                    RowBox[{"epsord", ",", "intind", ",", "nullvecind"}]]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"nullvecind", ",", 
                    RowBox[{"Length", "@", "csFreedom"}]}], "}"}]}], 
                    "]"}]}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"TurnOffPade", "[", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"CsReps", "=", 
                    RowBox[{
                    RowBox[{"Thread", "[", 
                    RowBox[{"cIndices", "\[Rule]", "csol"}], "]"}], "//", 
                    "PChop"}]}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"fGeneral", "=", 
                    RowBox[{
                    RowBox[{"fGeneral", "/.", "CsReps"}], "//", "SExpand"}]}],
                     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",",
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "cIndices", "]"}], ">", "0"}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintWarning", "[", 
                    RowBox[{
                    "\"\<Not enough boundary data was provided for \
integral(s): \>\"", ",", "intind", ",", "\"\< at epsilon order \>\"", ",", 
                    "epsord", ",", "\"\<.\>\""}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrintWarning", "[", 
                    RowBox[{"\"\<Introducing free parameters: \>\"", ",", 
                    RowBox[{"cIndices", "/.", 
                    RowBox[{
                    SubscriptBox["c", "i_"], "\[RuleDelayed]", 
                    SubscriptBox["Global`c", 
                    RowBox[{"epsord", ",", "intind", ",", "i"}]]}]}]}], "]"}],
                     "[", "1", "]"}], ";", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"TurnOffPade", "[", "]"}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"fGeneral", "=", 
                    RowBox[{
                    RowBox[{"fGeneral", "/.", 
                    RowBox[{
                    SubscriptBox["c", "i_"], "\[RuleDelayed]", 
                    SubscriptBox["Global`c", 
                    RowBox[{"epsord", ",", "intind", ",", "i"}]]}]}], "//", 
                    "SExpand"}]}], ";"}]}], "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"No", " ", "boundary", " ", "terms", " ", 
                  RowBox[{"provided", ".", " ", "Relabeling"}], " ", "for", 
                  " ", "current", " ", "epsilon", " ", "order"}], " ", "*)"}],
                 "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"fGeneral", "=", 
                  RowBox[{
                   RowBox[{"fGeneral", "/.", 
                    RowBox[{
                    SubscriptBox["c", "i_"], "\[RuleDelayed]", 
                    SubscriptBox["Global`c", 
                    RowBox[{"epsord", ",", "intind", ",", "i"}]]}]}], "//", 
                   "SExpand"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                  "CurrCrosscheckFlags", ",", "\"\<GeneralSolution\>\""}], 
                  "]"}], "===", "True"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "PrintDebug", "[", 
                   "\"\<General solution found. Cross-checking with \
differential equations.\>\"", "]"}], "[", "1", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"CrossC", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"SD", "[", 
                    RowBox[{"fGeneral", ",", "x"}], "]"}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DEqnMatricesExpanded", "[", "line", "]"}], "[", 
                    "0", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"intind", ",", "intind"}], "]"}], "]"}], ".", 
                    "fGeneral"}], "-", "bVec", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckVerifyResultOrder"]}], "//", 
                   RowBox[{"(", 
                    RowBox[{"CPChop", "@*", "SExpand"}], ")"}]}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"PrintDebug", "[", 
                   RowBox[{"\"\<Found: \>\"", ",", 
                    RowBox[{
                    RowBox[{"CrossC", "+", 
                    SuperscriptBox[
                    RowBox[{"O", "[", "x", "]"}], 
                    "ICrossCheckPrintResultOrder"]}], "//", "SN"}]}], "]"}], 
                  "[", "3", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{"(", 
                    RowBox[{"SameQ", "@@", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CrossC", "//", "Normal"}], "//", "Flatten"}], 
                    ",", "0"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "ReportError", "[", "\"\<Cross-check failed\>\"", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"NewResults", "=", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"iind", ",", "epsord"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"iind", ",", "intind"}], "}"}]}], "]"}], 
                 "\[Rule]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"PChop", "@*", "SExpand"}], ")"}], "[", "fGeneral",
                   "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"AssociateTo", "[", "\[IndentingNewLine]", 
               RowBox[{
               "IntegrationData", ",", "\[IndentingNewLine]", "NewResults"}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                   "\"\<ComputationTimes\>\"", "]"}], "[", 
                  "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "[", 
                "epsord", "]"}], "=", 
               RowBox[{
                RowBox[{"AbsoluteTime", "[", "]"}], "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], 
                    "[", 
                    RowBox[{"line", "//", "N"}], "]"}], "[", 
                    "\"\<ComputationTimes\>\"", "]"}], "[", 
                   "\"\<Integrals\>\"", "]"}], "[", "intind", "]"}], "[", 
                 "epsord", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"intind", ",", "IntegrationSequence"}], "}"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
               RowBox[{"line", "//", "N"}], "]"}], "[", 
              "\"\<ComputationTimes\>\"", "]"}], "[", "epsord", "]"}], "=", 
            RowBox[{
             RowBox[{"AbsoluteTime", "[", "]"}], "-", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
                RowBox[{"line", "//", "N"}], "]"}], "[", 
               "\"\<ComputationTimes\>\"", "]"}], "[", "epsord", "]"}]}]}], 
           ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"epsord", ",", "0", ",", "EpsilonOrderVal"}], "}"}]}], 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"GiveMultivaluedError", "[", "]"}], ":=", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "FEC", "[", "\"\<AbortOnAnalyticContinuationFail\>\"", "]"}], "===",
                "False"}], ")"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "PrintWarning", "[", 
               "\"\<After fixing the boundary conditions, the solutions on \
the current line segment contain multivalued functions. However, the current \
point is not recognized as a branch point in the configuration, so DiffExp \
can't perform the analytic continuation! Please add a prescription for the \
analytic continuation using the option \\\"DeltaPrescriptions\\\".\>\"", 
               "]"}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ReportError", "[", 
               RowBox[{
               "\"\<After fixing the boundary conditions, the solutions on \
the current line segment contain multivalued functions. However, the current \
point is not recognized as a branch point in the configuration, so DiffExp \
can't perform the analytic continuation! Please add a prescription for the \
analytic continuation using the option \\\"DeltaPrescriptions\\\".\>\"", ",", 
                "False"}], "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"MultivaluedFail", "=", "True"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
          ")"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"CurrCrosscheckFlags", ",", "\"\<SingularityCheck\>\""}], 
            "]"}], "===", "True"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TmpSolutionsNormal", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Values", "[", "IntegrationData", "]"}], "//", 
              "Normal"}], "//", 
             RowBox[{
              RowBox[{"Chop", "[", 
               RowBox[{"#", ",", 
                SuperscriptBox["10", 
                 RowBox[{"-", "ICheckMultivaluedChop"}]]}], "]"}], "&"}]}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"LogsPresent", "=", 
            RowBox[{"DependsQ", "[", 
             RowBox[{"TmpSolutionsNormal", ",", 
              RowBox[{"Logx", "|", 
               SuperscriptBox["Logx", "_"]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AlgebraicRootsPresent", "=", 
            RowBox[{"DependsQ", "[", 
             RowBox[{"TmpSolutionsNormal", ",", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["x", "b_"], "/;", 
                RowBox[{
                 RowBox[{"Denominator", "[", "b", "]"}], ">", "1"}]}], 
               ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"!", "CurrentSingularityHasIDeltaPrescription"}], "&&", 
              RowBox[{"(", 
               RowBox[{"AlgebraicRootsPresent", "||", "LogsPresent"}], 
               ")"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"GiveMultivaluedError", "[", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
             "CurrentSingularityHasIDeltaPrescription", "&&", 
              "CurrentSingularityWasAddedFromSquareRoot", "&&", 
              "LogsPresent"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"GiveMultivaluedError", "[", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"AnalyticContinuationFailed", "===", "True"}], ")"}], "&&", 
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"opts", ",", "\"\<TransportToCall\>\""}], "]"}]}]}], ",",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "PrintWarning", "[", 
            "\"\<Could not transfer i\[Delta]-prescriptions to line parameter \
on current segment. The results may only be valid in the direction (x > 0 or \
x < 0) where the boundary conditions were given.\>\"", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"opts", ",", "\"\<TransportToCall\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"IntegrationData", "[", 
             RowBox[{"{", 
              RowBox[{"ind", ",", "epsord"}], "}"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"ind", ",", "NumIntegrals"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"epsord", ",", "0", ",", "EpsilonOrderVal"}], "}"}]}], 
           "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
             "\"\<ComputationTime\>\"", "]"}], "=", 
            RowBox[{
             RowBox[{"AbsoluteTime", "[", "]"}], "-", 
             RowBox[{
              RowBox[{"BenchmarkData", "[", "\"\<Segments\>\"", "]"}], "[", 
              "\"\<ComputationTime\>\"", "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"ClearMatrices", "[", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ApplyAnalyticContinuation", "[", 
               RowBox[{"IntegrationData", "[", 
                RowBox[{"{", 
                 RowBox[{"ind", ",", "epsord"}], "}"}], "]"}], "]"}], "//", 
              "Project\[Theta]s"}], ",", 
             RowBox[{"{", 
              RowBox[{"ind", ",", "NumIntegrals"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"epsord", ",", "0", ",", "EpsilonOrderVal"}], "}"}]}], 
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"End", "[", "]"}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EndPackage", "[", "]"}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7909484984405227`*^9, 3.7909485047561817`*^9}, {
   3.790948541923745*^9, 3.7909486019353833`*^9}, {3.7909486512253795`*^9, 
   3.790948675449707*^9}, {3.792693669901507*^9, 3.792693732679357*^9}, {
   3.7926938086502733`*^9, 3.7926938494346857`*^9}, 3.79269406841323*^9, {
   3.792694252139065*^9, 3.792694253386774*^9}, {3.792694462593811*^9, 
   3.792694473376586*^9}, {3.792694560018414*^9, 3.792694619125431*^9}, {
   3.792694681127851*^9, 3.792695203684455*^9}, {3.792699025550274*^9, 
   3.792699081150196*^9}, {3.79269911817187*^9, 3.792699249646552*^9}, {
   3.792699291902343*^9, 3.792699326413148*^9}, {3.792699524398713*^9, 
   3.792699550668641*^9}, {3.792699592287136*^9, 3.792699776738276*^9}, {
   3.792699820928954*^9, 3.792699949994207*^9}, {3.792700037210585*^9, 
   3.792700083256833*^9}, {3.79270034406852*^9, 3.792700347667123*^9}, {
   3.79270042440329*^9, 3.792700641088229*^9}, {3.792700690101768*^9, 
   3.792700978126136*^9}, {3.7927010792171907`*^9, 3.792701238269004*^9}, {
   3.792701280002383*^9, 3.792701298350831*^9}, {3.79270134038735*^9, 
   3.7927015312538233`*^9}, {3.79270169362038*^9, 3.7927017604991693`*^9}, {
   3.792701840115818*^9, 3.792701901042482*^9}, {3.792703504464287*^9, 
   3.7927035214695807`*^9}, {3.792704115152658*^9, 3.792704239045073*^9}, {
   3.792704278496488*^9, 3.792704387152334*^9}, {3.7927044241437683`*^9, 
   3.7927046856282797`*^9}, {3.7927047284649467`*^9, 3.792704733472459*^9}, {
   3.792704782610495*^9, 3.792704789183502*^9}, {3.792704942750429*^9, 
   3.792705236941745*^9}, {3.792705343280148*^9, 3.792705520923709*^9}, {
   3.792705600977209*^9, 3.7927056394759827`*^9}, {3.792705706195466*^9, 
   3.792705756963457*^9}, {3.792755194279578*^9, 3.792755364348873*^9}, {
   3.792755401671039*^9, 3.792755406297352*^9}, {3.7927556655615387`*^9, 
   3.792755666191358*^9}, {3.7927557618991423`*^9, 3.792755796919414*^9}, {
   3.792755865339305*^9, 3.792755940808091*^9}, {3.7927559768148117`*^9, 
   3.7927560969059057`*^9}, {3.7927562075644197`*^9, 3.792756411118347*^9}, {
   3.792756453788994*^9, 3.792756565311006*^9}, {3.792756621227517*^9, 
   3.792756666841501*^9}, {3.792756716093288*^9, 3.7927568684670897`*^9}, {
   3.7927578699494953`*^9, 3.792757954166795*^9}, {3.792758005558876*^9, 
   3.792758025558798*^9}, {3.7927581311463127`*^9, 3.792758183160516*^9}, {
   3.7927582149040937`*^9, 3.792758307527046*^9}, {3.7927584132272787`*^9, 
   3.792758466966481*^9}, {3.792758520817666*^9, 3.792758556921574*^9}, {
   3.7927593754173326`*^9, 3.792759383385461*^9}, {3.792759441552063*^9, 
   3.7927594844234533`*^9}, {3.7927595324486847`*^9, 3.792759688760976*^9}, {
   3.792759810442669*^9, 3.792759921192018*^9}, {3.7927599620726957`*^9, 
   3.792760083205429*^9}, {3.792760198278871*^9, 3.7927602001201*^9}, {
   3.792760286870647*^9, 3.792760384004434*^9}, {3.792760436828143*^9, 
   3.792760500708516*^9}, {3.792761068694964*^9, 3.792761304116222*^9}, {
   3.792761334532045*^9, 3.7927614338758593`*^9}, {3.792761464947686*^9, 
   3.792761598611486*^9}, {3.792764421845978*^9, 3.7927644336721697`*^9}, {
   3.7927644666324043`*^9, 3.7927645424173603`*^9}, {3.792764588328764*^9, 
   3.792764614070715*^9}, {3.792764672840517*^9, 3.792764784580389*^9}, {
   3.792764906406006*^9, 3.792764906578497*^9}, {3.792765381393909*^9, 
   3.792765439534816*^9}, {3.7927655020691442`*^9, 3.79276559096562*^9}, {
   3.79276586101538*^9, 3.7927659177767057`*^9}, {3.792765967494718*^9, 
   3.792766186981093*^9}, {3.792766218646476*^9, 3.79276621879137*^9}, {
   3.79276625474999*^9, 3.792766303596382*^9}, {3.792766381735957*^9, 
   3.792766391869051*^9}, {3.792766431407566*^9, 3.79276656463229*^9}, {
   3.792766638333729*^9, 3.79276672934925*^9}, {3.7927667965398273`*^9, 
   3.792766887689508*^9}, {3.792767090462142*^9, 3.792767134443308*^9}, {
   3.792767165807562*^9, 3.792767285386176*^9}, {3.792767315565728*^9, 
   3.7927673451131353`*^9}, {3.792767394099565*^9, 3.792767508202138*^9}, {
   3.792776418436735*^9, 3.792776423480835*^9}, 3.792776642276362*^9, {
   3.792776749072447*^9, 3.7927769080704117`*^9}, {3.79277698170013*^9, 
   3.7927769932135344`*^9}, {3.792777116053515*^9, 3.7927771510731792`*^9}, {
   3.792777575251898*^9, 3.79277771158919*^9}, {3.7927780057963037`*^9, 
   3.792778052960732*^9}, {3.7927781405358543`*^9, 3.792778218420466*^9}, {
   3.792778253607341*^9, 3.792778298484982*^9}, {3.792778431572475*^9, 
   3.792778438688098*^9}, {3.792778477413946*^9, 3.79277849679047*^9}, {
   3.792778754100733*^9, 3.7927788704376783`*^9}, {3.792778907027478*^9, 
   3.792779054547223*^9}, {3.792779133651741*^9, 3.792779155693871*^9}, {
   3.792779201842355*^9, 3.792779236408988*^9}, {3.7927792751860323`*^9, 
   3.792779300729878*^9}, {3.792779336707309*^9, 3.7927793384273577`*^9}, {
   3.792782495800893*^9, 3.7927825558924026`*^9}, {3.7927826618001003`*^9, 
   3.792782697527568*^9}, {3.7927827401489964`*^9, 3.792782913450001*^9}, {
   3.7927853760152817`*^9, 3.792785666108387*^9}, {3.7927857315352488`*^9, 
   3.792785759074195*^9}, {3.792785821343171*^9, 3.7927860039488373`*^9}, {
   3.7927860746729794`*^9, 3.792786372626584*^9}, {3.792786419343051*^9, 
   3.792786581391995*^9}, {3.792786614769693*^9, 3.792786659042788*^9}, {
   3.792789844879779*^9, 3.792789863403178*^9}, {3.792789896073361*^9, 
   3.792790003521688*^9}, {3.7927902689346952`*^9, 3.792790293362925*^9}, {
   3.792797769187071*^9, 3.7927977692740602`*^9}, {3.7928320222641277`*^9, 
   3.792832022807559*^9}, {3.792832059142066*^9, 3.792832073557795*^9}, {
   3.792832181014439*^9, 3.792832183471883*^9}, {3.792832319426857*^9, 
   3.792832322299176*^9}, {3.792839149548998*^9, 3.792839161949786*^9}, {
   3.7928401284666967`*^9, 3.7928401384983387`*^9}, {3.79284016935845*^9, 
   3.792840227114798*^9}, {3.792840274522891*^9, 3.7928402764270563`*^9}, {
   3.7928403246981564`*^9, 3.792840439700274*^9}, {3.7928405790719023`*^9, 
   3.792840753214048*^9}, {3.792840800795456*^9, 3.792840804313491*^9}, {
   3.792840851443056*^9, 3.792840881482237*^9}, {3.7928409274079437`*^9, 
   3.792840952385394*^9}, {3.7928411081418753`*^9, 3.792841124278473*^9}, {
   3.79284128498118*^9, 3.792841383334324*^9}, 3.792922042683291*^9, {
   3.7929220752773*^9, 3.7929220863642683`*^9}, {3.792922128027329*^9, 
   3.792922148418517*^9}, {3.792922246052466*^9, 3.792922258384323*^9}, {
   3.7929228455127563`*^9, 3.792922952227663*^9}, {3.792923187735766*^9, 
   3.792923189435268*^9}, {3.7929232445969973`*^9, 3.792923277962469*^9}, 
   3.7929233909079227`*^9, {3.7929234898995037`*^9, 3.7929234966938334`*^9}, {
   3.792923647277149*^9, 3.792923668103683*^9}, {3.792923812863051*^9, 
   3.792923906189333*^9}, {3.7929239363242197`*^9, 3.792923975123646*^9}, {
   3.792924014901887*^9, 3.792924055827683*^9}, 3.792924088067092*^9, {
   3.79292420882975*^9, 3.792924234024848*^9}, {3.7929242954634037`*^9, 
   3.7929244908751583`*^9}, 3.792924551695269*^9, {3.7929276315817547`*^9, 
   3.792927632166267*^9}, {3.7929276705045567`*^9, 3.792927692295844*^9}, {
   3.7929277269555187`*^9, 3.792927732161559*^9}, {3.792927766120493*^9, 
   3.79292776682015*^9}, {3.793010995982424*^9, 3.7930110031964664`*^9}, {
   3.7930112822151985`*^9, 3.7930113537655163`*^9}, {3.793011388557789*^9, 
   3.793011388850442*^9}, {3.793013163864575*^9, 3.7930131657640476`*^9}, {
   3.793017047937352*^9, 3.7930170501353903`*^9}, {3.793017173177444*^9, 
   3.793017173313035*^9}, {3.7930172170417433`*^9, 3.7930172834367437`*^9}, 
   3.793361642267242*^9, {3.793361673522834*^9, 3.7933616998568077`*^9}, {
   3.7933643235928993`*^9, 3.7933643255293627`*^9}, {3.7933643765456333`*^9, 
   3.7933643911113777`*^9}, 3.793364429032096*^9, {3.7933644696390142`*^9, 
   3.793364473122489*^9}, {3.793364547221339*^9, 3.793364580024268*^9}, {
   3.79336511036445*^9, 3.793365124288022*^9}, {3.793393065891337*^9, 
   3.793393115225028*^9}, {3.793393240343738*^9, 3.793393278584991*^9}, {
   3.793393352229431*^9, 3.7933934186094217`*^9}, {3.793393472275299*^9, 
   3.79339348858525*^9}, {3.793393622359454*^9, 3.793393622752524*^9}, {
   3.793393696990411*^9, 3.793393699712583*^9}, {3.79339410620181*^9, 
   3.793394118178258*^9}, {3.793400847260521*^9, 3.793400874590015*^9}, {
   3.79340248890549*^9, 3.793402673864973*^9}, {3.793402731136838*^9, 
   3.793402737669581*^9}, {3.7934030933765993`*^9, 3.793403103454134*^9}, {
   3.793403137110751*^9, 3.793403176129628*^9}, {3.793403248742743*^9, 
   3.793403391308979*^9}, {3.793449689720764*^9, 3.793449693223753*^9}, {
   3.793449794117242*^9, 3.793449804907692*^9}, {3.793449835071069*^9, 
   3.793449837548121*^9}, {3.7934500402435617`*^9, 3.793450048234062*^9}, {
   3.793450825243997*^9, 3.793450833592955*^9}, {3.7934508692382803`*^9, 
   3.793450871998427*^9}, {3.7934509797881603`*^9, 3.7934509907820997`*^9}, {
   3.793451061153755*^9, 3.7934510614550543`*^9}, {3.7934511324318933`*^9, 
   3.793451135610949*^9}, {3.793456914985586*^9, 3.793456962194714*^9}, 
   3.793457515029937*^9, {3.793457691845622*^9, 3.793457692615665*^9}, {
   3.79345792647259*^9, 3.7934579872407007`*^9}, {3.793458018576067*^9, 
   3.793458048320923*^9}, {3.793458103634194*^9, 3.7934581185477867`*^9}, {
   3.793458370599764*^9, 3.793458474191594*^9}, {3.793458520546521*^9, 
   3.7934585207445583`*^9}, {3.7934586754078074`*^9, 3.793458711785942*^9}, {
   3.793458883588662*^9, 3.7934589543199463`*^9}, {3.793459048228877*^9, 
   3.79345905222736*^9}, {3.7934591028766937`*^9, 3.793459107873954*^9}, {
   3.793459301878935*^9, 3.793459318948246*^9}, {3.7934594092622223`*^9, 
   3.793459429292787*^9}, {3.793460014609996*^9, 3.793460137832673*^9}, {
   3.7934601815220013`*^9, 3.793460240692584*^9}, {3.793460276496449*^9, 
   3.79346063544604*^9}, {3.7934606773576403`*^9, 3.7934606844934187`*^9}, {
   3.793460824152843*^9, 3.793460829604033*^9}, {3.793474515765442*^9, 
   3.79347458792367*^9}, {3.793474623082387*^9, 3.793474815793816*^9}, {
   3.7934748485632877`*^9, 3.7934748704584513`*^9}, {3.7934751489213943`*^9, 
   3.793475167084648*^9}, {3.793475960879993*^9, 3.793475962885662*^9}, {
   3.793476046988392*^9, 3.793476242701756*^9}, {3.793476352951015*^9, 
   3.793476354213004*^9}, {3.793476392175796*^9, 3.793476405716694*^9}, 
   3.793476440070033*^9, {3.7934764793884783`*^9, 3.7934764798424397`*^9}, {
   3.793476574595673*^9, 3.793476589126618*^9}, {3.793476638802392*^9, 
   3.793476699810095*^9}, 3.793476735755746*^9, {3.793477927665139*^9, 
   3.7934782045745077`*^9}, {3.793478254859892*^9, 3.793478263193226*^9}, {
   3.793478361637836*^9, 3.7934784006514063`*^9}, {3.793478959936039*^9, 
   3.793478967475905*^9}, {3.7934790093020163`*^9, 3.793479052588688*^9}, {
   3.7934799451250467`*^9, 3.793479946379702*^9}, 3.7934799933230658`*^9, {
   3.793480033346521*^9, 3.793480103069962*^9}, {3.793480173995124*^9, 
   3.793480184225328*^9}, {3.793480266786195*^9, 3.793480287872405*^9}, {
   3.793480331743822*^9, 3.7934803586708508`*^9}, {3.793480501520852*^9, 
   3.7934805113061743`*^9}, {3.7934805426041527`*^9, 3.793480581935596*^9}, {
   3.793480676482933*^9, 3.7934806887968807`*^9}, {3.7934807462925787`*^9, 
   3.793480753443788*^9}, {3.793480816948926*^9, 3.793480872259255*^9}, {
   3.79348102743141*^9, 3.7934811225179768`*^9}, {3.79348128369518*^9, 
   3.7934813179415092`*^9}, {3.793481444163656*^9, 3.7934815705974092`*^9}, {
   3.793481612718835*^9, 3.793481787986247*^9}, {3.793481838593842*^9, 
   3.7934818397294188`*^9}, {3.793486973012439*^9, 3.7934870972826767`*^9}, {
   3.7934871757855473`*^9, 3.79348719279773*^9}, {3.7934872518584967`*^9, 
   3.793487268838005*^9}, {3.7934873000285254`*^9, 3.793487300554675*^9}, {
   3.793487366464933*^9, 3.7934873668859787`*^9}, {3.7934874181886683`*^9, 
   3.7934874243293324`*^9}, {3.793488026687757*^9, 3.79348811422442*^9}, {
   3.793488180409268*^9, 3.793488204420422*^9}, {3.793538216128196*^9, 
   3.793538216269115*^9}, {3.793538251390439*^9, 3.793538264684999*^9}, {
   3.793541414991974*^9, 3.79354142363291*^9}, {3.793541461632415*^9, 
   3.793541474138422*^9}, {3.7935415188232527`*^9, 3.7935416066432247`*^9}, 
   3.793546793370058*^9, {3.793546844521999*^9, 3.7935468985746403`*^9}, {
   3.793546929812727*^9, 3.7935469307035627`*^9}, {3.793546966283546*^9, 
   3.793547203348494*^9}, {3.793547284309554*^9, 3.793547288195847*^9}, {
   3.79354732247519*^9, 3.79354732384477*^9}, {3.793548274862114*^9, 
   3.793548277912066*^9}, {3.793548831180118*^9, 3.793548941764529*^9}, {
   3.793549043763793*^9, 3.793549253233227*^9}, {3.793549297583786*^9, 
   3.793549412668346*^9}, {3.7935494466793423`*^9, 3.793549453576556*^9}, {
   3.793549491903137*^9, 3.793549588472581*^9}, {3.793549622978896*^9, 
   3.793549624707251*^9}, {3.79354968211444*^9, 3.793549682370184*^9}, {
   3.7935497306523314`*^9, 3.793549781539955*^9}, {3.793549831986576*^9, 
   3.793549846031205*^9}, {3.793549993047743*^9, 3.7935500776372023`*^9}, {
   3.793550142073029*^9, 3.7935501717696743`*^9}, {3.793550280696109*^9, 
   3.793550283221526*^9}, {3.7935503181377487`*^9, 3.793550391437984*^9}, {
   3.793550467933825*^9, 3.793550778256742*^9}, {3.7935508425794*^9, 
   3.793550943267568*^9}, {3.7935510054733562`*^9, 3.793551026006654*^9}, {
   3.793551166085841*^9, 3.793551177567296*^9}, {3.793571755546672*^9, 
   3.793571768247435*^9}, {3.793571838391267*^9, 3.793572050617435*^9}, {
   3.7935720963200903`*^9, 3.793572191970991*^9}, {3.79357228776338*^9, 
   3.793572295881207*^9}, {3.793572351456814*^9, 3.7935723639678497`*^9}, {
   3.793572470712061*^9, 3.7935725813081636`*^9}, {3.793572657912842*^9, 
   3.7935727788825293`*^9}, {3.793572879413341*^9, 3.793572987640437*^9}, {
   3.793573036251109*^9, 3.793573116329101*^9}, {3.7935731507312803`*^9, 
   3.793573154270053*^9}, {3.793573393219201*^9, 3.7935734027496443`*^9}, {
   3.793574702000656*^9, 3.793574722947938*^9}, {3.7935801225410557`*^9, 
   3.793580149984106*^9}, {3.793580199718603*^9, 3.793580310598379*^9}, 
   3.793580344447892*^9, {3.793580485863965*^9, 3.793580511264493*^9}, {
   3.7935805922813587`*^9, 3.793580612667576*^9}, {3.793581164721637*^9, 
   3.793581181095931*^9}, {3.793581212204281*^9, 3.793581217924148*^9}, {
   3.7935813446689873`*^9, 3.793581374266294*^9}, {3.79358140970848*^9, 
   3.793581413930593*^9}, {3.7935814499734592`*^9, 3.7935815040829983`*^9}, {
   3.7935815412927217`*^9, 3.793581563443303*^9}, {3.793581656614356*^9, 
   3.793581700128202*^9}, {3.793581817900732*^9, 3.7935819116916437`*^9}, {
   3.7935819690240383`*^9, 3.7935819872023*^9}, {3.793582174329906*^9, 
   3.7935821795659447`*^9}, {3.793582260769882*^9, 3.793582473677422*^9}, {
   3.7935825089854193`*^9, 3.793582516822076*^9}, {3.793582554076976*^9, 
   3.793582554189824*^9}, {3.7935825850919113`*^9, 3.793582600248157*^9}, {
   3.79358264806221*^9, 3.793582680824587*^9}, {3.7935827214550323`*^9, 
   3.7935827254358473`*^9}, {3.7935827685594053`*^9, 3.793582774428393*^9}, {
   3.793582816180592*^9, 3.7935828659396257`*^9}, {3.793582915644619*^9, 
   3.7935829738821373`*^9}, {3.793619128734654*^9, 3.793619142108554*^9}, {
   3.793619478810521*^9, 3.793619481334775*^9}, {3.7936195195296164`*^9, 
   3.793619550690699*^9}, {3.793619587352269*^9, 3.793619591344989*^9}, {
   3.793619639542268*^9, 3.7936197174196587`*^9}, {3.7936197474357567`*^9, 
   3.793619748452875*^9}, {3.793619791576848*^9, 3.793619799214683*^9}, {
   3.7936198433917503`*^9, 3.79361989219692*^9}, {3.793619923028677*^9, 
   3.7936200274029417`*^9}, {3.793620116590559*^9, 3.7936201373366756`*^9}, {
   3.79362016936341*^9, 3.793620197819791*^9}, {3.793620240551186*^9, 
   3.7936202606700487`*^9}, {3.79362040278308*^9, 3.7936204039157457`*^9}, {
   3.7936204476659517`*^9, 3.7936204488972673`*^9}, {3.793620489908271*^9, 
   3.793620527641815*^9}, {3.7936205580023603`*^9, 3.793620606830661*^9}, {
   3.793620839472316*^9, 3.793620857881814*^9}, {3.793621018227908*^9, 
   3.793621037721259*^9}, {3.793622783669499*^9, 3.793622786390565*^9}, {
   3.79363303629985*^9, 3.7936330441375637`*^9}, {3.79363326965746*^9, 
   3.793633308093603*^9}, {3.7936333593832006`*^9, 3.7936334465738783`*^9}, {
   3.7936337284454308`*^9, 3.7936337507798367`*^9}, {3.793633790798416*^9, 
   3.793633830915058*^9}, {3.793634093243615*^9, 3.793634093380102*^9}, {
   3.793634176726584*^9, 3.7936341917484827`*^9}, {3.793635470151145*^9, 
   3.793635495557562*^9}, {3.793635580929015*^9, 3.793635632663175*^9}, {
   3.79363579829185*^9, 3.793635799331031*^9}, {3.7936359702570887`*^9, 
   3.7936360371131907`*^9}, {3.7936361082318974`*^9, 3.793636172310937*^9}, 
   3.7936362199248047`*^9, 3.793636323162561*^9, {3.79363641931629*^9, 
   3.793636430807139*^9}, {3.793636723593378*^9, 3.793636810622099*^9}, {
   3.79363685441781*^9, 3.793636868672307*^9}, {3.793636937053568*^9, 
   3.793636976287895*^9}, {3.793637068748837*^9, 3.7936370828084497`*^9}, {
   3.7936372275607977`*^9, 3.7936372922989597`*^9}, {3.793637489022126*^9, 
   3.793637507264101*^9}, {3.793637556999271*^9, 3.79363756425723*^9}, 
   3.793637820511859*^9, {3.7937141715674114`*^9, 3.7937141723356056`*^9}, {
   3.793714234631979*^9, 3.793714268229605*^9}, {3.7937143135198407`*^9, 
   3.7937143606600523`*^9}, {3.7937144184266253`*^9, 
   3.7937145186787853`*^9}, {3.7937146088543797`*^9, 3.793714622793756*^9}, {
   3.7937147071675615`*^9, 3.793714707506916*^9}, 3.793714872284275*^9, {
   3.793715208734138*^9, 3.79371523188964*^9}, 3.793716723478305*^9, 
   3.7937939938159*^9, {3.793796627771206*^9, 3.793796631133206*^9}, {
   3.793886613834797*^9, 3.7938866358362026`*^9}, {3.793887837167513*^9, 
   3.7938878469650164`*^9}, {3.7938878918786316`*^9, 3.793887900611446*^9}, {
   3.79388794268336*^9, 3.7938879428253627`*^9}, {3.793887986218253*^9, 
   3.7938879895177813`*^9}, {3.793912933710123*^9, 3.793912933828122*^9}, {
   3.793913142536027*^9, 3.793913150642948*^9}, {3.793913184142518*^9, 
   3.793913413745092*^9}, {3.7939136602598076`*^9, 3.7939137187895145`*^9}, 
   3.793913769082466*^9, {3.793913804574132*^9, 3.7939138390573406`*^9}, 
   3.793914112640103*^9, {3.7939141799294167`*^9, 3.79391418852966*^9}, {
   3.7939142460770435`*^9, 3.793914251303116*^9}, {3.793914284837324*^9, 
   3.793914312425086*^9}, {3.793914605979861*^9, 3.7939146789986305`*^9}, {
   3.7939147152609525`*^9, 3.7939147891156244`*^9}, {3.793914822772683*^9, 
   3.793914845265251*^9}, {3.793915694525611*^9, 3.7939157298847036`*^9}, {
   3.7939158733216686`*^9, 3.7939159941615744`*^9}, {3.7939160346013203`*^9, 
   3.7939161434317694`*^9}, {3.7939161828000374`*^9, 3.793916186693511*^9}, {
   3.7939162347088256`*^9, 3.793916414491471*^9}, {3.7939165096037617`*^9, 
   3.7939165519103317`*^9}, {3.7939165895925503`*^9, 
   3.7939165967171965`*^9}, {3.7939167351913986`*^9, 
   3.7939167444328737`*^9}, {3.7939168856501684`*^9, 
   3.7939169007492647`*^9}, {3.793916932717179*^9, 3.7939170371681376`*^9}, {
   3.79391711778564*^9, 3.793917213122429*^9}, {3.79391726392593*^9, 
   3.793917363571149*^9}, {3.793917510705826*^9, 3.7939176117805986`*^9}, {
   3.793917695531045*^9, 3.793917705162162*^9}, {3.793917749451584*^9, 
   3.793917842033763*^9}, {3.7939178998095264`*^9, 3.7939179473776617`*^9}, {
   3.7939179857103963`*^9, 3.793918078662216*^9}, {3.7939201073082824`*^9, 
   3.7939201778295684`*^9}, {3.793920232879258*^9, 3.7939202891167383`*^9}, {
   3.793920427315218*^9, 3.7939204421076183`*^9}, {3.7939205113006573`*^9, 
   3.7939205806056843`*^9}, {3.7939206671438255`*^9, 
   3.7939207246670823`*^9}, {3.7939209660363693`*^9, 
   3.7939209675083714`*^9}, {3.793921082317895*^9, 3.793921092418282*^9}, {
   3.793921123236417*^9, 3.793921265032542*^9}, {3.7939213470661345`*^9, 
   3.793921405879979*^9}, {3.793921444610025*^9, 3.7939214756286964`*^9}, {
   3.793921548614274*^9, 3.7939217079333487`*^9}, {3.793921754229034*^9, 
   3.793921805552602*^9}, {3.793921864121463*^9, 3.7939220434193153`*^9}, {
   3.7939220844155293`*^9, 3.793922091772869*^9}, {3.793922161052208*^9, 
   3.7939221983443785`*^9}, {3.7939222340240993`*^9, 3.793922289872838*^9}, {
   3.7939223355636697`*^9, 3.793922364359362*^9}, {3.793922414905096*^9, 
   3.793922433416499*^9}, {3.793922463688102*^9, 3.793922514003292*^9}, {
   3.7939226025079317`*^9, 3.793922619144318*^9}, {3.7939226498185515`*^9, 
   3.7939226794432836`*^9}, {3.7939227470815954`*^9, 3.793922883683569*^9}, {
   3.7939229378587856`*^9, 3.7939229390387135`*^9}, {3.793923022397829*^9, 
   3.793923083055027*^9}, {3.793923122926058*^9, 3.7939234316277742`*^9}, 
   3.7939235481253104`*^9, {3.793925299479454*^9, 3.7939252996364703`*^9}, {
   3.793925402674488*^9, 3.793925628745534*^9}, {3.7939256602146173`*^9, 
   3.793925747598034*^9}, {3.793925796420331*^9, 3.793925821832513*^9}, {
   3.7939258986920533`*^9, 3.793925923041667*^9}, {3.793926063622078*^9, 
   3.7939260653979235`*^9}, {3.793926237890055*^9, 3.7939262413808985`*^9}, {
   3.7939262801883435`*^9, 3.793926408312245*^9}, {3.793926544177247*^9, 
   3.793926654666624*^9}, {3.793926789720272*^9, 3.793926792650484*^9}, {
   3.7939268816485853`*^9, 3.793926907357387*^9}, {3.79392693993752*^9, 
   3.793926988418555*^9}, {3.7939270387266483`*^9, 3.793927138530115*^9}, {
   3.793927171634944*^9, 3.793927172666758*^9}, {3.7939272185641513`*^9, 
   3.793927228530711*^9}, {3.7939273162358985`*^9, 3.7939273277713594`*^9}, {
   3.793927418473739*^9, 3.7939276125552998`*^9}, {3.7939276485330057`*^9, 
   3.7939276980046396`*^9}, {3.7939277432348056`*^9, 3.793927905987756*^9}, 
   3.793927950218525*^9, {3.7939279818468857`*^9, 3.7939279854809065`*^9}, {
   3.7939280256516285`*^9, 3.7939280736202154`*^9}, {3.7939281048004837`*^9, 
   3.793928124383004*^9}, {3.7939744800925465`*^9, 3.79397448330919*^9}, {
   3.79397453086021*^9, 3.793974809775607*^9}, {3.79397484809969*^9, 
   3.7939748510802727`*^9}, {3.7939749308777914`*^9, 3.793974980430401*^9}, {
   3.7939750199754333`*^9, 3.793975065164089*^9}, {3.793975111553198*^9, 
   3.793975111667198*^9}, {3.793975190967894*^9, 3.793975250128628*^9}, {
   3.7939752815617385`*^9, 3.793975359232477*^9}, {3.7939754090352936`*^9, 
   3.7939754357342296`*^9}, {3.7939755032841506`*^9, 
   3.7939755692064867`*^9}, {3.7939756056613784`*^9, 
   3.7939757155190296`*^9}, {3.793975807929302*^9, 3.793975817028473*^9}, {
   3.7939758624503393`*^9, 3.793975919560383*^9}, {3.793975955030817*^9, 
   3.7939761225061197`*^9}, {3.7939764962682223`*^9, 
   3.7939766374909654`*^9}, {3.7939771023855457`*^9, 
   3.7939771125313587`*^9}, {3.7939771508141055`*^9, 
   3.7939772555634584`*^9}, {3.793977327880472*^9, 3.793977408715928*^9}, {
   3.793980583447768*^9, 3.7939806064156075`*^9}, {3.793980673583788*^9, 
   3.793980791984286*^9}, {3.793980960608636*^9, 3.793980966701749*^9}, {
   3.793981015811035*^9, 3.79398113048291*^9}, {3.7939815029420896`*^9, 
   3.7939816140214715`*^9}, {3.793981669809371*^9, 3.793981719900942*^9}, {
   3.7939818731923504`*^9, 3.793981883497855*^9}, {3.7939820610138693`*^9, 
   3.793982062431033*^9}, {3.79398213915656*^9, 3.7939821497609015`*^9}, {
   3.793982607259469*^9, 3.7939826114448433`*^9}, {3.7939827337709093`*^9, 
   3.793982755486206*^9}, {3.793982807803536*^9, 3.793982818247547*^9}, {
   3.793982895518097*^9, 3.793982934198209*^9}, {3.793982973465005*^9, 
   3.7939829798198385`*^9}, {3.7939830245284047`*^9, 3.793983121975583*^9}, {
   3.7939832033167496`*^9, 3.7939832037727365`*^9}, {3.793983235432335*^9, 
   3.7939832682374315`*^9}, {3.793983301063547*^9, 3.793983383182906*^9}, {
   3.793983455118825*^9, 3.793983456379526*^9}, {3.7939834929564776`*^9, 
   3.7939835561882696`*^9}, {3.7939836443907537`*^9, 
   3.7939836464523163`*^9}, {3.7939837085536113`*^9, 3.793983710218162*^9}, {
   3.793983742077834*^9, 3.7939838355556283`*^9}, {3.7939849751289825`*^9, 
   3.793984983995216*^9}, {3.7939850606445637`*^9, 3.793985089048403*^9}, {
   3.7939861237524757`*^9, 3.793986164317525*^9}, {3.7939861950679226`*^9, 
   3.7939863526938057`*^9}, {3.7939864211347713`*^9, 3.793986423759124*^9}, {
   3.793986458175374*^9, 3.793986474191568*^9}, {3.793986513581953*^9, 
   3.7939865507148604`*^9}, {3.793986709099588*^9, 3.793986713967146*^9}, {
   3.7939867601241727`*^9, 3.793986805233471*^9}, {3.793986836490635*^9, 
   3.79398696577637*^9}, {3.7939870154353905`*^9, 3.7939870875268*^9}, {
   3.7939871345751677`*^9, 3.793987223225565*^9}, {3.7939872639153085`*^9, 
   3.793987289136177*^9}, {3.7939874727805767`*^9, 3.7939874729525785`*^9}, {
   3.7939877905718412`*^9, 3.7939878565150805`*^9}, {3.7939879112508*^9, 
   3.793987927547035*^9}, {3.794000777054397*^9, 3.7940008478036585`*^9}, {
   3.794000918287464*^9, 3.794000920276675*^9}, {3.794000971917612*^9, 
   3.79400097384461*^9}, {3.7940010134675426`*^9, 3.7940010936917343`*^9}, {
   3.794001145741911*^9, 3.794001196972683*^9}, {3.7940012442220325`*^9, 
   3.794001291532175*^9}, {3.79400144726792*^9, 3.7940014572573895`*^9}, {
   3.7940017347409945`*^9, 3.7940017621192913`*^9}, {3.794001803608882*^9, 
   3.7940018516603355`*^9}, {3.794001884068681*^9, 3.794001892326975*^9}, {
   3.7940019922214227`*^9, 3.7940020785317655`*^9}, {3.794002143278145*^9, 
   3.7940021436436534`*^9}, {3.794002188228015*^9, 3.7940022299114814`*^9}, {
   3.7940023189564757`*^9, 3.7940023232389016`*^9}, {3.794002358543085*^9, 
   3.7940026598966036`*^9}, {3.794002740818884*^9, 3.7940028883009233`*^9}, {
   3.79400294388813*^9, 3.7940030177363214`*^9}, {3.79400324087986*^9, 
   3.794003264485486*^9}, {3.7940036559424706`*^9, 3.79400365914231*^9}, {
   3.7940040303489685`*^9, 3.7940040340706015`*^9}, {3.794004078273327*^9, 
   3.7940040786925344`*^9}, {3.79400412209181*^9, 3.794004122944927*^9}, {
   3.7940042201853943`*^9, 3.794004265374892*^9}, {3.7940043048580008`*^9, 
   3.7940043124978886`*^9}, {3.79400436187451*^9, 3.794004387255333*^9}, {
   3.7940044375051374`*^9, 3.794004504927655*^9}, {3.7940045553412113`*^9, 
   3.79400458718775*^9}, 3.794004701426699*^9, {3.7940047931520867`*^9, 
   3.7940049204518404`*^9}, {3.794005011486759*^9, 3.7940050131639643`*^9}, 
   3.794005088866104*^9, {3.794005119867854*^9, 3.794005163147978*^9}, {
   3.7940051963696756`*^9, 3.794005228939744*^9}, {3.794005289073353*^9, 
   3.794005339063926*^9}, {3.7940053698380356`*^9, 3.794005389543614*^9}, {
   3.7940054320826178`*^9, 3.7940054322316217`*^9}, {3.794005468979604*^9, 
   3.7940054855756264`*^9}, {3.7940055246423182`*^9, 
   3.7940055319639835`*^9}, {3.7940056710131693`*^9, 3.794005671173177*^9}, 
   3.794005857633656*^9, 3.79400757525404*^9, {3.794007684320879*^9, 
   3.7940077019828405`*^9}, {3.794007741551118*^9, 3.7940078494426126`*^9}, {
   3.7940078842815037`*^9, 3.7940079521184187`*^9}, 3.7940081851798573`*^9, {
   3.7940083146218786`*^9, 3.794008316884926*^9}, {3.794008372950983*^9, 
   3.794008384693568*^9}, {3.7940085927809706`*^9, 3.794008627351276*^9}, {
   3.794008669352535*^9, 3.794008719884279*^9}, {3.794008778433053*^9, 
   3.794008799493427*^9}, {3.794008844835933*^9, 3.7940088995362144`*^9}, {
   3.7940089310110254`*^9, 3.7940090186157937`*^9}, {3.794009072102103*^9, 
   3.7940091002867603`*^9}, {3.7940091987048826`*^9, 3.7940092005066023`*^9}, 
   3.7940092640341363`*^9, {3.7940092996608453`*^9, 3.7940093005949135`*^9}, {
   3.7940093459220085`*^9, 3.7940093473926544`*^9}, {3.7940125482976627`*^9, 
   3.7940125716507063`*^9}, {3.7940137248404503`*^9, 3.794013727373081*^9}, {
   3.794013798789694*^9, 3.794013799148735*^9}, {3.7940139736878085`*^9, 
   3.7940139738168077`*^9}, {3.794014302430909*^9, 3.794014469481536*^9}, {
   3.794014596598771*^9, 3.794014598306252*^9}, {3.7940146492124696`*^9, 
   3.794014803276816*^9}, {3.7940148924076242`*^9, 3.7940149195122976`*^9}, 
   3.7940149555667477`*^9, {3.7940150199825153`*^9, 3.7940150449406385`*^9}, {
   3.7940150987728257`*^9, 3.794015191321973*^9}, {3.7940152240304384`*^9, 
   3.7940152926844506`*^9}, {3.794015459484682*^9, 3.794015533624963*^9}, 
   3.794015587516515*^9, 3.7940157784243374`*^9, {3.7940185357388773`*^9, 
   3.79401853593692*^9}, {3.7940186725078745`*^9, 3.7940186785785728`*^9}, {
   3.794018872014047*^9, 3.794018872252046*^9}, {3.794018917915349*^9, 
   3.7940189179753284`*^9}, 3.794018964143173*^9, {3.794019241625511*^9, 
   3.7940192419225097`*^9}, {3.7940194856475058`*^9, 3.7940194904841843`*^9}, 
   3.794020079846447*^9, {3.794020864735468*^9, 3.794020865564786*^9}, {
   3.7940209584952483`*^9, 3.794020965342662*^9}, {3.794021118582559*^9, 
   3.7940211350614853`*^9}, {3.7940212834420204`*^9, 3.794021314148669*^9}, {
   3.7940214373156557`*^9, 3.7940215020885315`*^9}, {3.794021611285738*^9, 
   3.7940216122872515`*^9}, {3.794021646814068*^9, 3.794021671438321*^9}, {
   3.7940217418749447`*^9, 3.794021742866356*^9}, 3.7940582600522027`*^9, {
   3.794058427133234*^9, 3.7940585354836655`*^9}, {3.794058649584607*^9, 
   3.7940586600587745`*^9}, {3.7940587093748302`*^9, 
   3.7940587146875257`*^9}, {3.7940587899524517`*^9, 3.794058819958229*^9}, {
   3.7940588589672365`*^9, 3.794058868898506*^9}, {3.794058900256049*^9, 
   3.7940589947746954`*^9}, {3.794059061774353*^9, 3.7940590685686245`*^9}, {
   3.7940591188317637`*^9, 3.794059119350626*^9}, {3.794059271361071*^9, 
   3.7940592776959867`*^9}, {3.7940593593705254`*^9, 3.794059374313504*^9}, {
   3.794060528903311*^9, 3.7940605339459515`*^9}, {3.794060597362455*^9, 
   3.7940607273441067`*^9}, {3.794060780691386*^9, 3.7940608240800076`*^9}, 
   3.7940609206224365`*^9, {3.794061230810463*^9, 3.794061235475142*^9}, {
   3.794061387560687*^9, 3.794061391457387*^9}, {3.794061571229056*^9, 
   3.794061585626989*^9}, {3.794061641942238*^9, 3.7940617214405327`*^9}, {
   3.794061765023275*^9, 3.79406187264253*^9}, {3.794062046303933*^9, 
   3.7940621449603357`*^9}, {3.794062182212018*^9, 3.794062217948902*^9}, {
   3.794062278231497*^9, 3.794062355315021*^9}, 3.7940623884902153`*^9, {
   3.7940624807815027`*^9, 3.7940624819573393`*^9}, {3.794062704659135*^9, 
   3.7940627417526417`*^9}, {3.7940627897935658`*^9, 3.794062836470026*^9}, {
   3.794062884437501*^9, 3.794062887241109*^9}, {3.794062957046248*^9, 
   3.794063038634313*^9}, {3.794063072747267*^9, 3.794063123239044*^9}, {
   3.7940632387097187`*^9, 3.794063283338928*^9}, {3.794082696774458*^9, 
   3.7940827021551237`*^9}, {3.794082787462874*^9, 3.794082813060328*^9}, {
   3.794082847329321*^9, 3.794082944110523*^9}, {3.7940830474555063`*^9, 
   3.794083081852234*^9}, {3.794083135876968*^9, 3.794083138239032*^9}, {
   3.794083185086214*^9, 3.79408330382837*^9}, {3.794083360865136*^9, 
   3.7940833623292007`*^9}, {3.794083432494204*^9, 3.794083582491908*^9}, 
   3.794084037834697*^9, {3.794084282484334*^9, 3.794084290157242*^9}, {
   3.794084464858514*^9, 3.794084486517939*^9}, {3.7940848914713907`*^9, 
   3.7940849004937887`*^9}, {3.794084975375371*^9, 3.794084986073723*^9}, {
   3.794085072263893*^9, 3.794085112651355*^9}, {3.794085142796171*^9, 
   3.794085143087846*^9}, {3.794085318037969*^9, 3.794085360856366*^9}, {
   3.794085419108233*^9, 3.794085442431951*^9}, {3.79408555539583*^9, 
   3.7940855658525267`*^9}, {3.794085605361206*^9, 3.7940856123607893`*^9}, {
   3.794085673009242*^9, 3.79408567452973*^9}, {3.794086009579126*^9, 
   3.79408635060316*^9}, {3.7940864416188107`*^9, 3.794086480848722*^9}, {
   3.794086511715596*^9, 3.794086630949379*^9}, {3.794086723605433*^9, 
   3.794086801291627*^9}, {3.7940868760073147`*^9, 3.794086988899416*^9}, {
   3.794087046343997*^9, 3.7940870500583973`*^9}, 3.79408710944275*^9, 
   3.7940871720466003`*^9, 3.794087211914652*^9, {3.79408734342239*^9, 
   3.79408736784776*^9}, {3.794087409392211*^9, 3.794087411536319*^9}, 
   3.7940875594025993`*^9, {3.7940876037106133`*^9, 3.794087611492742*^9}, {
   3.794087669992949*^9, 3.794087670874445*^9}, {3.79408850332714*^9, 
   3.79408852916029*^9}, {3.794088716342424*^9, 3.794088812810251*^9}, {
   3.794089086208961*^9, 3.794089105500705*^9}, {3.794262213466429*^9, 
   3.794262216695713*^9}, {3.7942622911593795`*^9, 3.7942622924532785`*^9}, {
   3.7942671615851374`*^9, 3.794267178905978*^9}, {3.7942672978318295`*^9, 
   3.7942673030195704`*^9}, {3.79426734048904*^9, 3.7942673618204355`*^9}, {
   3.794267543602935*^9, 3.794267606289193*^9}, {3.794267641692143*^9, 
   3.7942676440895824`*^9}, {3.7942676879706993`*^9, 
   3.7942677139334087`*^9}, {3.7942677457989893`*^9, 
   3.7942677650382643`*^9}, {3.794267795930372*^9, 3.7942678219595323`*^9}, {
   3.7942678607500696`*^9, 3.7942678709798107`*^9}, {3.794268082239334*^9, 
   3.794268085070089*^9}, {3.794268146412974*^9, 3.794268204216098*^9}, {
   3.7942683468597045`*^9, 3.7942684303456144`*^9}, {3.7942684711216803`*^9, 
   3.794268481724479*^9}, {3.7942685293589725`*^9, 3.79426853058677*^9}, {
   3.794268617340208*^9, 3.7942686203392406`*^9}, {3.7942686544390507`*^9, 
   3.7942686796371107`*^9}, {3.794269695359416*^9, 3.794269697888997*^9}, {
   3.794270134339183*^9, 3.7942701732416286`*^9}, {3.79427021308928*^9, 
   3.794270237399042*^9}, {3.7942703965990505`*^9, 3.794270547559319*^9}, {
   3.794270605438966*^9, 3.7942706542396774`*^9}, {3.7942708183489423`*^9, 
   3.7942708211018095`*^9}, {3.7942709443728724`*^9, 
   3.7942709468886347`*^9}, {3.7942709788286123`*^9, 3.794270980136652*^9}, {
   3.7942710107796106`*^9, 3.794271031509063*^9}, {3.794271495769144*^9, 
   3.794271503029105*^9}, {3.7942715452780704`*^9, 3.7942715892804656`*^9}, {
   3.7942716208040876`*^9, 3.794271700976898*^9}, 3.794271778159528*^9, {
   3.794271841429206*^9, 3.7942718644291077`*^9}, {3.794271976548724*^9, 
   3.79427218318207*^9}, {3.7942722660889406`*^9, 3.794272266749581*^9}, {
   3.794272321798869*^9, 3.794272323368924*^9}, {3.79427239960935*^9, 
   3.7942724489932003`*^9}, {3.794272533798746*^9, 3.7942725603456774`*^9}, {
   3.794272600603527*^9, 3.7942728355320024`*^9}, 3.7942728727078776`*^9, {
   3.7942729150460615`*^9, 3.794272927777085*^9}, {3.7942730916134243`*^9, 
   3.794273095712783*^9}, {3.794273139016816*^9, 3.7942731394448175`*^9}, {
   3.7942731874197655`*^9, 3.7942732327682915`*^9}, 3.7942737566618567`*^9, {
   3.7942738091751366`*^9, 3.7942738954041247`*^9}, {3.794273951708767*^9, 
   3.7942739689055557`*^9}, {3.7942740438516483`*^9, 3.79427408838838*^9}, {
   3.7942741998377695`*^9, 3.794274265321107*^9}, {3.7942744822769117`*^9, 
   3.794274482477993*^9}, {3.794274558703624*^9, 3.794274639118209*^9}, {
   3.794274743436015*^9, 3.7942747507781124`*^9}, {3.794274882520666*^9, 
   3.794274913990757*^9}, {3.794275046374447*^9, 3.7942750481534576`*^9}, {
   3.7942750840293207`*^9, 3.7942751106503553`*^9}, {3.7944898235691977`*^9, 
   3.794489842344889*^9}, {3.7944899498623447`*^9, 3.794490011694985*^9}, {
   3.7944900487633333`*^9, 3.7944900505830407`*^9}, {3.794578827722445*^9, 
   3.794578834390431*^9}, {3.7945792482436037`*^9, 3.794579257327154*^9}, {
   3.794579330639646*^9, 3.794579334333304*^9}, {3.794579809444821*^9, 
   3.79457987805439*^9}, 3.7945799420058126`*^9, {3.794579977315898*^9, 
   3.794579977451285*^9}, {3.794580293292561*^9, 3.794580407202011*^9}, {
   3.794580438268859*^9, 3.794580533954368*^9}, 3.794580943466552*^9, {
   3.794592168173931*^9, 3.794592187178816*^9}, {3.7945926031879*^9, 
   3.794592630976882*^9}, {3.794592849066677*^9, 3.794592856060051*^9}, {
   3.794593132915154*^9, 3.794593147331357*^9}, {3.794593346769668*^9, 
   3.794593359169406*^9}, {3.7945961329874*^9, 3.794596162567893*^9}, {
   3.7945962571391773`*^9, 3.794596265454465*^9}, {3.794596360737516*^9, 
   3.794596361976067*^9}, {3.7945965114931583`*^9, 3.794596523528358*^9}, {
   3.794596644304369*^9, 3.7945966693793993`*^9}, {3.794599928243567*^9, 
   3.7945999550462933`*^9}, {3.794600016229405*^9, 3.7946001010601387`*^9}, {
   3.794600171872686*^9, 3.794600172717317*^9}, 3.794600253348831*^9, {
   3.7946006307607813`*^9, 3.7946006332468452`*^9}, {3.794600874653054*^9, 
   3.7946009253868227`*^9}, {3.794601201960617*^9, 3.794601220999155*^9}, {
   3.794601566883079*^9, 3.7946015679565477`*^9}, {3.794601748624357*^9, 
   3.7946017674645853`*^9}, {3.794602036558578*^9, 3.794602094411992*^9}, {
   3.794602293040414*^9, 3.794602337030105*^9}, {3.794602380156036*^9, 
   3.794602410772914*^9}, {3.794602701039242*^9, 3.794602712598571*^9}, 
   3.794602909249855*^9, {3.794603522958728*^9, 3.79460354355284*^9}, {
   3.794604156858943*^9, 3.7946041735446243`*^9}, {3.794604521380638*^9, 
   3.7946045221769*^9}, {3.7946045673682537`*^9, 3.794604569532001*^9}, {
   3.7946047015544157`*^9, 3.794604754271392*^9}, {3.7946048205228243`*^9, 
   3.794604821815547*^9}, 3.7946050915571957`*^9, {3.794605138953484*^9, 
   3.79460514667806*^9}, {3.794605382307876*^9, 3.7946053981690207`*^9}, {
   3.794605487213935*^9, 3.794605499532632*^9}, {3.794605588760735*^9, 
   3.794605597545515*^9}, {3.794605665718793*^9, 3.794605667626542*^9}, {
   3.79460585598065*^9, 3.794605861030512*^9}, {3.794606554194199*^9, 
   3.794606567046569*^9}, {3.794606695580806*^9, 3.794606729877936*^9}, {
   3.794606853935997*^9, 3.7946068836644497`*^9}, {3.794607022818841*^9, 
   3.7946070252784*^9}, 3.794607155172391*^9, {3.794660962083158*^9, 
   3.7946611819486113`*^9}, {3.794661439753264*^9, 3.794661447253756*^9}, {
   3.7946615332870197`*^9, 3.7946615924220753`*^9}, {3.7946619969293337`*^9, 
   3.794662003557626*^9}, {3.79466216248218*^9, 3.7946621793962507`*^9}, {
   3.794662213165028*^9, 3.7946622154051447`*^9}, {3.794662256517252*^9, 
   3.7946622637653503`*^9}, {3.7946622989049187`*^9, 3.794662300415408*^9}, 
   3.794662452639337*^9, {3.794662559420062*^9, 3.794662584658599*^9}, {
   3.794662624750749*^9, 3.794662637584104*^9}, {3.794662866526383*^9, 
   3.794662872248931*^9}, 3.794662971130741*^9, {3.794663050928487*^9, 
   3.794663061106545*^9}, {3.794663739731155*^9, 3.794663839295939*^9}, {
   3.794663900345868*^9, 3.794663924269537*^9}, {3.794664021953375*^9, 
   3.7946640263127327`*^9}, 3.794664118359375*^9, 3.7946641670093307`*^9, 
   3.794664301236741*^9, {3.794664340185546*^9, 3.794664422974105*^9}, {
   3.7946645049909887`*^9, 3.794664508255884*^9}, {3.794664560809162*^9, 
   3.7946646251466227`*^9}, {3.79466466955543*^9, 3.794664732135153*^9}, {
   3.7946647623006287`*^9, 3.794664762855043*^9}, {3.79466480477635*^9, 
   3.794664809032098*^9}, {3.7946648618255672`*^9, 3.794664867530163*^9}, 
   3.794664957733617*^9, {3.7946656162756023`*^9, 3.79466565056942*^9}, {
   3.7946657680516577`*^9, 3.7946657733154*^9}, {3.794665824844391*^9, 
   3.794665861849414*^9}, {3.794666184941613*^9, 3.794666213135729*^9}, 
   3.794666244745091*^9, {3.794666295480735*^9, 3.794666304167824*^9}, {
   3.794666374648624*^9, 3.79466638535548*^9}, {3.794666771580852*^9, 
   3.7946667771091433`*^9}, {3.7946669950246553`*^9, 
   3.7946671425815897`*^9}, {3.794667172948584*^9, 3.794667173039632*^9}, 
   3.7946672051383533`*^9, {3.7946672923501387`*^9, 3.7946673705582867`*^9}, {
   3.79466744463411*^9, 3.7946674462098494`*^9}, {3.794667488098445*^9, 
   3.794667587214755*^9}, {3.794667632695579*^9, 3.7946676434248047`*^9}, {
   3.794667733480558*^9, 3.794667814309759*^9}, {3.794667876893219*^9, 
   3.7946678778401337`*^9}, {3.794668065931487*^9, 3.7946681422331753`*^9}, {
   3.794668254979783*^9, 3.7946682585356827`*^9}, {3.7946683669399548`*^9, 
   3.7946683715633993`*^9}, {3.7946684323304996`*^9, 3.794668561734248*^9}, 
   3.794668595241618*^9, {3.794668658661582*^9, 3.7946686718726063`*^9}, {
   3.794668844331245*^9, 3.794668879905258*^9}, {3.794669776756776*^9, 
   3.79466977876639*^9}, {3.794669853075242*^9, 3.794670129323062*^9}, {
   3.7946702178925753`*^9, 3.794670242513254*^9}, {3.794670290688982*^9, 
   3.794670309565694*^9}, {3.794670622046669*^9, 3.794670623993362*^9}, {
   3.794671078562839*^9, 3.794671209194566*^9}, {3.794671375375745*^9, 
   3.794671496074131*^9}, {3.79467159493437*^9, 3.794671679854207*^9}, {
   3.794671745009253*^9, 3.7946717474294443`*^9}, {3.794671788708712*^9, 
   3.794671789574576*^9}, 3.7946719430719223`*^9, {3.794672591162734*^9, 
   3.794672666752308*^9}, {3.794672700947456*^9, 3.794672809666381*^9}, {
   3.794672865938416*^9, 3.7946728917407427`*^9}, {3.7946729487646523`*^9, 
   3.794673039000712*^9}, {3.794673233773341*^9, 3.794673326182304*^9}, {
   3.794673373418232*^9, 3.794673436943717*^9}, {3.794673483546666*^9, 
   3.794673483695919*^9}, {3.794683921891583*^9, 3.7946839258171864`*^9}, {
   3.794684649479404*^9, 3.794684653236143*^9}, {3.794684694533584*^9, 
   3.794684701561412*^9}, {3.794684923136887*^9, 3.794684940931182*^9}, {
   3.794685078051158*^9, 3.794685080141239*^9}, {3.794685234943356*^9, 
   3.794685247200914*^9}, {3.7946853897900057`*^9, 3.794685390622343*^9}, {
   3.7946854301913233`*^9, 3.7946854404038343`*^9}, {3.794685528672901*^9, 
   3.79468554097994*^9}, {3.7946855924304028`*^9, 3.7946855941073847`*^9}, {
   3.7946857412646427`*^9, 3.794685772972089*^9}, {3.7946859160223207`*^9, 
   3.7946859412483892`*^9}, {3.794686041150497*^9, 3.794686041324011*^9}, {
   3.794686201478601*^9, 3.7946862052714*^9}, {3.7946863687285*^9, 
   3.794686398619631*^9}, {3.794686563705422*^9, 3.794686563804364*^9}, {
   3.794686992402273*^9, 3.794687018367261*^9}, {3.7946871110633793`*^9, 
   3.794687147341086*^9}, {3.7946871998923407`*^9, 3.79468723150231*^9}, {
   3.794687303055957*^9, 3.7946873684439087`*^9}, {3.794687426197884*^9, 
   3.794687435079393*^9}, {3.794687476374817*^9, 3.794687584449711*^9}, {
   3.794687715552806*^9, 3.794687813950631*^9}, {3.794687906068898*^9, 
   3.7946879229219027`*^9}, {3.7946879601368027`*^9, 3.794687960636077*^9}, 
   3.794688162339363*^9, {3.794688213676079*^9, 3.794688232815814*^9}, {
   3.794690626670313*^9, 3.794690696600518*^9}, {3.794690734166108*^9, 
   3.794690768035308*^9}, {3.794690858709545*^9, 3.794690904242365*^9}, {
   3.794690954973178*^9, 3.7946909663050756`*^9}, 3.7946909968224993`*^9, {
   3.794691083709498*^9, 3.794691087756963*^9}, {3.794691210193227*^9, 
   3.7946912112150106`*^9}, {3.79469134648662*^9, 3.794691374733*^9}, {
   3.79469152130313*^9, 3.7946915226930857`*^9}, {3.7946915530589743`*^9, 
   3.794691556847208*^9}, {3.794691594248291*^9, 3.794691607418847*^9}, {
   3.794691901931799*^9, 3.794691914137863*^9}, {3.7946921178583183`*^9, 
   3.7946921590023613`*^9}, 3.794692594745137*^9, {3.7946928529931707`*^9, 
   3.794692860685184*^9}, {3.794695186289303*^9, 3.7946952064227858`*^9}, {
   3.794695237089603*^9, 3.7946953229381866`*^9}, {3.794695355353044*^9, 
   3.794695382798008*^9}, {3.794695549094281*^9, 3.7946955953957157`*^9}, {
   3.794695648093926*^9, 3.794695859335554*^9}, {3.7946958911265*^9, 
   3.7946958996701517`*^9}, {3.794695930868361*^9, 3.7946959767679358`*^9}, {
   3.794696008841008*^9, 3.794696165762363*^9}, {3.794696324556003*^9, 
   3.794696371516468*^9}, {3.794696408214233*^9, 3.7946965746952744`*^9}, {
   3.794696605923455*^9, 3.794696612425804*^9}, {3.7946966953286133`*^9, 
   3.794696698861965*^9}, {3.7946967369664183`*^9, 3.79469685615679*^9}, {
   3.79469696051551*^9, 3.7946969918444443`*^9}, {3.794697071331998*^9, 
   3.794697177517251*^9}, {3.794697215186241*^9, 3.7946972560842457`*^9}, {
   3.794697398286744*^9, 3.794697473587132*^9}, {3.794698148213648*^9, 
   3.794698172490182*^9}, {3.794698280818375*^9, 3.7946983332391768`*^9}, {
   3.794698401780546*^9, 3.794698490063562*^9}, {3.794698555729258*^9, 
   3.7946986571286097`*^9}, {3.794698818335574*^9, 3.794698839077317*^9}, 
   3.794698892252906*^9, {3.7946989224518223`*^9, 3.794698948325437*^9}, 
   3.79469903236674*^9, {3.794699178508657*^9, 3.794699383140926*^9}, {
   3.794702265839731*^9, 3.794702265932066*^9}, {3.7947052946915092`*^9, 
   3.79470529525609*^9}, {3.7947053383186502`*^9, 3.794705427723027*^9}, {
   3.794705468595162*^9, 3.79470547637103*^9}, {3.794705510143952*^9, 
   3.794705516870666*^9}, {3.794705548270631*^9, 3.7947055620902033`*^9}, {
   3.7947056056472588`*^9, 3.794705872551867*^9}, {3.794705905864965*^9, 
   3.7947059659807587`*^9}, 3.794706144654935*^9, {3.794706180350095*^9, 
   3.794706246173807*^9}, {3.794706283582448*^9, 3.794706504349045*^9}, {
   3.794706535580645*^9, 3.794706673338664*^9}, {3.794706739647252*^9, 
   3.794706803297068*^9}, {3.7947070231533403`*^9, 3.794707032394627*^9}, {
   3.7947071182049*^9, 3.794707119417139*^9}, {3.794707310969384*^9, 
   3.794707494197604*^9}, {3.794707530347253*^9, 3.794707562834425*^9}, {
   3.7947080160195637`*^9, 3.7947080979108047`*^9}, {3.794708276188489*^9, 
   3.794708281794191*^9}, {3.7947083445072393`*^9, 3.7947083799961843`*^9}, {
   3.7947084211318893`*^9, 3.794708463738399*^9}, 3.7947084955289383`*^9, {
   3.794708566014393*^9, 3.794708606234202*^9}, {3.794708659794273*^9, 
   3.794708712633045*^9}, {3.794708787152726*^9, 3.794708810873309*^9}, {
   3.794708909605651*^9, 3.794708918128317*^9}, {3.7947089726406937`*^9, 
   3.794708972732787*^9}, {3.794709082872357*^9, 3.794709085434183*^9}, {
   3.794709192312543*^9, 3.794709256092195*^9}, {3.794765684817917*^9, 
   3.794765721891995*^9}, 3.794765922705019*^9, {3.794768306157021*^9, 
   3.794768397246936*^9}, {3.794768450895546*^9, 3.794768564001498*^9}, {
   3.794769988836254*^9, 3.794770028087295*^9}, {3.79477024244328*^9, 
   3.794770245694178*^9}, {3.794770615381671*^9, 3.794770692777474*^9}, 
   3.7947708136881523`*^9, {3.794770853026265*^9, 3.7947708639025373`*^9}, {
   3.794771001002059*^9, 3.794771169625556*^9}, {3.794771202560626*^9, 
   3.79477121808351*^9}, {3.794771257072698*^9, 3.7947712571837053`*^9}, {
   3.794771466678821*^9, 3.79477151619901*^9}, {3.794771649141775*^9, 
   3.794771664173895*^9}, {3.7947718001432667`*^9, 3.7947718404661837`*^9}, {
   3.7947718952197437`*^9, 3.794771895768214*^9}, {3.794771952374271*^9, 
   3.794772077819078*^9}, {3.7947721481846657`*^9, 3.794772153477974*^9}, {
   3.7947724792548323`*^9, 3.794772496037602*^9}, {3.794789391683145*^9, 
   3.794789451165906*^9}, {3.7947895324435463`*^9, 3.794789585213497*^9}, 
   3.794789616407077*^9, {3.794789704678769*^9, 3.794789714023765*^9}, {
   3.7947898349932423`*^9, 3.794789870917285*^9}, {3.794790204008745*^9, 
   3.794790253706004*^9}, {3.7947903128187304`*^9, 3.794790336517249*^9}, {
   3.7947904632430964`*^9, 3.79479064521838*^9}, 3.794790773493643*^9, {
   3.7947920358596697`*^9, 3.7947920859849052`*^9}, {3.794792124446703*^9, 
   3.794792125224557*^9}, {3.794792167816489*^9, 3.794792180348549*^9}, {
   3.794792253470606*^9, 3.794792289694059*^9}, {3.794792531799404*^9, 
   3.794792535340207*^9}, {3.7947926105795307`*^9, 3.794792719770132*^9}, 
   3.794792755083598*^9, {3.794792862110579*^9, 3.794792895233794*^9}, {
   3.794792935174448*^9, 3.794792939122527*^9}, {3.794792974737451*^9, 
   3.7947930244798*^9}, {3.7947930819549513`*^9, 3.794793087825376*^9}, {
   3.7947932258065977`*^9, 3.794793277582428*^9}, {3.79479330979276*^9, 
   3.794793310377013*^9}, {3.794793380537301*^9, 3.794793383906568*^9}, {
   3.7947935399687757`*^9, 3.794793696595099*^9}, {3.794793729603644*^9, 
   3.7947937336617413`*^9}, {3.7947942901827707`*^9, 3.794794489382474*^9}, {
   3.794796656159546*^9, 3.79479670101653*^9}, {3.79479675118362*^9, 
   3.79479675163242*^9}, {3.794796827611272*^9, 3.794796844541607*^9}, {
   3.794796923667511*^9, 3.794796924466483*^9}, {3.7947969672065287`*^9, 
   3.79479699954817*^9}, {3.794797067252431*^9, 3.7947970828665752`*^9}, {
   3.7947971360431767`*^9, 3.794797166688162*^9}, {3.794797233067904*^9, 
   3.794797277390395*^9}, {3.794798100968741*^9, 3.794798138936268*^9}, {
   3.7947982427138987`*^9, 3.794798242839972*^9}, {3.794798326827826*^9, 
   3.794798327905394*^9}, {3.794798455303941*^9, 3.794798486317234*^9}, {
   3.794798592122727*^9, 3.794798594859208*^9}, {3.794798744902845*^9, 
   3.7947987688836317`*^9}, {3.794798808654791*^9, 3.794798818632702*^9}, {
   3.794798914305952*^9, 3.794798914558683*^9}, 3.794798956400762*^9, {
   3.7947989874817543`*^9, 3.794798995388608*^9}, {3.794799201768964*^9, 
   3.794799206891263*^9}, 3.794799271566036*^9, {3.7947993539666967`*^9, 
   3.794799423791685*^9}, {3.7948010078050957`*^9, 3.794801035737423*^9}, {
   3.7948010859343987`*^9, 3.794801090801937*^9}, {3.7948011331669607`*^9, 
   3.794801170641069*^9}, {3.794801369023341*^9, 3.794801459557431*^9}, 
   3.794801594376548*^9, {3.7948017343083773`*^9, 3.7948017538776073`*^9}, 
   3.7948019884613123`*^9, {3.794844586320053*^9, 3.794844630735242*^9}, {
   3.7948446734415693`*^9, 3.794844853571288*^9}, {3.794844930748906*^9, 
   3.7948449390916348`*^9}, {3.794846718466155*^9, 3.794846725086378*^9}, {
   3.794846815545514*^9, 3.7948468348938026`*^9}, {3.794846903128821*^9, 
   3.794846952470303*^9}, {3.7948472741073093`*^9, 3.794847339858844*^9}, {
   3.79484742604093*^9, 3.7948474290070333`*^9}, {3.794847460029378*^9, 
   3.794847495976118*^9}, {3.7948475695800047`*^9, 3.7948476207372627`*^9}, {
   3.794847656391581*^9, 3.794847701205517*^9}, {3.794847744287261*^9, 
   3.794847885724842*^9}, {3.79484792221467*^9, 3.794847927104116*^9}, {
   3.794847966907155*^9, 3.7948479690023212`*^9}, {3.7948480005531683`*^9, 
   3.794848003551656*^9}, {3.7948480432258873`*^9, 3.7948480828317747`*^9}, {
   3.794848125715755*^9, 3.79484815420149*^9}, {3.79484847203865*^9, 
   3.7948484869559298`*^9}, {3.7948485442632847`*^9, 3.794848553380939*^9}, {
   3.7948485914457893`*^9, 3.794848622355708*^9}, 3.794848712868515*^9, {
   3.794848804159443*^9, 3.794848814629204*^9}, 3.79484885234886*^9, {
   3.794848934431068*^9, 3.794849176789177*^9}, {3.794849275207678*^9, 
   3.794849277033999*^9}, {3.7948493971821537`*^9, 3.794849554236702*^9}, {
   3.794849675845529*^9, 3.794849682339799*^9}, {3.794849730763241*^9, 
   3.794849763313161*^9}, {3.7948498621771*^9, 3.7948499686383867`*^9}, {
   3.794850044969718*^9, 3.794850089603928*^9}, {3.794850170654912*^9, 
   3.794850238630671*^9}, {3.7948505181536283`*^9, 3.794850518521627*^9}, {
   3.7948519780739737`*^9, 3.794852065151162*^9}, {3.794854065845109*^9, 
   3.7948541298265057`*^9}, {3.7948541598327208`*^9, 
   3.7948541607922163`*^9}, {3.794855830451766*^9, 3.794855832075993*^9}, {
   3.794901345046562*^9, 3.794901387957703*^9}, {3.7949015335373497`*^9, 
   3.794901536469481*^9}, {3.794901803776698*^9, 3.794901807321775*^9}, {
   3.794902184926283*^9, 3.794902196259447*^9}, {3.794902267347036*^9, 
   3.794902279019291*^9}, {3.794902517911517*^9, 3.794902536531107*^9}, 
   3.794902569095454*^9, {3.79490445935503*^9, 3.794904671640915*^9}, 
   3.794904804669997*^9, {3.794904834752576*^9, 3.7949048352341948`*^9}, {
   3.794904901349288*^9, 3.794904992930435*^9}, {3.794905125756296*^9, 
   3.794905145562904*^9}, {3.7949051794305553`*^9, 3.794905189861628*^9}, {
   3.794905240831884*^9, 3.794905244437641*^9}, {3.79490539338552*^9, 
   3.794905394911759*^9}, {3.794905919589674*^9, 3.794905927799664*^9}, {
   3.794905965958292*^9, 3.794906004342046*^9}, {3.794906073867449*^9, 
   3.794906076130602*^9}, {3.794906233456506*^9, 3.7949062361545486`*^9}, {
   3.794906706246681*^9, 3.7949067503064127`*^9}, {3.794907102534762*^9, 
   3.794907102652948*^9}, {3.794907294298217*^9, 3.794907323603956*^9}, {
   3.794907479590959*^9, 3.794907522026868*^9}, 3.794907897333107*^9, {
   3.794908087790949*^9, 3.7949083628794928`*^9}, {3.794908489698942*^9, 
   3.794908502521429*^9}, {3.794909177576488*^9, 3.7949093156603823`*^9}, {
   3.7949093567413483`*^9, 3.794909357178796*^9}, {3.7949094306780148`*^9, 
   3.794909490761281*^9}, {3.79490961792424*^9, 3.794909618790944*^9}, {
   3.7949097716491537`*^9, 3.794909796799843*^9}, {3.7949098685385017`*^9, 
   3.7949099070032187`*^9}, {3.794911791550758*^9, 3.794911791722978*^9}, {
   3.794911822686705*^9, 3.7949118703776608`*^9}, {3.794911900427243*^9, 
   3.7949119560274*^9}, {3.794912082609603*^9, 3.794912086364184*^9}, {
   3.794912129600016*^9, 3.794912164696957*^9}, {3.7949121970576687`*^9, 
   3.79491222223135*^9}, {3.794912287534634*^9, 3.794912294367805*^9}, {
   3.7949125035348597`*^9, 3.794912507612956*^9}, {3.794913615652293*^9, 
   3.794913689967039*^9}, {3.794914227949936*^9, 3.7949142601594667`*^9}, {
   3.794914633971744*^9, 3.794914637867673*^9}, {3.7949147160814333`*^9, 
   3.794914721835009*^9}, {3.794915067781967*^9, 3.794915181164053*^9}, {
   3.794915254501275*^9, 3.794915350594792*^9}, {3.794918812453638*^9, 
   3.794918821436385*^9}, {3.794919147421097*^9, 3.794919151390407*^9}, {
   3.7949192246300497`*^9, 3.794919227849718*^9}, {3.794919722396873*^9, 
   3.794919778966578*^9}, {3.794919812138998*^9, 3.794919972334841*^9}, {
   3.794920381886647*^9, 3.794920395520973*^9}, {3.794921213793371*^9, 
   3.7949212279278193`*^9}, {3.794921566428041*^9, 3.794921571192288*^9}, {
   3.794921610239435*^9, 3.794921659332713*^9}, 3.794921703900799*^9, {
   3.794921766251856*^9, 3.794921785915683*^9}, {3.794922133937847*^9, 
   3.794922136041338*^9}, {3.794922169723947*^9, 3.7949222015794*^9}, {
   3.794922356742908*^9, 3.794922372419859*^9}, {3.794922413587558*^9, 
   3.794922421476104*^9}, {3.7949225393204613`*^9, 3.7949225969061937`*^9}, {
   3.794925279810279*^9, 3.794925335473072*^9}, {3.7949253847125397`*^9, 
   3.794925406792624*^9}, {3.7949255072446404`*^9, 3.794925565377757*^9}, {
   3.794925617075344*^9, 3.7949256175010653`*^9}, {3.794925915504641*^9, 
   3.794925921625749*^9}, {3.794926305143568*^9, 3.794926309225868*^9}, 
   3.794926412348585*^9, {3.79492772257052*^9, 3.7949277348565493`*^9}, {
   3.794951169172412*^9, 3.7949512285631647`*^9}, {3.79495128430202*^9, 
   3.794951437660405*^9}, {3.7949515802054157`*^9, 3.7949515822527533`*^9}, {
   3.79495163580044*^9, 3.794951641460252*^9}, {3.794952000010612*^9, 
   3.794952016248637*^9}, {3.7949520508314247`*^9, 3.794952080634001*^9}, {
   3.794952219129512*^9, 3.794952228958063*^9}, {3.7949522723711576`*^9, 
   3.7949522756636467`*^9}, {3.794952328466805*^9, 3.794952328842636*^9}, {
   3.7949524005617247`*^9, 3.794952420820603*^9}, {3.794952602119411*^9, 
   3.794952613174156*^9}, {3.794953318857044*^9, 3.794953320882815*^9}, {
   3.794953784463006*^9, 3.794953816543212*^9}, 3.794953947737121*^9, {
   3.794954086934864*^9, 3.7949540889948893`*^9}, 3.794954144533292*^9, {
   3.794955737181848*^9, 3.794955824068527*^9}, {3.794955973536249*^9, 
   3.794955975862316*^9}, {3.794956134383547*^9, 3.794956177319215*^9}, {
   3.79495620800826*^9, 3.794956211174885*^9}, {3.7949598898252497`*^9, 
   3.794960015956188*^9}, {3.794960216347342*^9, 3.794960229570033*^9}, {
   3.79496083039001*^9, 3.794960846993588*^9}, {3.794960878473363*^9, 
   3.794960983347898*^9}, 3.7949611604104033`*^9, {3.794961214922595*^9, 
   3.794961278100017*^9}, {3.794961320412279*^9, 3.794961360042673*^9}, {
   3.79501117155226*^9, 3.795011175768478*^9}, {3.795028484880714*^9, 
   3.7950285625687227`*^9}, 3.79502860324319*^9, {3.795028650674835*^9, 
   3.7950286708933573`*^9}, {3.795028725216329*^9, 3.795028725874453*^9}, {
   3.7950287681951838`*^9, 3.795028768648326*^9}, {3.795028801985166*^9, 
   3.795028803107758*^9}, {3.795028856596468*^9, 3.795028907161767*^9}, {
   3.795028970268722*^9, 3.7950289858133698`*^9}, {3.7950290703765593`*^9, 
   3.795029104606608*^9}, {3.795029215794018*^9, 3.7950292430995617`*^9}, 
   3.795029276044631*^9, {3.795029397451724*^9, 3.7950293976987867`*^9}, {
   3.795029551048455*^9, 3.7950295943973637`*^9}, {3.7950296973259583`*^9, 
   3.7950297083408213`*^9}, {3.795029763068595*^9, 3.795029763444961*^9}, {
   3.795030163878594*^9, 3.79503023149953*^9}, {3.795032636459145*^9, 
   3.7950326367629633`*^9}, {3.7950326683350782`*^9, 3.795032708083239*^9}, {
   3.7950342662339973`*^9, 3.795034279983597*^9}, 3.795101825468547*^9, {
   3.795101914054481*^9, 3.795101918000009*^9}, {3.795102052848374*^9, 
   3.795102057156189*^9}, {3.7951020968484383`*^9, 3.795102101234908*^9}, {
   3.795102510577269*^9, 3.795102514880287*^9}, {3.795102547388418*^9, 
   3.795102555910364*^9}, {3.79510782469944*^9, 3.795107864692954*^9}, 
   3.795131653145339*^9, {3.795131940034191*^9, 3.795131951218923*^9}, {
   3.7951319846250067`*^9, 3.795131984867901*^9}, 3.795190786492937*^9, {
   3.79519156454141*^9, 3.795191592304619*^9}, {3.795193480563911*^9, 
   3.795193527937769*^9}, {3.7951938708933163`*^9, 3.795193879330371*^9}, {
   3.7951940288698683`*^9, 3.795194037255769*^9}, {3.795194139164782*^9, 
   3.7951941398435087`*^9}, {3.795194946443499*^9, 3.795194975337822*^9}, {
   3.795195025009709*^9, 3.7951950286390667`*^9}, {3.795195105116015*^9, 
   3.7951951058142223`*^9}, {3.795195200487008*^9, 3.795195267518991*^9}, {
   3.795195349090592*^9, 3.795195381716642*^9}, {3.7951954999554234`*^9, 
   3.795195556573368*^9}, {3.7951956512225246`*^9, 3.795195667514078*^9}, {
   3.795195725961253*^9, 3.7951957555373507`*^9}, {3.795195813734123*^9, 
   3.795195830351015*^9}, {3.795195877189663*^9, 3.795195890413741*^9}, 
   3.7951960633835897`*^9, {3.795196332487123*^9, 3.795196497013361*^9}, {
   3.795196530156885*^9, 3.795196535839574*^9}, {3.7951965661403513`*^9, 
   3.795196593056315*^9}, {3.7951969279565067`*^9, 3.795196934055868*^9}, {
   3.795196966795986*^9, 3.7951969890273046`*^9}, {3.7951970551952343`*^9, 
   3.795197170499304*^9}, {3.795197204585916*^9, 3.795197204920439*^9}, {
   3.79519732447451*^9, 3.7951973770305567`*^9}, {3.795197766471696*^9, 
   3.795197779883192*^9}, {3.795197926550511*^9, 3.795197978080315*^9}, {
   3.795272531513146*^9, 3.7952725459757147`*^9}, {3.795282515519959*^9, 
   3.795282515803392*^9}, {3.795369101796424*^9, 3.795369126065987*^9}, {
   3.79536931364783*^9, 3.795369545138829*^9}, {3.7953695922933197`*^9, 
   3.795369599183497*^9}, {3.7953696643997107`*^9, 3.795369688164995*^9}, {
   3.795369765366707*^9, 3.7953697691618557`*^9}, {3.795369807329101*^9, 
   3.795369820801757*^9}, {3.795369940785809*^9, 3.795369951734807*^9}, {
   3.795369999496812*^9, 3.795370100198056*^9}, {3.795370146242098*^9, 
   3.795370233787174*^9}, {3.795370294948268*^9, 3.795370295287866*^9}, {
   3.7953703417899513`*^9, 3.795370355254689*^9}, {3.7953703911727133`*^9, 
   3.795370391268867*^9}, {3.7953704374555492`*^9, 3.795370441745327*^9}, {
   3.7953704819764977`*^9, 3.7953705217043123`*^9}, 3.795370775393873*^9, 
   3.795371548190879*^9, {3.795371618992072*^9, 3.79537162073448*^9}, {
   3.7953717183400297`*^9, 3.795371730622476*^9}, 3.795371782328599*^9, {
   3.795371827428884*^9, 3.795371832894116*^9}, {3.795371930207481*^9, 
   3.795371938295845*^9}, {3.795371979938716*^9, 3.7953720380676403`*^9}, {
   3.795372071578782*^9, 3.7953720912260027`*^9}, {3.795372146304262*^9, 
   3.79537216395221*^9}, {3.795372318043633*^9, 3.795372326530991*^9}, {
   3.795373318043912*^9, 3.7953734155367928`*^9}, {3.795373449136181*^9, 
   3.795373505254537*^9}, {3.795373561154441*^9, 3.795373587890173*^9}, {
   3.795373806653853*^9, 3.795373840019697*^9}, {3.795374143537815*^9, 
   3.795374158474019*^9}, {3.795374189396996*^9, 3.7953741963715773`*^9}, {
   3.795374277379792*^9, 3.795374324075132*^9}, {3.7953743766721687`*^9, 
   3.795374379932239*^9}, {3.7953751888433723`*^9, 3.795375189336446*^9}, {
   3.795375228405664*^9, 3.795375230617751*^9}, {3.795375285179203*^9, 
   3.795375351117846*^9}, {3.795375872309637*^9, 3.795376015940659*^9}, {
   3.795376053511817*^9, 3.795376082996667*^9}, {3.795376113626177*^9, 
   3.795376125220749*^9}, {3.7953761827555304`*^9, 3.795376226505129*^9}, {
   3.7953767436942987`*^9, 3.795376768846374*^9}, {3.795376922006257*^9, 
   3.795376929367824*^9}, {3.795377001653552*^9, 3.795377003403778*^9}, {
   3.795377036305623*^9, 3.795377071926981*^9}, {3.795377115469458*^9, 
   3.79537711852936*^9}, {3.795377258211157*^9, 3.795377260914443*^9}, {
   3.7953772920283422`*^9, 3.795377315745775*^9}, {3.7953773577454576`*^9, 
   3.7953774440808372`*^9}, {3.795377505854547*^9, 3.7953775888223057`*^9}, {
   3.795377633831868*^9, 3.795377692365878*^9}, {3.795377736215373*^9, 
   3.795377740792733*^9}, {3.7953778363775806`*^9, 3.795377840770999*^9}, {
   3.795377910307235*^9, 3.7953779531115522`*^9}, {3.795378126228327*^9, 
   3.7953781501036663`*^9}, {3.795378285844487*^9, 3.7953783190900993`*^9}, {
   3.795378383945366*^9, 3.795378409072847*^9}, {3.795378485430552*^9, 
   3.795378581716024*^9}, {3.795378646190751*^9, 3.795378661472104*^9}, {
   3.795378710753207*^9, 3.795378755185953*^9}, {3.795378802540791*^9, 
   3.795378833178728*^9}, {3.7953788634627333`*^9, 3.795378960829302*^9}, {
   3.795379001208414*^9, 3.795379040708082*^9}, {3.795379153667725*^9, 
   3.7953791572235518`*^9}, {3.795380192034356*^9, 3.7953802431156197`*^9}, {
   3.795380907697525*^9, 3.795380928473502*^9}, {3.795381076787229*^9, 
   3.795381091458001*^9}, 3.795381811147695*^9, {3.795383214350108*^9, 
   3.7953832719933767`*^9}, {3.795383620998914*^9, 3.795383631205207*^9}, 
   3.7953836695202627`*^9, {3.795383777661425*^9, 3.795383779878118*^9}, {
   3.795384047804302*^9, 3.795384066398747*^9}, {3.795384266083547*^9, 
   3.795384278403757*^9}, {3.795384324114497*^9, 3.795384328791521*^9}, {
   3.7953845036457767`*^9, 3.7953845720729437`*^9}, {3.795384679334215*^9, 
   3.795384706811799*^9}, {3.795384742974986*^9, 3.795384750406618*^9}, {
   3.79538523959951*^9, 3.795385240243239*^9}, {3.795385275428958*^9, 
   3.795385284422216*^9}, {3.7953853758990173`*^9, 3.795385414424306*^9}, {
   3.795385792078433*^9, 3.795385821889398*^9}, {3.795388451105401*^9, 
   3.795388458522092*^9}, 3.7953885859928713`*^9, {3.79538994921929*^9, 
   3.795390284964264*^9}, {3.795390331801168*^9, 3.7953903332247057`*^9}, {
   3.7953905520336857`*^9, 3.795390643456561*^9}, {3.795390704535028*^9, 
   3.79539070846663*^9}, {3.7953908697632*^9, 3.7953908818644*^9}, {
   3.795391148040806*^9, 3.795391213432921*^9}, {3.795391257795949*^9, 
   3.795391260165606*^9}, 3.7953913053829403`*^9, {3.7953915834591637`*^9, 
   3.795391807864303*^9}, {3.795393216842526*^9, 3.7953932548019037`*^9}, {
   3.795393956994339*^9, 3.7953939699946833`*^9}, {3.795394118974782*^9, 
   3.795394166890738*^9}, {3.7953946038480463`*^9, 3.7953946225462637`*^9}, {
   3.795395013140799*^9, 3.7953950177290373`*^9}, {3.795439560380937*^9, 
   3.795439668963913*^9}, {3.795439759838335*^9, 3.795439760002864*^9}, {
   3.795441063656309*^9, 3.795441080072307*^9}, {3.7954463764610643`*^9, 
   3.795446385690551*^9}, {3.7954498168141127`*^9, 3.7954498887525473`*^9}, {
   3.795450709958129*^9, 3.7954507871985083`*^9}, {3.795451046384665*^9, 
   3.7954512146935797`*^9}, {3.7954514370181627`*^9, 3.795451517310828*^9}, {
   3.795451581120389*^9, 3.795451648713279*^9}, {3.79545184727888*^9, 
   3.79545185066288*^9}, {3.7954518911720543`*^9, 3.7954519713466873`*^9}, {
   3.795452003305047*^9, 3.795452006969236*^9}, {3.7954520699773197`*^9, 
   3.795452084348596*^9}, {3.7954521791454983`*^9, 3.795452179915468*^9}, {
   3.795452228218328*^9, 3.795452228380636*^9}, 3.795452324678944*^9, {
   3.795452417025243*^9, 3.7954524201757793`*^9}, {3.795452552699081*^9, 
   3.795452555356523*^9}, {3.7954526171392927`*^9, 3.7954526176792517`*^9}, {
   3.795452837038659*^9, 3.7954528634098663`*^9}, {3.795453123752544*^9, 
   3.795453146838382*^9}, {3.7954533898016663`*^9, 3.7954534011800957`*^9}, 
   3.795453438928001*^9, {3.79545361807927*^9, 3.795453681652549*^9}, {
   3.795455105888267*^9, 3.795455108797719*^9}, {3.795455214156934*^9, 
   3.795455224061129*^9}, {3.7954552604259777`*^9, 3.795455324594348*^9}, {
   3.795455496411478*^9, 3.795455571436026*^9}, 3.795455629033308*^9, {
   3.795455672163033*^9, 3.795455702305911*^9}, {3.795455809772181*^9, 
   3.795455812745018*^9}, {3.7954558869333467`*^9, 3.7954559026269283`*^9}, {
   3.795457048159219*^9, 3.795457089777309*^9}, {3.795457511665843*^9, 
   3.7954575269732018`*^9}, {3.7954613024444933`*^9, 
   3.7954613183134527`*^9}, {3.79546147624197*^9, 3.795461512173505*^9}, {
   3.795461672720132*^9, 3.795461680968419*^9}, {3.795461736231892*^9, 
   3.795461738869783*^9}, {3.7954617876361217`*^9, 3.79546179713453*^9}, {
   3.795461992834709*^9, 3.795461993138627*^9}, 3.795462125846043*^9, {
   3.795462166255929*^9, 3.795462187712529*^9}, {3.7954622192046824`*^9, 
   3.795462239621348*^9}, {3.795464413704091*^9, 3.7954644450542593`*^9}, {
   3.795464476414151*^9, 3.795464492826754*^9}, {3.7954645370502577`*^9, 
   3.795464600330221*^9}, {3.7954647051251087`*^9, 3.795464773174549*^9}, {
   3.795464981819462*^9, 3.795465009556981*^9}, {3.7954654624193363`*^9, 
   3.795465766319573*^9}, {3.795465832736587*^9, 3.795465847978209*^9}, {
   3.795465993131895*^9, 3.7954659965600357`*^9}, {3.7954661655232687`*^9, 
   3.795466168538734*^9}, {3.795466205272812*^9, 3.795466206501857*^9}, {
   3.795466249979686*^9, 3.795466311447455*^9}, {3.7954663676025763`*^9, 
   3.7954663927326107`*^9}, 3.795466603808331*^9, {3.795466647420312*^9, 
   3.795466666070671*^9}, {3.795466788002368*^9, 3.795466809003488*^9}, {
   3.7954670458535233`*^9, 3.795467046495805*^9}, {3.795470481637694*^9, 
   3.795470482443619*^9}, {3.7954706598056726`*^9, 3.7954706798601847`*^9}, {
   3.795470903964347*^9, 3.795470958646906*^9}, {3.795471639897072*^9, 
   3.795471665766017*^9}, {3.795471805193956*^9, 3.795471851208445*^9}, {
   3.795471900117916*^9, 3.7954719259282827`*^9}, {3.795471968425712*^9, 
   3.795471970635661*^9}, {3.795472059825932*^9, 3.7954720648715897`*^9}, {
   3.7954720990782557`*^9, 3.795472124394499*^9}, {3.7954723865618877`*^9, 
   3.79547258175054*^9}, {3.795472636857918*^9, 3.7954726684950943`*^9}, {
   3.795472711123527*^9, 3.795472719364484*^9}, {3.795472828111377*^9, 
   3.795472881630563*^9}, {3.795472914517536*^9, 3.795472938591468*^9}, {
   3.7954731292650537`*^9, 3.795473135682167*^9}, 3.795473240920101*^9, {
   3.795473469082363*^9, 3.795473481197364*^9}, {3.7954741842302847`*^9, 
   3.7954741996325483`*^9}, {3.795474287048119*^9, 3.7954743591671677`*^9}, {
   3.795474425706706*^9, 3.795474439476718*^9}, {3.795474481037848*^9, 
   3.795474481182332*^9}, {3.7954745999929647`*^9, 3.7954746242368107`*^9}, {
   3.795474877506406*^9, 3.795474877659821*^9}, {3.795474937865295*^9, 
   3.795474943583694*^9}, {3.795476570952177*^9, 3.7954765983109083`*^9}, {
   3.7954766759832582`*^9, 3.795476714502746*^9}, {3.795477387902234*^9, 
   3.795477396453988*^9}, {3.795477508761497*^9, 3.795477516908572*^9}, 
   3.795477622985544*^9, {3.7954777281748123`*^9, 3.795477736810556*^9}, {
   3.795477871218636*^9, 3.795477900430943*^9}, {3.795477944003398*^9, 
   3.795477953305949*^9}, {3.795478001433436*^9, 3.7954780877313223`*^9}, {
   3.795478265332604*^9, 3.795478265747242*^9}, {3.795478322439281*^9, 
   3.795478327971637*^9}, {3.795478377037671*^9, 3.795478378860821*^9}, 
   3.7954784935825653`*^9, {3.795478527315631*^9, 3.795478622334412*^9}, {
   3.795478841362648*^9, 3.795478852960277*^9}, {3.795479111130734*^9, 
   3.7954791688179283`*^9}, {3.795479335205709*^9, 3.7954794339223957`*^9}, {
   3.795479508389276*^9, 3.795479513638411*^9}, {3.79547959306505*^9, 
   3.795479595030032*^9}, 3.795479627195775*^9, {3.795479921108021*^9, 
   3.795479967431522*^9}, {3.795481882571835*^9, 3.7954818883201427`*^9}, {
   3.795481947249568*^9, 3.7954819473731947`*^9}, {3.795482246992855*^9, 
   3.7954822922300367`*^9}, {3.7954823365620413`*^9, 3.795482375740304*^9}, {
   3.795482410165215*^9, 3.795482418381793*^9}, {3.795482464670334*^9, 
   3.7954824695838137`*^9}, {3.79548269945572*^9, 3.795482720412229*^9}, {
   3.79548615925777*^9, 3.795486167291304*^9}, {3.795486460021427*^9, 
   3.795486460442339*^9}, {3.795487050677198*^9, 3.7954870601786222`*^9}, {
   3.795487103926282*^9, 3.795487118884595*^9}, {3.795489648378791*^9, 
   3.7954897023933277`*^9}, {3.795490297930999*^9, 3.7954903096621923`*^9}, {
   3.795491104945923*^9, 3.795491177860075*^9}, {3.795491251911276*^9, 
   3.795491253259426*^9}, 3.7954916586727*^9, {3.7954921099878407`*^9, 
   3.795492123629345*^9}, {3.795492261247094*^9, 3.795492340497651*^9}, {
   3.795492378220471*^9, 3.795492380360943*^9}, {3.7954928903393183`*^9, 
   3.795492894908538*^9}, {3.795492947966382*^9, 3.795493001263021*^9}, {
   3.795493161951651*^9, 3.7954931628299*^9}, {3.795493548863759*^9, 
   3.795493556955187*^9}, {3.795493595860639*^9, 3.795493728763603*^9}, {
   3.795494157915427*^9, 3.795494165619928*^9}, {3.7954943731915703`*^9, 
   3.7954944050443068`*^9}, {3.795495410614317*^9, 3.795495422680431*^9}, {
   3.795496035884178*^9, 3.795496044073181*^9}, {3.79549608337573*^9, 
   3.795496128006805*^9}, {3.7955179866532507`*^9, 3.795517986838428*^9}, {
   3.7955293374354877`*^9, 3.795529361789947*^9}, {3.795529942190061*^9, 
   3.7955299680154943`*^9}, {3.795531052765605*^9, 3.795531053694213*^9}, {
   3.795531339901395*^9, 3.7955313572501183`*^9}, {3.795531505123837*^9, 
   3.7955315095812397`*^9}, {3.7955316526636133`*^9, 3.795531658563266*^9}, {
   3.79553475833751*^9, 3.795534760813325*^9}, {3.795534803791843*^9, 
   3.795534807464286*^9}, {3.79553493576777*^9, 3.795534940327121*^9}, {
   3.795535013974682*^9, 3.795535060118258*^9}, {3.795535497862852*^9, 
   3.7955355078803377`*^9}, {3.79553554744129*^9, 3.795535580503708*^9}, {
   3.7955356760148277`*^9, 3.795535710782898*^9}, {3.795537332486885*^9, 
   3.795537432971355*^9}, {3.7955426531897078`*^9, 3.7955426681375504`*^9}, {
   3.795542823143672*^9, 3.795542834739416*^9}, 3.795542926807364*^9, {
   3.795543043748105*^9, 3.795543077741447*^9}, {3.7955431816061087`*^9, 
   3.795543187077986*^9}, {3.795543268458846*^9, 3.7955432933782053`*^9}, {
   3.795543332436167*^9, 3.795543399376378*^9}, {3.795543475888287*^9, 
   3.795543483785658*^9}, {3.79554351975909*^9, 3.795543768649167*^9}, {
   3.795543931428463*^9, 3.7955439315618973`*^9}, {3.7955440667110777`*^9, 
   3.79554406735015*^9}, {3.795544131855907*^9, 3.795544140844069*^9}, {
   3.7955441798082867`*^9, 3.795544238882991*^9}, {3.7955443827133713`*^9, 
   3.7955445752995977`*^9}, {3.7955451276123037`*^9, 
   3.7955451315293703`*^9}, {3.795888798074913*^9, 3.795888806613698*^9}, {
   3.795888839178944*^9, 3.7958888454929123`*^9}, {3.7958888828600683`*^9, 
   3.795888943705998*^9}, {3.7958889881670322`*^9, 3.795889024489362*^9}, {
   3.795889062218495*^9, 3.795889218437708*^9}, {3.795889258382984*^9, 
   3.79588945224713*^9}, {3.7958895261721067`*^9, 3.795889528650785*^9}, {
   3.7958895620111427`*^9, 3.795889610975264*^9}, {3.79589190410461*^9, 
   3.79589202928192*^9}, {3.79589207601961*^9, 3.795892143430725*^9}, {
   3.7958921818424597`*^9, 3.7958922514683867`*^9}, {3.7958922868619833`*^9, 
   3.7958923045674562`*^9}, {3.795892335272263*^9, 3.7958925380062113`*^9}, {
   3.7958925707425222`*^9, 3.795892590875742*^9}, {3.79589265852903*^9, 
   3.795892704380344*^9}, {3.795892843585524*^9, 3.795892893176939*^9}, {
   3.7958929279736767`*^9, 3.795893310422331*^9}, {3.795893348242765*^9, 
   3.795893458516405*^9}, {3.795893501648116*^9, 3.795893635791583*^9}, 
   3.795893707842976*^9, {3.795893738422114*^9, 3.795893742617688*^9}, {
   3.795893785894143*^9, 3.7958938920857162`*^9}, {3.7958939971949387`*^9, 
   3.795894001338767*^9}, {3.795894057249701*^9, 3.7958940575121593`*^9}, {
   3.795894139643059*^9, 3.79589426111681*^9}, {3.795894400710877*^9, 
   3.795894402793638*^9}, {3.795894578945956*^9, 3.795894601268751*^9}, {
   3.7958947612918787`*^9, 3.79589480871502*^9}, {3.79589484135212*^9, 
   3.7958948642299643`*^9}, {3.795894914188586*^9, 3.795894940047876*^9}, {
   3.795894971919956*^9, 3.795895022018064*^9}, {3.7958950544186897`*^9, 
   3.795895153863659*^9}, {3.795895204007111*^9, 3.7958952058122177`*^9}, {
   3.795895281051906*^9, 3.795895348965168*^9}, {3.795895404833395*^9, 
   3.795895443406898*^9}, {3.795895475357852*^9, 3.795895632763817*^9}, {
   3.795895673041451*^9, 3.79589567720128*^9}, {3.795895878163471*^9, 
   3.7958958791396093`*^9}, {3.79589652467465*^9, 3.795896524984139*^9}, {
   3.79589657400392*^9, 3.7958965788315983`*^9}, {3.795896787442171*^9, 
   3.795896832238164*^9}, 3.795896901591187*^9, {3.795897020688785*^9, 
   3.7958972300208063`*^9}, {3.7958973439891863`*^9, 3.79589741405844*^9}, {
   3.795897461188519*^9, 3.795897530308317*^9}, {3.795897590598352*^9, 
   3.795897615412558*^9}, {3.795897658428907*^9, 3.795897720821239*^9}, {
   3.795897798594949*^9, 3.795897840692172*^9}, {3.7964300797903643`*^9, 
   3.796430080375547*^9}, {3.796482753080139*^9, 3.7964827882480917`*^9}, {
   3.7964828525683937`*^9, 3.796482913785304*^9}, {3.796482957479494*^9, 
   3.796482962476894*^9}, {3.7964829932177877`*^9, 3.7964829948317842`*^9}, {
   3.796483438932736*^9, 3.7964834442421627`*^9}, {3.796483807018762*^9, 
   3.796483834020359*^9}, {3.79648388090915*^9, 3.79648389228342*^9}, {
   3.796486777634094*^9, 3.796486784539362*^9}, {3.796486815427354*^9, 
   3.796486826787196*^9}, {3.7964869331896057`*^9, 3.7964869870041018`*^9}, {
   3.796487086876749*^9, 3.79648708814296*^9}, {3.79648740244308*^9, 
   3.796487434876835*^9}, {3.796487764906975*^9, 3.796487771804399*^9}, {
   3.796489085085505*^9, 3.796489129985795*^9}, {3.796489184585609*^9, 
   3.796489279392437*^9}, {3.7964896271909*^9, 3.796489663069953*^9}, {
   3.7964898281564093`*^9, 3.796489888488657*^9}, {3.796490019110779*^9, 
   3.7964900622005787`*^9}, {3.796490474698797*^9, 3.7964904792472677`*^9}, {
   3.79649052105387*^9, 3.79649052279114*^9}, {3.796491398030442*^9, 
   3.796491411802655*^9}, {3.796491644299449*^9, 3.796491649851921*^9}, {
   3.796491906178953*^9, 3.796491906270774*^9}, {3.79649206041997*^9, 
   3.7964920625651093`*^9}, {3.796492131897623*^9, 3.79649213444438*^9}, {
   3.796492214164382*^9, 3.796492216913843*^9}, {3.796492401817266*^9, 
   3.796492402271933*^9}, {3.796492550101305*^9, 3.79649255033459*^9}, {
   3.7964926525511208`*^9, 3.796492652801944*^9}, 3.79649283197854*^9, 
   3.796492864905334*^9, {3.796492897827383*^9, 3.7964929580207987`*^9}, {
   3.796493121366387*^9, 3.7964931254278517`*^9}, {3.796494999260948*^9, 
   3.7964950070823517`*^9}, {3.796495060478271*^9, 3.796495065575746*^9}, {
   3.796495117954816*^9, 3.796495147423437*^9}, {3.796495264312214*^9, 
   3.796495266920987*^9}, {3.7964959951625757`*^9, 3.796496022251378*^9}, 
   3.796496134042861*^9, {3.7964962314399443`*^9, 3.796496251618105*^9}, {
   3.796497643449399*^9, 3.7964976474969*^9}, 3.79649859748137*^9, {
   3.796498700572323*^9, 3.7964987504409637`*^9}, {3.796498909552286*^9, 
   3.796498924971615*^9}, {3.796498955826722*^9, 3.796499255473049*^9}, {
   3.7964993709915943`*^9, 3.796499433311722*^9}, {3.796499481195079*^9, 
   3.796499488412854*^9}, {3.7965001002252483`*^9, 3.7965001168110037`*^9}, {
   3.796500398463048*^9, 3.796500518661717*^9}, {3.796500557050859*^9, 
   3.7965005572056427`*^9}, {3.796500623898539*^9, 3.796500651695427*^9}, {
   3.796500721382813*^9, 3.796500724998825*^9}, {3.796500848804253*^9, 
   3.796500861652072*^9}, {3.796500948862134*^9, 3.796500962502428*^9}, {
   3.796501008225457*^9, 3.796501038706002*^9}, {3.79650116134149*^9, 
   3.796501161698469*^9}, {3.7965012535868683`*^9, 3.796501263375248*^9}, {
   3.796501310961285*^9, 3.796501363631751*^9}, {3.796501403913554*^9, 
   3.796501405444048*^9}, 3.7965014542820787`*^9, {3.796501505113106*^9, 
   3.7965015306289263`*^9}, {3.796501565229609*^9, 3.7965016270710077`*^9}, 
   3.7965016656168957`*^9, 3.796501715808663*^9, {3.796501844966852*^9, 
   3.796501845141346*^9}, 3.796501878912591*^9, {3.7965019418692207`*^9, 
   3.7965019998796577`*^9}, {3.7965020428558702`*^9, 3.796502064211829*^9}, {
   3.796502106327571*^9, 3.796502106577774*^9}, {3.796502221713439*^9, 
   3.796502236941052*^9}, {3.796502273008506*^9, 3.796502275653287*^9}, {
   3.7965023413511753`*^9, 3.796502344607361*^9}, {3.796503097524674*^9, 
   3.7965031089670153`*^9}, {3.7965032338957233`*^9, 3.796503238156117*^9}, {
   3.796503269939928*^9, 3.796503270303928*^9}, {3.796503307875243*^9, 
   3.796503322232286*^9}, {3.7965067097564774`*^9, 3.796506729871895*^9}, {
   3.796507353795134*^9, 3.796507361049671*^9}, {3.796508009204797*^9, 
   3.79650800949903*^9}, {3.796508081147345*^9, 3.796508142695471*^9}, {
   3.7965082233991632`*^9, 3.7965082600521507`*^9}, {3.7965082916893167`*^9, 
   3.7965083736031322`*^9}, {3.796508420196583*^9, 3.796508447642158*^9}, {
   3.79650895373075*^9, 3.796508955361484*^9}, {3.796509207147855*^9, 
   3.7965092075212917`*^9}, {3.796509286751696*^9, 3.796509286874907*^9}, {
   3.796512449504012*^9, 3.796512499587184*^9}, {3.796513341801176*^9, 
   3.796513371784006*^9}, {3.796513407073206*^9, 3.796513408157331*^9}, {
   3.796513579368094*^9, 3.796513584253702*^9}, 3.7965136488149967`*^9, {
   3.79651377125393*^9, 3.796513777378912*^9}, {3.796514048572891*^9, 
   3.7965142030752172`*^9}, {3.796514275668215*^9, 3.7965143217141943`*^9}, {
   3.796514417195675*^9, 3.79651441734348*^9}, {3.796514671985785*^9, 
   3.7965146746821327`*^9}, {3.796514769143941*^9, 3.796514785796962*^9}, {
   3.796514880090474*^9, 3.79651488122825*^9}, {3.796514945065624*^9, 
   3.796514951723543*^9}, {3.796514987133461*^9, 3.796515023814252*^9}, {
   3.796515056798174*^9, 3.79651505819974*^9}, 3.796516734137478*^9, {
   3.796541609309347*^9, 3.7965416122860126`*^9}, {3.796541921476233*^9, 
   3.79654192225725*^9}, {3.796569602134667*^9, 3.79656968061091*^9}, {
   3.796569916931039*^9, 3.796569918403645*^9}, {3.796571131573794*^9, 
   3.796571145885008*^9}, {3.7965747166485987`*^9, 3.7965747180752907`*^9}, {
   3.796574765168063*^9, 3.79657477229994*^9}, {3.7965748269832897`*^9, 
   3.796574877615609*^9}, {3.796575025790536*^9, 3.796575061228409*^9}, {
   3.7965752182568808`*^9, 3.796575253643709*^9}, {3.796576243594844*^9, 
   3.796576252074176*^9}, {3.796638579748065*^9, 3.796638596908141*^9}, {
   3.796658237228448*^9, 3.796658256936393*^9}, {3.7966583376427727`*^9, 
   3.79665837200653*^9}, {3.796658429186339*^9, 3.7966584738305607`*^9}, {
   3.7966587672312117`*^9, 3.796658839246604*^9}, {3.796658885368475*^9, 
   3.796658944840864*^9}, {3.796659032568262*^9, 3.796659096406426*^9}, {
   3.796659139205244*^9, 3.796659271726592*^9}, {3.796659373710966*^9, 
   3.7966593785310383`*^9}, {3.796660194397759*^9, 3.79666019543932*^9}, 
   3.796660547272827*^9, {3.7966616209433527`*^9, 3.7966616213930902`*^9}, {
   3.796662301710462*^9, 3.796662330949787*^9}, {3.79666237792804*^9, 
   3.796662380215825*^9}, {3.796662430725176*^9, 3.7966624718132353`*^9}, {
   3.796662521978485*^9, 3.796662522104967*^9}, {3.796662596577942*^9, 
   3.796662727556879*^9}, {3.79666282673738*^9, 3.796662896776276*^9}, {
   3.79666676572965*^9, 3.796666774894723*^9}, {3.796666874322283*^9, 
   3.7966668805405483`*^9}, {3.7966670303880787`*^9, 
   3.7966670305157347`*^9}, {3.7966670668082943`*^9, 3.796667066911072*^9}, {
   3.796671748240582*^9, 3.796671753561472*^9}, {3.796671862430781*^9, 
   3.796671880953583*^9}, {3.796679458204047*^9, 3.79667949486097*^9}, {
   3.796680152109867*^9, 3.7966801531158543`*^9}, {3.796687614420999*^9, 
   3.796687616587504*^9}, {3.796922156610509*^9, 3.796922167526676*^9}, {
   3.797026832199604*^9, 3.79702683929845*^9}, {3.797026892341772*^9, 
   3.797026908996276*^9}, {3.797333558810685*^9, 3.7973336019097233`*^9}, {
   3.7973336646002293`*^9, 3.7973336652210903`*^9}, {3.797333880966814*^9, 
   3.7973340985106573`*^9}, {3.79733428735172*^9, 3.7973342917049847`*^9}, {
   3.797334564748947*^9, 3.797334626770183*^9}, {3.79733483869718*^9, 
   3.797334956387623*^9}, {3.7973349967543087`*^9, 3.79733500816362*^9}, {
   3.797335038212934*^9, 3.7973350906975613`*^9}, {3.797335128369046*^9, 
   3.797335129634152*^9}, 3.79733527866999*^9, 3.797338085945677*^9, {
   3.7973382236571827`*^9, 3.7973382414642563`*^9}, {3.797338474720067*^9, 
   3.797338501042588*^9}, {3.797338545380801*^9, 3.797338548682845*^9}, {
   3.797338580317527*^9, 3.797338604321843*^9}, {3.797338662405726*^9, 
   3.797338696595457*^9}, {3.797339306206517*^9, 3.797339342839074*^9}, {
   3.7973398872775717`*^9, 3.797339922813877*^9}, {3.797339992188115*^9, 
   3.797340010740823*^9}, {3.797340055061058*^9, 3.797340065325863*^9}, {
   3.7973401208687983`*^9, 3.797340121459077*^9}, {3.797340172239469*^9, 
   3.79734019637085*^9}, {3.797340347570559*^9, 3.797340416450947*^9}, {
   3.797341268935451*^9, 3.797341309103258*^9}, {3.797341444274042*^9, 
   3.797341463831688*^9}, {3.797341508882288*^9, 3.797341585468961*^9}, {
   3.797341642900488*^9, 3.797341667050604*^9}, {3.797341898547049*^9, 
   3.797341906082652*^9}, {3.797341938389056*^9, 3.797341972901525*^9}, {
   3.797342003746472*^9, 3.79734202393016*^9}, {3.797342061792802*^9, 
   3.797342134626437*^9}, {3.797342167755649*^9, 3.797342217590024*^9}, {
   3.797342251130704*^9, 3.797342359733994*^9}, {3.797342623918076*^9, 
   3.7973427894724913`*^9}, {3.7973435419397163`*^9, 3.797343574626342*^9}, {
   3.7973436094888763`*^9, 3.797343618977543*^9}, {3.797343657801351*^9, 
   3.7973436808348827`*^9}, {3.7973438222128763`*^9, 3.797343832326488*^9}, {
   3.7973438755175056`*^9, 3.797343889495761*^9}, {3.797343945177595*^9, 
   3.797344099137265*^9}, {3.79734487131271*^9, 3.797344893385357*^9}, {
   3.797344957597432*^9, 3.797344964559936*^9}, {3.7973451409366417`*^9, 
   3.79734514108665*^9}, {3.7973452313159323`*^9, 3.7973452772129097`*^9}, {
   3.79734535877807*^9, 3.797345386577845*^9}, 3.797345496535472*^9, {
   3.797345712548737*^9, 3.7973457944779*^9}, {3.797345871039817*^9, 
   3.797345872263241*^9}, {3.79735704893403*^9, 3.797357056246896*^9}, {
   3.797357098506502*^9, 3.7973571168390713`*^9}, {3.797357166296606*^9, 
   3.797357168174562*^9}, {3.797357201693906*^9, 3.7973572027641287`*^9}, {
   3.7973573006642723`*^9, 3.7973574730875053`*^9}, 3.797357539812706*^9, {
   3.797357572477253*^9, 3.797357602682369*^9}, {3.797357651432542*^9, 
   3.797357696997005*^9}, {3.797357743041501*^9, 3.797357797156519*^9}, {
   3.797357835514503*^9, 3.797357862891509*^9}, {3.79735791511869*^9, 
   3.797357924865862*^9}, {3.797357968272862*^9, 3.797358025711212*^9}, {
   3.797358166201539*^9, 3.797358201238565*^9}, {3.7973582533919077`*^9, 
   3.797358254688925*^9}, {3.7973584597581263`*^9, 3.797358463996682*^9}, {
   3.797358667788786*^9, 3.797358671136384*^9}, {3.797361988408486*^9, 
   3.79736200709455*^9}, {3.797362319594839*^9, 3.79736236055861*^9}, {
   3.79736265021*^9, 3.797362653991733*^9}, {3.7973630887335863`*^9, 
   3.7973631880107718`*^9}, {3.797363344226454*^9, 3.7973633596422358`*^9}, {
   3.797364251935878*^9, 3.797364270970522*^9}, {3.797364301065721*^9, 
   3.797364338110052*^9}, {3.797364693971703*^9, 3.7973646943255873`*^9}, {
   3.797364784463168*^9, 3.7973648168531513`*^9}, {3.797364877674734*^9, 
   3.797364877803722*^9}, {3.797364920229622*^9, 3.797364954617275*^9}, {
   3.797365106465815*^9, 3.79736527221019*^9}, {3.797365457214122*^9, 
   3.797365612764349*^9}, {3.797365673977458*^9, 3.797366024737061*^9}, {
   3.797366077651553*^9, 3.797366105498995*^9}, {3.797366144777783*^9, 
   3.797366159756792*^9}, {3.797367667030099*^9, 3.79736778197915*^9}, {
   3.7973678365014133`*^9, 3.797367848683049*^9}, {3.797367934882758*^9, 
   3.797367939619919*^9}, {3.797367977710622*^9, 3.7973679784815073`*^9}, {
   3.79736801986093*^9, 3.7973680212371073`*^9}, {3.797368074787839*^9, 
   3.797368075851308*^9}, {3.797368110464891*^9, 3.797368111299089*^9}, {
   3.797368187787545*^9, 3.797368238350539*^9}, {3.7973712777577133`*^9, 
   3.7973712779384613`*^9}, {3.797371367001215*^9, 3.797371439431143*^9}, {
   3.797371764749443*^9, 3.797371834415524*^9}, 3.797372101734293*^9, {
   3.797372448835034*^9, 3.797372520355418*^9}, {3.797372552846685*^9, 
   3.797372552968712*^9}, {3.797372601511437*^9, 3.79737261252372*^9}, {
   3.7973728466329536`*^9, 3.797372861802799*^9}, {3.7973729779906607`*^9, 
   3.797372978093532*^9}, {3.797373016588648*^9, 3.79737301694035*^9}, {
   3.79737306030285*^9, 3.797373104371283*^9}, {3.797373168883526*^9, 
   3.797373228976856*^9}, {3.7973733842465973`*^9, 3.797373386993284*^9}, {
   3.797373417341919*^9, 3.797373423036809*^9}, {3.797373478283477*^9, 
   3.797373498692013*^9}, {3.7973735305136003`*^9, 3.797373532181155*^9}, {
   3.7973735765907803`*^9, 3.7973736418807087`*^9}, {3.797373747010392*^9, 
   3.79737379541075*^9}, {3.7973738330419617`*^9, 3.797373833215748*^9}, {
   3.797373866098753*^9, 3.797373866572013*^9}, {3.797373961035527*^9, 
   3.797373974018223*^9}, {3.797374014795051*^9, 3.797374023469589*^9}, {
   3.7973740744125977`*^9, 3.797374076680271*^9}, {3.797374142963242*^9, 
   3.7973741430538054`*^9}, {3.797374665308066*^9, 3.7973747007028427`*^9}, {
   3.797374852217752*^9, 3.7973748570818567`*^9}, {3.797375257383094*^9, 
   3.797375384077599*^9}, {3.797375521388053*^9, 3.79737575270543*^9}, {
   3.797375855024599*^9, 3.7973758951481543`*^9}, {3.797375951339066*^9, 
   3.797375980105801*^9}, {3.797376160813345*^9, 3.797376208945517*^9}, {
   3.7973763059759407`*^9, 3.7973763685372963`*^9}, {3.797376449954886*^9, 
   3.797376536852062*^9}, {3.797376790000358*^9, 3.797376827657794*^9}, {
   3.797377162671536*^9, 3.797377171038761*^9}, {3.797377403064589*^9, 
   3.79737740401516*^9}, {3.79737746589177*^9, 3.797377466002384*^9}, {
   3.7973776978205547`*^9, 3.7973777232955103`*^9}, {3.7973777794179487`*^9, 
   3.797377781221339*^9}, {3.7973778510614643`*^9, 3.797377883854492*^9}, 
   3.797377924480308*^9, {3.797377977576022*^9, 3.797378033238735*^9}, {
   3.797378084647399*^9, 3.7973780896873207`*^9}, {3.797378167696526*^9, 
   3.797378178692608*^9}, {3.797378257916457*^9, 3.7973782985222483`*^9}, {
   3.797378395166513*^9, 3.7973784039079638`*^9}, {3.797378465910779*^9, 
   3.797378470407507*^9}, {3.79737855608815*^9, 3.7973785613454037`*^9}, {
   3.797378618734805*^9, 3.7973787155636053`*^9}, {3.7973788356068363`*^9, 
   3.797378847103239*^9}, {3.797378894358014*^9, 3.7973789226155357`*^9}, {
   3.7973793082763233`*^9, 3.797379324824835*^9}, {3.7973795783720818`*^9, 
   3.7973795803154593`*^9}, {3.797379643968904*^9, 3.797379651261354*^9}, {
   3.7973797230741262`*^9, 3.797379725117529*^9}, {3.7973798286794662`*^9, 
   3.797379872083311*^9}, {3.797380018391285*^9, 3.797380024234295*^9}, {
   3.797380247635045*^9, 3.797380271217638*^9}, {3.797380367610993*^9, 
   3.79738041870695*^9}, {3.797380473036715*^9, 3.797380473345262*^9}, 
   3.7973805225593033`*^9, {3.797381177643174*^9, 3.797381187132885*^9}, {
   3.797382863985619*^9, 3.7973829442035313`*^9}, {3.797382984349805*^9, 
   3.79738298544772*^9}, {3.7973831315692*^9, 3.797383169409531*^9}, 
   3.797383327801961*^9, {3.797383457596775*^9, 3.7973834669925003`*^9}, {
   3.797383520951784*^9, 3.797383524671825*^9}, {3.7973837398924828`*^9, 
   3.797383748184298*^9}, {3.7973838505952053`*^9, 3.797383866843308*^9}, 
   3.797384017497438*^9, {3.797384723343643*^9, 3.797384729014832*^9}, {
   3.7973847810214767`*^9, 3.797384908250065*^9}, {3.797384952031966*^9, 
   3.797384961655366*^9}, {3.7973851298191023`*^9, 3.797385131056184*^9}, 
   3.7973852691054*^9, 3.7973858429050303`*^9, {3.797386741980103*^9, 
   3.797386744170375*^9}, {3.797386990897562*^9, 3.797387047573897*^9}, {
   3.7973875774357843`*^9, 3.797387578093972*^9}, {3.797387759176497*^9, 
   3.797387759782007*^9}, 3.7973880659679327`*^9, {3.797388183878532*^9, 
   3.797388229452211*^9}, {3.797388379169924*^9, 3.797388418382916*^9}, 
   3.7973888149152517`*^9, 3.797388952902163*^9, {3.7973891033485947`*^9, 
   3.797389115705544*^9}, 3.7973891489383087`*^9, {3.797389330463211*^9, 
   3.7973895375167418`*^9}, {3.797389609668377*^9, 3.797389619016273*^9}, {
   3.797389745206904*^9, 3.797389785259096*^9}, {3.7973908478509483`*^9, 
   3.797390851209569*^9}, 3.797390982042039*^9, {3.7973910821767187`*^9, 
   3.7973910966761417`*^9}, {3.797391352341362*^9, 3.7973913715674133`*^9}, {
   3.797391518174048*^9, 3.797391532495529*^9}, 3.797391611202523*^9, 
   3.7973916690216722`*^9, {3.797392270686551*^9, 3.797392295765108*^9}, 
   3.797392372718174*^9, 3.797392572456361*^9, {3.797392641021029*^9, 
   3.797392645557941*^9}, {3.797393183080289*^9, 3.797393223528263*^9}, {
   3.797393281351009*^9, 3.797393309666375*^9}, {3.7973936103876038`*^9, 
   3.797393669236313*^9}, 3.797393888431098*^9, {3.797394144262003*^9, 
   3.797394187196398*^9}, {3.797394758041768*^9, 3.797394798981091*^9}, {
   3.797395295981524*^9, 3.797395315056076*^9}, {3.797395813722906*^9, 
   3.797395822566907*^9}, {3.797395886979074*^9, 3.797395902448838*^9}, {
   3.797396259303443*^9, 3.797396277037032*^9}, {3.797397378170506*^9, 
   3.7973973886892977`*^9}, {3.797425788033184*^9, 3.797425960205752*^9}, {
   3.7974260846070766`*^9, 3.797426142551733*^9}, {3.797426310549534*^9, 
   3.797426316507308*^9}, {3.797426430918153*^9, 3.797426436713808*^9}, 
   3.79742738694615*^9, {3.797427941780047*^9, 3.797427945838533*^9}, {
   3.797428019109473*^9, 3.7974281031240377`*^9}, {3.7974281490246153`*^9, 
   3.7974281840677156`*^9}, {3.7974282358636417`*^9, 3.797428238845323*^9}, {
   3.7974282906712*^9, 3.797428347483796*^9}, 3.7974284021662827`*^9, {
   3.797428445828555*^9, 3.797428499435094*^9}, {3.797428611135713*^9, 
   3.797428613783338*^9}, {3.797429012491127*^9, 3.7974290766274433`*^9}, {
   3.797429188294622*^9, 3.797429188406444*^9}, {3.797429220727704*^9, 
   3.797429265221684*^9}, {3.797429613034589*^9, 3.79742969294235*^9}, {
   3.7974297432223463`*^9, 3.797429746584073*^9}, {3.797429822447515*^9, 
   3.797429825375266*^9}, {3.797429944043796*^9, 3.797430011711178*^9}, {
   3.797430051671102*^9, 3.797430093323773*^9}, {3.797430189075687*^9, 
   3.7974302181485643`*^9}, {3.797430390122452*^9, 3.7974303975699587`*^9}, {
   3.797430848853874*^9, 3.797430858102318*^9}, {3.797430906379448*^9, 
   3.7974309274709587`*^9}, {3.797431003111795*^9, 3.7974310327933197`*^9}, {
   3.7974311220916843`*^9, 3.7974311286043243`*^9}, {3.7974311746097183`*^9, 
   3.797431179456259*^9}, {3.797431396931485*^9, 3.7974313976694717`*^9}, {
   3.797431514101714*^9, 3.797431521828918*^9}, {3.797431576198779*^9, 
   3.797431591487483*^9}, {3.79743197708678*^9, 3.797431996296863*^9}, {
   3.797432694052228*^9, 3.797432878230691*^9}, {3.7974329708649054`*^9, 
   3.797432978801999*^9}, {3.797433091451971*^9, 3.797433094083579*^9}, {
   3.79743403788299*^9, 3.797434038440557*^9}, {3.79745296474725*^9, 
   3.797453028526415*^9}, {3.797453260650577*^9, 3.79745326582246*^9}, {
   3.797456147937572*^9, 3.797456161960681*^9}, {3.797456492379747*^9, 
   3.7974564928407927`*^9}, {3.797456679681859*^9, 3.7974567646775503`*^9}, {
   3.797456893954966*^9, 3.79745690514511*^9}, 3.797457295176909*^9, 
   3.797510959010355*^9, {3.797511565175027*^9, 3.797511572189703*^9}, {
   3.7984165020811453`*^9, 3.798416511361685*^9}, 3.798416560159026*^9, {
   3.798416605434799*^9, 3.7984166059723597`*^9}, {3.798416777598014*^9, 
   3.798416778932774*^9}, {3.7984168152646227`*^9, 3.7984168157276278`*^9}, {
   3.7984169111854277`*^9, 3.7984170693177357`*^9}, {3.798417107168922*^9, 
   3.7984171088073683`*^9}, {3.7984171515559464`*^9, 3.798417414719452*^9}, {
   3.798417461799494*^9, 3.798417477555731*^9}, {3.798417517695341*^9, 
   3.798417928417231*^9}, {3.798417973768579*^9, 3.798417988738432*^9}, {
   3.798418018910995*^9, 3.798418140839923*^9}, {3.7984181827957983`*^9, 
   3.7984183204615107`*^9}, {3.798418359565061*^9, 3.798418370617361*^9}, {
   3.798420157686957*^9, 3.798420244765112*^9}, {3.798420305091734*^9, 
   3.798420392684317*^9}, {3.798420431559064*^9, 3.79842044478389*^9}, {
   3.798420504838434*^9, 3.798420541543016*^9}, {3.7984205727134027`*^9, 
   3.798420687104679*^9}, {3.7984207687309217`*^9, 3.7984208136488028`*^9}, {
   3.798420847406558*^9, 3.79842089685849*^9}, {3.7984209308031607`*^9, 
   3.798421036760131*^9}, {3.798421070757453*^9, 3.7984210922651253`*^9}, {
   3.798421123228077*^9, 3.798421302121234*^9}, {3.798421338731884*^9, 
   3.7984215042203836`*^9}, {3.79842187374679*^9, 3.79842187384247*^9}, {
   3.798421953608922*^9, 3.798422094637394*^9}, {3.798422125925885*^9, 
   3.798422167829756*^9}, {3.798422246063012*^9, 3.79842234159162*^9}, {
   3.7984223743118343`*^9, 3.7984224446479683`*^9}, {3.798422538429913*^9, 
   3.798422561289276*^9}, 3.798422667454537*^9, {3.798422708388105*^9, 
   3.798422710460146*^9}, {3.7984227514554033`*^9, 3.798422853745811*^9}, {
   3.798422965219679*^9, 3.798422971191648*^9}, {3.798423312065034*^9, 
   3.798423377741316*^9}, {3.798423408489319*^9, 3.798423413779387*^9}, {
   3.798423454696217*^9, 3.798423479562563*^9}, {3.798465380051195*^9, 
   3.798465381310584*^9}, {3.798465427056981*^9, 3.798465455005693*^9}, {
   3.798465488293995*^9, 3.798465496014914*^9}, {3.798465545366406*^9, 
   3.798465554896055*^9}, {3.798465588644348*^9, 3.798465593263756*^9}, {
   3.7984656357091093`*^9, 3.798465685862213*^9}, {3.798465719591737*^9, 
   3.798465783907195*^9}, {3.798465820832341*^9, 3.798465927875478*^9}, {
   3.7984659807365*^9, 3.798466021865834*^9}, {3.7984661228692017`*^9, 
   3.798466146299827*^9}, {3.798466184884881*^9, 3.798466222626459*^9}, {
   3.798466267162258*^9, 3.79846628757992*^9}, {3.798466356292162*^9, 
   3.798466428689186*^9}, {3.79846648345074*^9, 3.7984664837944393`*^9}, {
   3.798466522452765*^9, 3.7984665608898973`*^9}, {3.7984666575599213`*^9, 
   3.798466666886565*^9}, {3.79846674782364*^9, 3.798466841486999*^9}, {
   3.798466873418109*^9, 3.7984669978678293`*^9}, {3.7984670360837812`*^9, 
   3.798467272681131*^9}, {3.798467312468*^9, 3.798467313853217*^9}, {
   3.798467398518715*^9, 3.7984676850288963`*^9}, {3.798476687139263*^9, 
   3.798476700923778*^9}, {3.798476807701693*^9, 3.798476862795442*^9}, {
   3.7984769109830933`*^9, 3.79847696509823*^9}, {3.798477038624679*^9, 
   3.798477068323441*^9}, {3.7984772415943604`*^9, 3.798477648405922*^9}, {
   3.7984777276212482`*^9, 3.798477775450346*^9}, {3.798477961182364*^9, 
   3.798477965203803*^9}, {3.798478010591714*^9, 3.798478011599378*^9}, 
   3.798478049396743*^9, {3.798479321534265*^9, 3.798479334259774*^9}, {
   3.7984793710127363`*^9, 3.798479374018895*^9}, {3.79847970846793*^9, 
   3.798479721384795*^9}, {3.798479845522182*^9, 3.7984798474823523`*^9}, {
   3.7984800359958773`*^9, 3.7984801915431423`*^9}, {3.798481036663875*^9, 
   3.7984810426453342`*^9}, {3.798481086998745*^9, 3.798481102468782*^9}, {
   3.7984820351408033`*^9, 3.798482040029399*^9}, {3.798482089123083*^9, 
   3.7984820896216497`*^9}, {3.798482120441415*^9, 3.798482128553738*^9}, {
   3.7984822544842997`*^9, 3.7984822826025543`*^9}, {3.798482339578558*^9, 
   3.798482380978169*^9}, {3.7984826559493732`*^9, 3.7984827795395613`*^9}, {
   3.7984828953699713`*^9, 3.7984829029619627`*^9}, {3.798483160428296*^9, 
   3.798483163664879*^9}, {3.798483248479954*^9, 3.798483248600547*^9}, {
   3.7984848390192327`*^9, 3.798484866815434*^9}, {3.798484937163837*^9, 
   3.79848494732159*^9}, {3.798485114631564*^9, 3.798485210152463*^9}, {
   3.798485276529567*^9, 3.798485307837109*^9}, {3.798485350207589*^9, 
   3.798485370157843*^9}, {3.798485673096676*^9, 3.798485688257688*^9}, {
   3.7984858424446993`*^9, 3.798485903952132*^9}, {3.798485962120577*^9, 
   3.79848597307551*^9}, {3.79848605037988*^9, 3.798486087494125*^9}, 
   3.798486119416306*^9, {3.798486175707794*^9, 3.798486178938902*^9}, {
   3.798486218281995*^9, 3.798486250749906*^9}, {3.7984868799519787`*^9, 
   3.798486888314849*^9}, {3.7984869801909313`*^9, 3.7984871265160627`*^9}, {
   3.798487195666397*^9, 3.798487218243433*^9}, {3.798487472386701*^9, 
   3.79848756419258*^9}, {3.798487607231819*^9, 3.7984876185284023`*^9}, {
   3.7984878450455513`*^9, 3.798487986472563*^9}, {3.798488164150963*^9, 
   3.798488221838728*^9}, {3.7984882525900583`*^9, 3.798488258041306*^9}, {
   3.7984895848665857`*^9, 3.798489676868474*^9}, {3.798489737207666*^9, 
   3.798489832488142*^9}, {3.798489897826063*^9, 3.798489901448093*^9}, {
   3.7984900108180447`*^9, 3.798490015274364*^9}, {3.7984901456115923`*^9, 
   3.798490155554431*^9}, {3.798490278977962*^9, 3.798490279264873*^9}, {
   3.798490432857244*^9, 3.798490433613854*^9}, {3.798490726098015*^9, 
   3.7984907386436253`*^9}, {3.7984908217907476`*^9, 3.798490821919381*^9}, {
   3.798490859403717*^9, 3.7984908853289223`*^9}, {3.798491020688251*^9, 
   3.798491173459021*^9}, {3.79849135171312*^9, 3.79849137412444*^9}, 
   3.798491525685916*^9, {3.7984917114870167`*^9, 3.798491763470786*^9}, {
   3.798491831337308*^9, 3.7984918588129253`*^9}, {3.7984918973568897`*^9, 
   3.7984918999753647`*^9}, {3.7984983523810472`*^9, 3.798498421381658*^9}, {
   3.798498508349725*^9, 3.798498600931664*^9}, 3.798498654388371*^9, {
   3.7984987218709*^9, 3.7984988651830273`*^9}, {3.798498933918352*^9, 
   3.7984989343769484`*^9}, {3.798498988203203*^9, 3.7984990360409718`*^9}, {
   3.798499067805657*^9, 3.798499191454617*^9}, {3.7984992595714273`*^9, 
   3.7984993298825083`*^9}, {3.798499363829094*^9, 3.798499381663472*^9}, {
   3.798499449227455*^9, 3.7984995109583693`*^9}, 3.7984995985322742`*^9, {
   3.798499632469791*^9, 3.7984996592050657`*^9}, {3.798499691829007*^9, 
   3.798499701870729*^9}, {3.7984997874713707`*^9, 3.798499790517054*^9}, {
   3.798499908118219*^9, 3.7984999309888363`*^9}, {3.79850006736559*^9, 
   3.7985001146952763`*^9}, {3.798500146760964*^9, 3.798500154876705*^9}, {
   3.798500187113555*^9, 3.798500189276709*^9}, {3.798500274177257*^9, 
   3.798500275859585*^9}, {3.7985003088481073`*^9, 3.7985003575835953`*^9}, {
   3.798500611049509*^9, 3.798500625521016*^9}, {3.798500730581933*^9, 
   3.798500763547316*^9}, {3.798501111631423*^9, 3.798501119522558*^9}, {
   3.7985012201917763`*^9, 3.798501523243391*^9}, {3.798501567641844*^9, 
   3.798501578472139*^9}, {3.798501614809306*^9, 3.7985016158248777`*^9}, {
   3.798501763498493*^9, 3.798501813413878*^9}, {3.7985019321185503`*^9, 
   3.798501938151422*^9}, {3.798502033872991*^9, 3.798502071535136*^9}, {
   3.798502119371101*^9, 3.798502131204858*^9}, {3.798503554096785*^9, 
   3.798503577758412*^9}, {3.798503626139173*^9, 3.798503626504896*^9}, {
   3.798503674642322*^9, 3.798503689506777*^9}, {3.79850382143865*^9, 
   3.798503886006505*^9}, {3.798504096169243*^9, 3.7985041266183357`*^9}, {
   3.7985041589520206`*^9, 3.798504314805407*^9}, {3.7985044082782917`*^9, 
   3.798504523439351*^9}, {3.798504563188635*^9, 3.7985046021471024`*^9}, {
   3.798504655136767*^9, 3.798504671048925*^9}, {3.7985049266322937`*^9, 
   3.798504937983842*^9}, {3.79850496921665*^9, 3.798505054780527*^9}, {
   3.798505097381237*^9, 3.79850518030965*^9}, {3.7985052619407187`*^9, 
   3.798505294636907*^9}, {3.7985053317778378`*^9, 3.7985053475892773`*^9}, {
   3.798505401149796*^9, 3.7985054340569773`*^9}, {3.79850585640265*^9, 
   3.798505868233499*^9}, {3.79850592598759*^9, 3.7985059484477377`*^9}, {
   3.798506272050661*^9, 3.7985063170337687`*^9}, 3.798506437251975*^9, {
   3.798507122714369*^9, 3.798507315180367*^9}, {3.7985073760734167`*^9, 
   3.7985073858165913`*^9}, {3.798507460313572*^9, 3.798507488668181*^9}, {
   3.798507629800605*^9, 3.7985076301545067`*^9}, {3.798507865163118*^9, 
   3.798507894018363*^9}, {3.798508023714259*^9, 3.798508075801124*^9}, {
   3.798508167084242*^9, 3.798508177419717*^9}, {3.798508227634513*^9, 
   3.798508298205112*^9}, {3.7985083294664717`*^9, 3.798508347675976*^9}, {
   3.798508467247409*^9, 3.7985085140559683`*^9}, {3.798508582540552*^9, 
   3.7985086088707533`*^9}, {3.798508668776723*^9, 3.7985087864684467`*^9}, {
   3.798508852175157*^9, 3.798508867182311*^9}, {3.798508904374316*^9, 
   3.7985089122219877`*^9}, {3.798508957854817*^9, 3.798509057452633*^9}, 
   3.7985091283107853`*^9, {3.7985091606088257`*^9, 3.7985091612163343`*^9}, {
   3.7985091974614773`*^9, 3.798509233448162*^9}, {3.798509263772647*^9, 
   3.7985095305572042`*^9}, {3.79850957345464*^9, 3.798509606544483*^9}, 
   3.7985096676873417`*^9, {3.798509697908477*^9, 3.798509767940063*^9}, {
   3.79850987162257*^9, 3.79850987543202*^9}, 3.798509921157729*^9, {
   3.7985099690062857`*^9, 3.7985099888432903`*^9}, {3.798510065443277*^9, 
   3.798510065907393*^9}, {3.79851010331531*^9, 3.798510105959674*^9}, {
   3.798510140058868*^9, 3.7985101779080753`*^9}, {3.7985102372351437`*^9, 
   3.7985102798696632`*^9}, {3.798510334929576*^9, 3.7985103735787582`*^9}, {
   3.7985105656184053`*^9, 3.798510565739843*^9}, {3.7985106274371243`*^9, 
   3.7985106535698233`*^9}, {3.798511057821373*^9, 3.798511130064452*^9}, {
   3.798511180821591*^9, 3.798511188292523*^9}, {3.798511226945044*^9, 
   3.798511300682208*^9}, {3.798511381008326*^9, 3.798511414309457*^9}, 
   3.798511631095394*^9, {3.7985116839830017`*^9, 3.798511792659602*^9}, {
   3.798511872592987*^9, 3.798511945291827*^9}, 3.7985120489338512`*^9, {
   3.798512158707844*^9, 3.798512164288423*^9}, {3.798512298791086*^9, 
   3.7985123347695217`*^9}, 3.798512451446609*^9, {3.798512815960513*^9, 
   3.798512822773136*^9}, {3.7985128886524897`*^9, 3.798513012324347*^9}, {
   3.7985130630605993`*^9, 3.7985130972847*^9}, {3.798513439370038*^9, 
   3.798513533809505*^9}, {3.798513699170727*^9, 3.798513748471754*^9}, {
   3.798513784177931*^9, 3.798513790582657*^9}, {3.798513828617772*^9, 
   3.798513833903303*^9}, {3.798513869324435*^9, 3.798513885285062*^9}, {
   3.798513998855241*^9, 3.798514028127039*^9}, {3.7985140604136963`*^9, 
   3.798514118298067*^9}, {3.798514165156356*^9, 3.7985141654226303`*^9}, {
   3.798514870468193*^9, 3.7985148742309504`*^9}, 3.7985149740614653`*^9, {
   3.798515047496278*^9, 3.7985150604999247`*^9}, {3.7985584782054777`*^9, 
   3.798558479391972*^9}, {3.7985585799605217`*^9, 3.79855865067*^9}, 
   3.798558753582758*^9, {3.7985605820170193`*^9, 3.798560613265978*^9}, {
   3.798560716287291*^9, 3.7985607509048777`*^9}, {3.7985608655432787`*^9, 
   3.7985608669935617`*^9}, {3.798560931045698*^9, 3.798560961580085*^9}, {
   3.798561025623522*^9, 3.798561059087715*^9}, {3.7985610978511353`*^9, 
   3.7985611006041327`*^9}, {3.798561241295713*^9, 3.798561274075206*^9}, {
   3.798561334391942*^9, 3.7985613572525063`*^9}, {3.798561413225657*^9, 
   3.798561490179358*^9}, 3.798561584902053*^9, {3.798561745114451*^9, 
   3.798561820328329*^9}, {3.798562038343236*^9, 3.798562076852788*^9}, {
   3.7985621320719547`*^9, 3.798562140987052*^9}, {3.798562268413392*^9, 
   3.798562269379981*^9}, {3.798562646792481*^9, 3.798562656660726*^9}, {
   3.7985627090102663`*^9, 3.798562710865302*^9}, {3.7985627602546673`*^9, 
   3.79856283246988*^9}, {3.798562998808131*^9, 3.798563169642992*^9}, {
   3.798563299711677*^9, 3.798563313352798*^9}, {3.798563493670773*^9, 
   3.798563510994198*^9}, {3.798563609880782*^9, 3.7985636100024557`*^9}, {
   3.798563665857658*^9, 3.798563699371574*^9}, {3.798563742334742*^9, 
   3.798563745483474*^9}, {3.798563843617014*^9, 3.798563876630446*^9}, {
   3.7985639458550863`*^9, 3.798563947514821*^9}, {3.7985639976465673`*^9, 
   3.798563997847527*^9}, {3.798564088156837*^9, 3.7985640924435673`*^9}, {
   3.798566412605784*^9, 3.798566422563704*^9}, {3.7985671241962013`*^9, 
   3.7985671277805758`*^9}, {3.798567163604643*^9, 3.798567188979539*^9}, {
   3.7985672346986647`*^9, 3.7985672352069473`*^9}, 3.7985672701068077`*^9, {
   3.7985673601225767`*^9, 3.7985674160906677`*^9}, {3.7985678922587767`*^9, 
   3.798567920272539*^9}, {3.79856804527549*^9, 3.798568200614142*^9}, 
   3.798568297717519*^9, {3.7985683364442863`*^9, 3.79856837624314*^9}, {
   3.798568413101735*^9, 3.798568414618012*^9}, {3.798568449406754*^9, 
   3.7985684522203703`*^9}, {3.798568483908215*^9, 3.798568484028397*^9}, {
   3.798568549904852*^9, 3.7985685683417797`*^9}, 3.7985686318384113`*^9, {
   3.7985687179258537`*^9, 3.798568734850936*^9}, {3.7985692833500423`*^9, 
   3.798569375187039*^9}, {3.7985697529374533`*^9, 3.798569836814311*^9}, {
   3.798569919856688*^9, 3.798569919966982*^9}, 3.798570210059963*^9, {
   3.7985703890465*^9, 3.798570447750114*^9}, {3.798570485909172*^9, 
   3.798570545249208*^9}, {3.798570587964212*^9, 3.7985706492822733`*^9}, 
   3.798570705207204*^9, {3.798570853255508*^9, 3.798570943277602*^9}, {
   3.79857103112842*^9, 3.798571031398922*^9}, {3.798571092044044*^9, 
   3.798571127354044*^9}, {3.7985720136701183`*^9, 3.798572025131681*^9}, {
   3.798572135108521*^9, 3.7985721389091797`*^9}, {3.79857229618579*^9, 
   3.798572369602985*^9}, {3.79857278042625*^9, 3.798572925913004*^9}, {
   3.79857301497466*^9, 3.798573040513074*^9}, {3.798573201747279*^9, 
   3.7985732757029467`*^9}, {3.7985733514710693`*^9, 3.798573393629509*^9}, {
   3.798573714940133*^9, 3.7985737155663443`*^9}, 3.798574887195299*^9, {
   3.798575082268393*^9, 3.798575102360167*^9}, {3.798575167069421*^9, 
   3.798575170530532*^9}, {3.7985752055558643`*^9, 3.79857537770533*^9}, {
   3.798575448121233*^9, 3.798575462793694*^9}, {3.798575566155747*^9, 
   3.79857557396732*^9}, {3.798575637697955*^9, 3.798575648804059*^9}, {
   3.798575737457983*^9, 3.798575745613035*^9}, {3.798578058196487*^9, 
   3.798578159228162*^9}, {3.798578197467412*^9, 3.798578256363235*^9}, {
   3.798578301343877*^9, 3.798578301659193*^9}, 3.7985784431540318`*^9, {
   3.798578482041613*^9, 3.7985784888843803`*^9}, {3.798579358283774*^9, 
   3.798579358501067*^9}, {3.798579547595351*^9, 3.7985795520897627`*^9}, {
   3.798579715882257*^9, 3.798579868503124*^9}, {3.798580089686208*^9, 
   3.798580130737986*^9}, {3.7985801919973307`*^9, 3.7985803192844667`*^9}, {
   3.798580377181932*^9, 3.798580381427595*^9}, {3.798580414010322*^9, 
   3.798580538555599*^9}, 3.798580608445653*^9, {3.79858071787437*^9, 
   3.798580755107621*^9}, {3.79858081507454*^9, 3.798580815295826*^9}, 
   3.798580938403975*^9, {3.7985810007882*^9, 3.798581094756748*^9}, {
   3.798581616666004*^9, 3.798581691964086*^9}, {3.798582208312347*^9, 
   3.798582209669158*^9}, {3.7985822556270113`*^9, 3.798582295766324*^9}, {
   3.798582348026782*^9, 3.798582389829616*^9}, {3.798583378122527*^9, 
   3.798583387737029*^9}, {3.798583851689921*^9, 3.798583914070179*^9}, {
   3.798584275101596*^9, 3.798584297017199*^9}, {3.798584464968523*^9, 
   3.798584467235325*^9}, {3.798584503331533*^9, 3.798584517058496*^9}, {
   3.798584663089057*^9, 3.798584663934065*^9}, {3.798584779852006*^9, 
   3.7985848355941753`*^9}, {3.798585428841419*^9, 3.798585437465207*^9}, {
   3.798585483979724*^9, 3.7985855012537603`*^9}, 3.798585555964211*^9, {
   3.798585597863356*^9, 3.798585867374927*^9}, 3.7985861051805162`*^9, {
   3.798586757806395*^9, 3.798586919713152*^9}, {3.7985870068693027`*^9, 
   3.79858700731083*^9}, {3.79858711058539*^9, 3.798587118691451*^9}, {
   3.798587163352995*^9, 3.798587164018573*^9}, {3.798587404431715*^9, 
   3.7985874071899557`*^9}, {3.798587442570875*^9, 3.798587444365481*^9}, {
   3.798588425587617*^9, 3.798588458680739*^9}, {3.7985885209726267`*^9, 
   3.7985885229885807`*^9}, {3.798588559420093*^9, 3.798588658381925*^9}, {
   3.798588738690057*^9, 3.798588739173275*^9}, {3.798588838775611*^9, 
   3.798589011162073*^9}, {3.7985890659039707`*^9, 3.798589111705596*^9}, {
   3.798589159479129*^9, 3.7985891926121817`*^9}, {3.7985892354985332`*^9, 
   3.798589236302087*^9}, {3.7985892699635*^9, 3.79858930857583*^9}, {
   3.798589348722745*^9, 3.798589461186996*^9}, {3.798589519398013*^9, 
   3.798589530298562*^9}, {3.798589565672614*^9, 3.798589717893612*^9}, {
   3.798590370293339*^9, 3.798590437710546*^9}, {3.7985904700762463`*^9, 
   3.7985905009754887`*^9}, {3.798590592043694*^9, 3.798590630566902*^9}, {
   3.798590787763669*^9, 3.798590788536845*^9}, {3.79859084944729*^9, 
   3.798590891162187*^9}, {3.798590953199725*^9, 3.798590994030389*^9}, {
   3.798591026883819*^9, 3.798591044572631*^9}, {3.7985911048585587`*^9, 
   3.798591146344285*^9}, 3.798591202504476*^9, {3.798591233680509*^9, 
   3.798591251359427*^9}, {3.798591300554181*^9, 3.798591301498155*^9}, {
   3.798591345236341*^9, 3.798591345346813*^9}, {3.7985914720011053`*^9, 
   3.798591482981444*^9}, 3.798591531616297*^9, {3.79859202533585*^9, 
   3.798592080056851*^9}, {3.7985921182571774`*^9, 3.7985921203650837`*^9}, {
   3.798592152258182*^9, 3.7985923837214127`*^9}, {3.79859243218036*^9, 
   3.798592435985497*^9}, {3.798592489460354*^9, 3.798592500050551*^9}, 
   3.798592590870329*^9, {3.798592648685575*^9, 3.7985927542116137`*^9}, {
   3.798592805515478*^9, 3.798592840052472*^9}, {3.798592892845209*^9, 
   3.7985929049367037`*^9}, {3.798593060824276*^9, 3.79859314918532*^9}, {
   3.798593211516355*^9, 3.7985932291389847`*^9}, {3.798593347592277*^9, 
   3.798593457934168*^9}, 3.798593490425666*^9, {3.798595682968813*^9, 
   3.798595684521516*^9}, {3.798635266148045*^9, 3.798635311144068*^9}, {
   3.7986353650922003`*^9, 3.7986353691786213`*^9}, {3.79863543666593*^9, 
   3.798635549460084*^9}, {3.798635595905241*^9, 3.798635655384836*^9}, {
   3.798635699932559*^9, 3.7986358492523746`*^9}, {3.798635888868243*^9, 
   3.7986361413452578`*^9}, {3.798636229523053*^9, 3.798636391643106*^9}, 
   3.798636454431014*^9, {3.7986365180441227`*^9, 3.7986366261007843`*^9}, {
   3.798636852999359*^9, 3.798637026627384*^9}, {3.798637065157135*^9, 
   3.798637134956571*^9}, {3.798637181757008*^9, 3.798637313330758*^9}, {
   3.798637372316584*^9, 3.798637421530347*^9}, {3.79863747569661*^9, 
   3.798637477978367*^9}, {3.798637541555941*^9, 3.7986376640327797`*^9}, {
   3.7986377275977507`*^9, 3.798637768012537*^9}, {3.798637805289074*^9, 
   3.798637822181422*^9}, {3.798637878410948*^9, 3.79863798289655*^9}, {
   3.798638017970805*^9, 3.798638031418399*^9}, {3.7986380827357693`*^9, 
   3.7986381592563477`*^9}, {3.798638233342526*^9, 3.798638298468762*^9}, 
   3.798641225654688*^9, {3.798641302276588*^9, 3.798641302424861*^9}, {
   3.798641361005704*^9, 3.798641362893632*^9}, {3.7986415477770863`*^9, 
   3.798641575967627*^9}, {3.7986420846369877`*^9, 3.798642159322171*^9}, {
   3.79864228462706*^9, 3.7986422855762053`*^9}, {3.7986423160279493`*^9, 
   3.7986423311897373`*^9}, {3.798642367468186*^9, 3.798642394293058*^9}, {
   3.7986424412025843`*^9, 3.798642508775703*^9}, {3.798642541446013*^9, 
   3.7986425917412643`*^9}, {3.7986430185672417`*^9, 3.798643038940568*^9}, {
   3.798643079016815*^9, 3.79864308632053*^9}, {3.798643116387951*^9, 
   3.7986435954473343`*^9}, {3.7986436291811666`*^9, 3.798643663388979*^9}, {
   3.798643757036868*^9, 3.79864381118559*^9}, {3.7986438470268307`*^9, 
   3.798643867670494*^9}, {3.79864397875646*^9, 3.7986439824607277`*^9}, {
   3.7986441586005173`*^9, 3.798644158947652*^9}, {3.7986442853981857`*^9, 
   3.7986443683205442`*^9}, {3.798644398606077*^9, 3.798644589886286*^9}, {
   3.798646833825674*^9, 3.798646858054652*^9}, {3.798646970487441*^9, 
   3.79864708059088*^9}, {3.798647151235409*^9, 3.798647209478866*^9}, {
   3.7986475022608633`*^9, 3.798647541420559*^9}, {3.79864758401447*^9, 
   3.798647699916443*^9}, {3.798648198829211*^9, 3.798648266410817*^9}, {
   3.798648370891604*^9, 3.798648376709345*^9}, {3.798648461783331*^9, 
   3.798648528270503*^9}, {3.798650882027721*^9, 3.7986509044388113`*^9}, {
   3.798651068654941*^9, 3.79865114602632*^9}, {3.798651185904624*^9, 
   3.7986512102825413`*^9}, {3.798651246209701*^9, 3.798651389844172*^9}, {
   3.798651459862513*^9, 3.798651498348661*^9}, {3.798651569168068*^9, 
   3.798651571361574*^9}, {3.798651800132563*^9, 3.798651808032311*^9}, {
   3.798651839248567*^9, 3.798651839459375*^9}, {3.7986518804334593`*^9, 
   3.798651902849141*^9}, {3.798651934729095*^9, 3.798651941858762*^9}, {
   3.798652012155414*^9, 3.798652014129471*^9}, 3.798652154364645*^9, {
   3.798652226393025*^9, 3.7986524048606253`*^9}, {3.7986524413384047`*^9, 
   3.798652444244095*^9}, {3.798652490162709*^9, 3.798652523180771*^9}, {
   3.7986525569082623`*^9, 3.798652600029307*^9}, {3.7986526311476707`*^9, 
   3.7986526374514103`*^9}, {3.7986528112064257`*^9, 
   3.7986528554465933`*^9}, {3.798653475792056*^9, 3.798653476963825*^9}, {
   3.798653530949667*^9, 3.798653609325592*^9}, {3.7986536429355717`*^9, 
   3.798653828540258*^9}, {3.7986541389127493`*^9, 3.798654160847769*^9}, {
   3.798654217735059*^9, 3.798654280403592*^9}, {3.798656824972228*^9, 
   3.798656967225891*^9}, {3.798657019575942*^9, 3.798657065167655*^9}, {
   3.798657513718902*^9, 3.7986575141291637`*^9}, {3.7986575931579742`*^9, 
   3.798657599955434*^9}, 3.7986579776017427`*^9, {3.798658042366171*^9, 
   3.798658042873787*^9}, {3.798658366598291*^9, 3.798658388327319*^9}, {
   3.798658576494035*^9, 3.798658578037937*^9}, {3.7986586147269506`*^9, 
   3.79865863221189*^9}, {3.798658701822975*^9, 3.798658712619059*^9}, {
   3.798658813465684*^9, 3.7986588997181892`*^9}, 3.798659069994883*^9, {
   3.798659110082459*^9, 3.798659136360021*^9}, {3.798659191381262*^9, 
   3.798659263170789*^9}, {3.7986597957580338`*^9, 3.798659808346203*^9}, {
   3.798659932125971*^9, 3.7986599604097013`*^9}, {3.798659991405315*^9, 
   3.7986600347300043`*^9}, {3.7986602946530733`*^9, 3.798660332070509*^9}, {
   3.798660467977744*^9, 3.798660556397903*^9}, {3.798660679938387*^9, 
   3.798660692233994*^9}, {3.7986607366225348`*^9, 3.798660821498118*^9}, {
   3.798660881300971*^9, 3.798660927747466*^9}, {3.798661482555311*^9, 
   3.798661600229279*^9}, {3.7986617628046513`*^9, 3.798661785105509*^9}, {
   3.798661836912443*^9, 3.798661850605217*^9}, {3.7986625134065*^9, 
   3.798662519678364*^9}, {3.798662648616069*^9, 3.798662669867435*^9}, {
   3.798662715610866*^9, 3.798662715765526*^9}, {3.798663107593213*^9, 
   3.7986631109547453`*^9}, {3.7986632966324177`*^9, 3.79866330954739*^9}, {
   3.7986633450298986`*^9, 3.7986633451625977`*^9}, {3.798666467857594*^9, 
   3.798666484847886*^9}, {3.79866654516823*^9, 3.7986665497973957`*^9}, {
   3.798669665785228*^9, 3.7986697142584543`*^9}, {3.798669752009411*^9, 
   3.798669753513475*^9}, {3.7986699938242617`*^9, 3.798670023176322*^9}, {
   3.7986706755599957`*^9, 3.7986706756752863`*^9}, {3.798670926126486*^9, 
   3.798670958026124*^9}, {3.7986710641151667`*^9, 3.79867106427072*^9}, {
   3.798671230560138*^9, 3.798671230841405*^9}, {3.7986718844591136`*^9, 
   3.7986719034797792`*^9}, {3.7986719474142084`*^9, 3.798671962842887*^9}, {
   3.7986720245571284`*^9, 3.7986720266428947`*^9}, {3.7986720762914753`*^9, 
   3.798672080877801*^9}, {3.7986723854242735`*^9, 3.798672451373521*^9}, {
   3.79867250755029*^9, 3.7986726015502663`*^9}, {3.798672664275004*^9, 
   3.798672666517914*^9}, {3.798672705530569*^9, 3.798672734267178*^9}, {
   3.7986727673072214`*^9, 3.798672867294219*^9}, {3.798672909275131*^9, 
   3.798672973167613*^9}, {3.7986731159738903`*^9, 3.798673171808812*^9}, {
   3.7986732898774023`*^9, 3.798673296693078*^9}, {3.798673455704075*^9, 
   3.798673456995118*^9}, {3.7987145013605022`*^9, 3.798714628699337*^9}, {
   3.798715319172721*^9, 3.798715389917285*^9}, {3.798715424275696*^9, 
   3.798715424641611*^9}, {3.798716060386519*^9, 3.798716076890386*^9}, {
   3.798716118022903*^9, 3.798716202743436*^9}, {3.798716599921887*^9, 
   3.7987166004297037`*^9}, {3.798716869647047*^9, 3.79871688229569*^9}, 
   3.798717213467885*^9, 3.798717344818769*^9, {3.798717384124167*^9, 
   3.798717405930027*^9}, 3.798717516655609*^9, {3.798717653842382*^9, 
   3.798717677911866*^9}, {3.798718102759472*^9, 3.798718140334641*^9}, {
   3.798718321008903*^9, 3.79871832362164*^9}, {3.7987184122977543`*^9, 
   3.79871841306511*^9}, {3.7987184731200047`*^9, 3.7987185397358227`*^9}, {
   3.798718578973123*^9, 3.7987186183901167`*^9}, {3.7987186565372047`*^9, 
   3.7987186669154587`*^9}, {3.798718787686254*^9, 3.798718791334703*^9}, {
   3.7987189483418283`*^9, 3.798718964224153*^9}, {3.798719084722569*^9, 
   3.7987190849174023`*^9}, 3.7987191694377317`*^9, {3.798719258496151*^9, 
   3.798719266119439*^9}, {3.79871937754218*^9, 3.798719387258624*^9}, {
   3.798719537564364*^9, 3.798719539957349*^9}, {3.7987195729361258`*^9, 
   3.798719573075452*^9}, {3.7987196122527857`*^9, 3.798719612382154*^9}, {
   3.7987197192364893`*^9, 3.798719738258916*^9}, {3.798719778606862*^9, 
   3.798719778751068*^9}, {3.798719840139291*^9, 3.798719849939496*^9}, {
   3.79872012537333*^9, 3.798720161619767*^9}, {3.7987202507241898`*^9, 
   3.798720309838058*^9}, {3.798721236272479*^9, 3.798721268782852*^9}, 
   3.7987213252993517`*^9, {3.7987222353653517`*^9, 3.798722239604074*^9}, {
   3.798722345665914*^9, 3.798722353900198*^9}, {3.798744183043661*^9, 
   3.798744185072192*^9}, {3.798744273569581*^9, 3.7987443162675943`*^9}, {
   3.798744347070331*^9, 3.79874435192172*^9}, {3.798744396330266*^9, 
   3.79874439647108*^9}, {3.798744428787166*^9, 3.798744534516773*^9}, {
   3.798745032499617*^9, 3.798745052588655*^9}, {3.798745244779786*^9, 
   3.7987452501392183`*^9}, {3.798749044825732*^9, 3.798749105100061*^9}, {
   3.798749135198595*^9, 3.7987491544096003`*^9}, {3.798754884161036*^9, 
   3.798754944360111*^9}, {3.798754975414607*^9, 3.79875502463962*^9}, {
   3.7987550556485*^9, 3.798755110465761*^9}, {3.798755376368444*^9, 
   3.798755376509576*^9}, {3.798755491171736*^9, 3.798755494675119*^9}, {
   3.7987617944232683`*^9, 3.798761817497786*^9}, 3.7987619049535503`*^9, 
   3.7987619559851923`*^9, {3.798762031903164*^9, 3.798762072541378*^9}, {
   3.7987624394976797`*^9, 3.7987624436216784`*^9}, {3.798763069414435*^9, 
   3.798763079007448*^9}, {3.798818008605674*^9, 3.7988180099767523`*^9}, {
   3.798819112739867*^9, 3.798819113914362*^9}, {3.798819653631863*^9, 
   3.79881967617811*^9}, {3.798820058891225*^9, 3.798820172778295*^9}, {
   3.7988203196039953`*^9, 3.7988203219878283`*^9}, {3.798820847386011*^9, 
   3.798820847498726*^9}, {3.798821241152347*^9, 3.79882124722199*^9}, {
   3.798821416597567*^9, 3.7988214259113073`*^9}, {3.7988215236846952`*^9, 
   3.7988215687443027`*^9}, {3.798821620446022*^9, 3.798821624082279*^9}, {
   3.798821740722707*^9, 3.798821748739327*^9}, {3.798821778983637*^9, 
   3.798821780153575*^9}, {3.798821889658472*^9, 3.798821894437786*^9}, {
   3.798822009832016*^9, 3.798822032893518*^9}, {3.7988220632918787`*^9, 
   3.798822144809867*^9}, {3.798822178647719*^9, 3.798822267233551*^9}, {
   3.798822309740213*^9, 3.79882232834385*^9}, {3.798825323876058*^9, 
   3.7988253554522057`*^9}, {3.798825394484305*^9, 3.798825414144313*^9}, {
   3.798825506624283*^9, 3.7988258338867083`*^9}, {3.798826156329925*^9, 
   3.798826279822515*^9}, {3.7988263159761066`*^9, 3.7988264007682953`*^9}, {
   3.79882651476689*^9, 3.7988265152264023`*^9}, {3.798826566123411*^9, 
   3.798826613358917*^9}, {3.798826651116564*^9, 3.798826657246784*^9}, {
   3.798827059068438*^9, 3.798827096117282*^9}, {3.798827131917191*^9, 
   3.798827187679551*^9}, {3.798827691270825*^9, 3.798827692253277*^9}, 
   3.798827965157893*^9, {3.7988280135849047`*^9, 3.798828029408856*^9}, {
   3.798828079136552*^9, 3.7988281047010927`*^9}, {3.7988281767546387`*^9, 
   3.798828189314096*^9}, {3.798828271287142*^9, 3.798828272354239*^9}, {
   3.79882831695752*^9, 3.79882837075097*^9}, {3.798828496956637*^9, 
   3.798828525702627*^9}, {3.798828738092476*^9, 3.798828747710188*^9}, {
   3.79882886010221*^9, 3.798828861069552*^9}, {3.798828893592239*^9, 
   3.798828921333085*^9}, {3.798828974321247*^9, 3.798829060034176*^9}, {
   3.79882910409558*^9, 3.798829119006464*^9}, {3.798829285386011*^9, 
   3.79882937562341*^9}, {3.798829424999195*^9, 3.7988295160578814`*^9}, 
   3.7988297649508953`*^9, {3.7988298785489597`*^9, 3.798829959306326*^9}, {
   3.7988299992744513`*^9, 3.798830022431573*^9}, {3.7988301144131327`*^9, 
   3.798830212778372*^9}, {3.798830464215966*^9, 3.79883046526234*^9}, {
   3.798830663123844*^9, 3.798830669760544*^9}, {3.798830709108639*^9, 
   3.7988307114487133`*^9}, {3.7988307719811287`*^9, 
   3.7988307781439667`*^9}, {3.798830848423061*^9, 3.798830883896852*^9}, {
   3.798830927160823*^9, 3.798830932711034*^9}, {3.7988310078338137`*^9, 
   3.798831066894175*^9}, {3.7988312676032953`*^9, 3.798831284339794*^9}, 
   3.798831383681203*^9, {3.7988315518817463`*^9, 3.798831580410227*^9}, {
   3.798831662008953*^9, 3.798831743980163*^9}, {3.798831816118277*^9, 
   3.798831818434278*^9}, {3.798831869578103*^9, 3.798831888223795*^9}, {
   3.798831931505878*^9, 3.7988319958616962`*^9}, {3.798832026516293*^9, 
   3.798832097999724*^9}, {3.7988321571476383`*^9, 3.798832164553754*^9}, {
   3.79883223395107*^9, 3.798832236534051*^9}, {3.798832540316448*^9, 
   3.798832543527629*^9}, {3.798832594051552*^9, 3.798832597187138*^9}, {
   3.798832821320798*^9, 3.798832838864352*^9}, {3.7988328713209143`*^9, 
   3.79883287429282*^9}, {3.798833614646536*^9, 3.798833707463787*^9}, {
   3.7988338329619102`*^9, 3.798833834979719*^9}, {3.798833887413225*^9, 
   3.798833889856098*^9}, {3.798834052451833*^9, 3.798834086922125*^9}, {
   3.798834427981592*^9, 3.798834495752969*^9}, {3.7988348591665792`*^9, 
   3.79883487376688*^9}, {3.798835072658825*^9, 3.798835091536285*^9}, {
   3.7988355528043127`*^9, 3.798835595271081*^9}, {3.798835764268071*^9, 
   3.798835771736061*^9}, {3.7988364168577633`*^9, 3.798836435598401*^9}, {
   3.7988367889844227`*^9, 3.79883679720426*^9}, {3.79883683453227*^9, 
   3.7988368437950783`*^9}, {3.798836882925527*^9, 3.798836939526709*^9}, {
   3.798837719943437*^9, 3.798837749388961*^9}, {3.798837788739873*^9, 
   3.798837798798827*^9}, {3.798840087965411*^9, 3.798840091059091*^9}, {
   3.79884072047013*^9, 3.7988407291577463`*^9}, {3.798841615441474*^9, 
   3.798841624482628*^9}, {3.798841699181425*^9, 3.7988417202932*^9}, {
   3.798841813145566*^9, 3.798841844519761*^9}, {3.798842137872962*^9, 
   3.7988421536713047`*^9}, {3.798842275460047*^9, 3.798842301008628*^9}, {
   3.7988426987522917`*^9, 3.798842702091172*^9}, {3.798843247168391*^9, 
   3.798843303664104*^9}, {3.7988434880464983`*^9, 3.798843491139516*^9}, {
   3.798843586961482*^9, 3.798843587198662*^9}, {3.79884362007649*^9, 
   3.798843630297164*^9}, {3.798843713274543*^9, 3.798843716804419*^9}, {
   3.7988441084888067`*^9, 3.798844110532185*^9}, {3.798844143740897*^9, 
   3.798844198424597*^9}, {3.798844907701187*^9, 3.7988449098677883`*^9}, 
   3.798845062641869*^9, {3.7988451459661283`*^9, 3.7988451782080812`*^9}, {
   3.798845214093461*^9, 3.798845218782791*^9}, {3.798845300268001*^9, 
   3.7988453123608103`*^9}, {3.798847354003055*^9, 3.7988475211265783`*^9}, {
   3.798847562662636*^9, 3.798847576718973*^9}, 3.798849541837111*^9, {
   3.798849825769747*^9, 3.798849918074678*^9}, {3.798849948677973*^9, 
   3.7988499582956877`*^9}, {3.798849989883512*^9, 3.798850002220644*^9}, {
   3.7988500556690407`*^9, 3.798850099406013*^9}, {3.798850350465003*^9, 
   3.798850392528281*^9}, {3.79885051536703*^9, 3.798850532557548*^9}, {
   3.798850616213756*^9, 3.79885064861618*^9}, {3.798850917680313*^9, 
   3.7988509263911963`*^9}, {3.798851035668395*^9, 3.7988510363214283`*^9}, {
   3.798851400932189*^9, 3.798851422397736*^9}, {3.798851695564068*^9, 
   3.798851698096158*^9}, {3.798852117370566*^9, 3.798852121354545*^9}, {
   3.798852194009357*^9, 3.7988521954129868`*^9}, {3.798852976251252*^9, 
   3.798852982421453*^9}, {3.798853016890935*^9, 3.79885301875837*^9}, {
   3.7988540234689217`*^9, 3.7988540438846483`*^9}, {3.798854142643935*^9, 
   3.798854153054961*^9}, {3.798854341137796*^9, 3.798854366769677*^9}, {
   3.79885540051632*^9, 3.798855464211948*^9}, {3.798855520949686*^9, 
   3.798855553797344*^9}, {3.79885559137642*^9, 3.798855594150503*^9}, {
   3.798856098153311*^9, 3.798856191959765*^9}, {3.798856239449057*^9, 
   3.798856242316965*^9}, {3.7988562989287167`*^9, 3.798856328958816*^9}, {
   3.7988563629908867`*^9, 3.798856363367298*^9}, {3.7988564433199463`*^9, 
   3.798856444236643*^9}, {3.798857187354877*^9, 3.798857192977231*^9}, {
   3.798857295489335*^9, 3.7988573003284483`*^9}, {3.798857367554985*^9, 
   3.7988573722953787`*^9}, {3.79885763623729*^9, 3.7988576632887487`*^9}, {
   3.798857826147827*^9, 3.7988578394023848`*^9}, {3.798902021838966*^9, 
   3.7989020239714727`*^9}, {3.798903036808085*^9, 3.7989030795377073`*^9}, {
   3.798903124637389*^9, 3.798903256293569*^9}, {3.798903947191745*^9, 
   3.79890394955451*^9}, 3.7989061262603617`*^9, {3.798906172074051*^9, 
   3.798906186546533*^9}, {3.7989063167629004`*^9, 3.798906318137568*^9}, 
   3.798906878871472*^9, {3.798907021652358*^9, 3.798907033420084*^9}, 
   3.7989070746900377`*^9, 3.798907423116094*^9, {3.798907501398992*^9, 
   3.798907530400674*^9}, {3.798907606705826*^9, 3.798907645467805*^9}, {
   3.798907810635399*^9, 3.7989078432107*^9}, {3.7989079701438627`*^9, 
   3.7989079832596903`*^9}, {3.7989121862399683`*^9, 
   3.7989121902941933`*^9}, {3.798916732591737*^9, 3.7989167703922586`*^9}, {
   3.79891686617826*^9, 3.798917033434272*^9}, {3.798917066916135*^9, 
   3.7989170910679626`*^9}, {3.798917126006534*^9, 3.798917182286508*^9}, {
   3.798917248649034*^9, 3.798917361918882*^9}, {3.798917469834343*^9, 
   3.798917469935841*^9}, {3.798917517514621*^9, 3.798917556585964*^9}, 
   3.798917654492463*^9, 3.798917698289547*^9, {3.798917739451848*^9, 
   3.798917802677964*^9}, {3.798917856685874*^9, 3.7989178930111322`*^9}, {
   3.798917927533934*^9, 3.798918010405541*^9}, {3.798918090088771*^9, 
   3.7989181234830008`*^9}, {3.798918210131675*^9, 3.798918279398199*^9}, {
   3.798918339152232*^9, 3.798918391149805*^9}, {3.798918443581172*^9, 
   3.798918455844597*^9}, {3.798918747092951*^9, 3.798918752967005*^9}, {
   3.7989206302568207`*^9, 3.798920634399251*^9}, {3.798926690493371*^9, 
   3.7989267195811462`*^9}, {3.798937333685865*^9, 3.79893735912813*^9}, {
   3.798959806888159*^9, 3.7989598101482563`*^9}, {3.7989601150145063`*^9, 
   3.798960288336134*^9}, {3.798960326073111*^9, 3.798960495250856*^9}, 
   3.798960629294199*^9, {3.798960663288371*^9, 3.798960670450576*^9}, {
   3.798960702626651*^9, 3.7989607089199343`*^9}, {3.798960782085793*^9, 
   3.7989607998511953`*^9}, {3.79896083514252*^9, 3.7989608451593037`*^9}, {
   3.798961737797213*^9, 3.7989617410693283`*^9}, {3.7989623302421923`*^9, 
   3.798962333391283*^9}, {3.798962440724387*^9, 3.798962464920836*^9}, {
   3.798983599244424*^9, 3.798983628274146*^9}, {3.798984551691483*^9, 
   3.7989845517871733`*^9}, {3.798984581799478*^9, 3.7989846060983057`*^9}, {
   3.798984693432584*^9, 3.798984709280581*^9}, {3.7989847522867727`*^9, 
   3.798984752406402*^9}, {3.798985693128429*^9, 3.798985697759885*^9}, {
   3.798985729331627*^9, 3.79898573290942*^9}, {3.7989857847822943`*^9, 
   3.798985839122862*^9}, {3.798985870711245*^9, 3.798985926720755*^9}, {
   3.7989859570351954`*^9, 3.798985958797763*^9}, {3.798986015458391*^9, 
   3.798986023568304*^9}, {3.798986284022263*^9, 3.79898647127988*^9}, {
   3.798986517398569*^9, 3.798986542217237*^9}, {3.7989865817751827`*^9, 
   3.798986619628112*^9}, {3.798986708899674*^9, 3.7989869597756147`*^9}, {
   3.798987000534671*^9, 3.798987004102672*^9}, {3.798987536178423*^9, 
   3.798987543159886*^9}, {3.798988480514298*^9, 3.798988665632642*^9}, {
   3.7989887001747828`*^9, 3.798988855224022*^9}, {3.798988887273212*^9, 
   3.798989009164053*^9}, {3.798989051171851*^9, 3.798989066010618*^9}, {
   3.7989890988669252`*^9, 3.7989891285344477`*^9}, {3.79898919453165*^9, 
   3.798989289271226*^9}, {3.79898973716994*^9, 3.7989897673665953`*^9}, {
   3.798989954876039*^9, 3.798989955629306*^9}, 3.798990264250033*^9, 
   3.7989904197846746`*^9, {3.798990539095839*^9, 3.79899053960999*^9}, 
   3.798990759483193*^9, {3.798990842327417*^9, 3.798990863728135*^9}, {
   3.798990908123515*^9, 3.798990914239843*^9}, {3.79899095938269*^9, 
   3.798990959519863*^9}, {3.7989912156492033`*^9, 3.798991246276256*^9}, {
   3.798991348981257*^9, 3.7989913490972033`*^9}, {3.798991780819187*^9, 
   3.798991930242482*^9}, {3.7989921047242928`*^9, 3.798992126972929*^9}, {
   3.7989922277388763`*^9, 3.798992229352572*^9}, {3.7989924354094353`*^9, 
   3.798992435715664*^9}, {3.798992580884534*^9, 3.7989926229782753`*^9}, {
   3.798992685158257*^9, 3.7989926854472218`*^9}, {3.798992835902828*^9, 
   3.7989928724806213`*^9}, {3.798992909121255*^9, 3.7989929762646513`*^9}, {
   3.798993133293807*^9, 3.798993149466729*^9}, {3.798993208126686*^9, 
   3.798993215988216*^9}, {3.79899326873586*^9, 3.798993293631855*^9}, {
   3.798993361298469*^9, 3.79899338124461*^9}, {3.798993604261817*^9, 
   3.798993622255865*^9}, {3.7989937976165743`*^9, 3.798993807808094*^9}, 
   3.7989938974924517`*^9, {3.7989941129624367`*^9, 3.798994213257286*^9}, 
   3.798994303555818*^9, {3.798994496406849*^9, 3.798994539892168*^9}, {
   3.798994588815428*^9, 3.7989946053095913`*^9}, {3.798994638730097*^9, 
   3.798994638842429*^9}, {3.7989947321939507`*^9, 3.7989947416503572`*^9}, {
   3.7989956979882793`*^9, 3.798995712049137*^9}, {3.798995801309106*^9, 
   3.7989958045328913`*^9}, {3.798995836885097*^9, 3.798995837310116*^9}, {
   3.799000876976281*^9, 3.7990009322075*^9}, {3.799001017295862*^9, 
   3.799001138263172*^9}, {3.799001193795335*^9, 3.799001289463953*^9}, {
   3.799001483611813*^9, 3.7990016054952927`*^9}, {3.799001668505659*^9, 
   3.79900167867834*^9}, {3.799001716026022*^9, 3.799001737974308*^9}, {
   3.7990017780664673`*^9, 3.799001779965343*^9}, {3.7990018421438007`*^9, 
   3.799001856695685*^9}, {3.799001945152528*^9, 3.7990020752362537`*^9}, {
   3.799002109790552*^9, 3.7990023550403767`*^9}, {3.799002444624825*^9, 
   3.799002465440958*^9}, {3.799002500407737*^9, 3.799002547320365*^9}, {
   3.799002603244335*^9, 3.7990026149701433`*^9}, {3.799002648894497*^9, 
   3.799002863687921*^9}, {3.799002919020245*^9, 3.7990029547653303`*^9}, {
   3.799002997791647*^9, 3.799003098543446*^9}, {3.799003170260686*^9, 
   3.799003247682247*^9}, {3.79900328796731*^9, 3.799003325210003*^9}, {
   3.799003392062045*^9, 3.799003511089788*^9}, {3.799003556574491*^9, 
   3.799003635067923*^9}, 3.7990036658563957`*^9, {3.7990037011994877`*^9, 
   3.799003761927225*^9}, {3.799003806941474*^9, 3.799004031732514*^9}, {
   3.7990040778253613`*^9, 3.7990040921385403`*^9}, {3.7990041374642057`*^9, 
   3.799004139589705*^9}, {3.79900418163698*^9, 3.799004237668275*^9}, {
   3.7990042860429163`*^9, 3.799004303619372*^9}, {3.7990043404257383`*^9, 
   3.799004431435499*^9}, {3.799004478247407*^9, 3.7990045671843643`*^9}, {
   3.79900460916125*^9, 3.799004610272065*^9}, {3.7990048547052298`*^9, 
   3.799004955280307*^9}, {3.7990051219157124`*^9, 3.799005123913987*^9}, {
   3.799005262326486*^9, 3.799005270703783*^9}, {3.79900538024271*^9, 
   3.799005386272829*^9}, {3.7990055057279453`*^9, 3.799005563797935*^9}, {
   3.7990056261290197`*^9, 3.799005652837226*^9}, {3.799005693909665*^9, 
   3.79900569449655*^9}, {3.7990057492267*^9, 3.799005780022645*^9}, {
   3.799005815971877*^9, 3.7990058999902554`*^9}, {3.799005983958552*^9, 
   3.799006067602807*^9}, {3.799006307539482*^9, 3.7990063078576117`*^9}, {
   3.799006472531335*^9, 3.799006490083435*^9}, 3.7990066384725027`*^9, 
   3.7990068637833643`*^9, {3.799006994197953*^9, 3.799007013786499*^9}, {
   3.799007131712484*^9, 3.7990071336438932`*^9}, {3.799007327368372*^9, 
   3.799007391092718*^9}, {3.799007672831482*^9, 3.7990076995382032`*^9}, {
   3.799007737697155*^9, 3.799007825757773*^9}, {3.7990078587083673`*^9, 
   3.799008109888878*^9}, {3.799008793166336*^9, 3.7990087982678623`*^9}, 
   3.799009214492525*^9, {3.799009261359789*^9, 3.7990094465575037`*^9}, {
   3.799009704600862*^9, 3.799009710465987*^9}, {3.799009769761812*^9, 
   3.799009803190339*^9}, 3.7990098919504642`*^9, {3.7990100337803087`*^9, 
   3.7990100338916187`*^9}, {3.799010078496582*^9, 3.799010195033456*^9}, 
   3.799010284020122*^9, {3.799010342527528*^9, 3.799010342851156*^9}, 
   3.799131138704172*^9, 3.799131177553089*^9, {3.799131376052987*^9, 
   3.799131421221959*^9}, {3.79913146979104*^9, 3.799131482941709*^9}, {
   3.799131602747799*^9, 3.799131603039668*^9}, {3.7991316653229437`*^9, 
   3.7991316864536*^9}, {3.7991317308630543`*^9, 3.799131763582492*^9}, {
   3.799131838351921*^9, 3.7991318465008707`*^9}, {3.799131877666514*^9, 
   3.799131982308112*^9}, {3.799132440947259*^9, 3.7991325129487534`*^9}, {
   3.7991325501608877`*^9, 3.799132602785801*^9}, {3.7991326345992517`*^9, 
   3.7991326934789877`*^9}, {3.799132727664542*^9, 3.79913274195623*^9}, {
   3.7991328544196978`*^9, 3.799132883009454*^9}, {3.799133020275545*^9, 
   3.79913314251482*^9}, {3.799133182483369*^9, 3.799133328105707*^9}, {
   3.799133358586331*^9, 3.799133545425949*^9}, {3.79913362403673*^9, 
   3.799133666039873*^9}, 3.799135936743091*^9, {3.799137991672544*^9, 
   3.799138032938332*^9}, {3.799138074652499*^9, 3.799138074752254*^9}, {
   3.79913820689149*^9, 3.799138217363182*^9}, 3.79913824783568*^9, {
   3.799140056739547*^9, 3.799140061044345*^9}, {3.799140160514873*^9, 
   3.7991401641838512`*^9}, {3.7991402997485228`*^9, 
   3.7991403029960203`*^9}, {3.799230241096204*^9, 3.799230267263011*^9}, {
   3.799230302261074*^9, 3.7992303198485537`*^9}, {3.799230426883194*^9, 
   3.799230507332382*^9}, {3.7992307698931313`*^9, 3.799230795800767*^9}, {
   3.799230854029283*^9, 3.7992309314167643`*^9}, {3.7992326019184093`*^9, 
   3.799232625585352*^9}, {3.799232673191744*^9, 3.799232694470442*^9}, {
   3.799232742262306*^9, 3.79923275955898*^9}, {3.799232949465501*^9, 
   3.7992329711772738`*^9}, {3.799233124625856*^9, 3.799233151157522*^9}, {
   3.799233200326309*^9, 3.7992332091612177`*^9}, {3.799233302793067*^9, 
   3.7992333030447607`*^9}, {3.799233345369919*^9, 3.799233402411928*^9}, {
   3.7992335407628593`*^9, 3.799233616985924*^9}, {3.799233661471588*^9, 
   3.7992336682875147`*^9}, {3.799233715445204*^9, 3.799233743788547*^9}, {
   3.799233796776651*^9, 3.799233838511916*^9}, {3.799233877278303*^9, 
   3.799233946182873*^9}, {3.799234035469767*^9, 3.799234062581436*^9}, {
   3.799234140917203*^9, 3.799234161311871*^9}, {3.799234217976079*^9, 
   3.79923423402715*^9}, {3.799234266807014*^9, 3.799234524481089*^9}, {
   3.799234756218135*^9, 3.7992350033155127`*^9}, {3.799235038166544*^9, 
   3.799235041679196*^9}, {3.7992351662568293`*^9, 3.79923518862915*^9}, {
   3.799235244341155*^9, 3.799235279701195*^9}, {3.7992354156929092`*^9, 
   3.79923544498309*^9}, {3.799235538251498*^9, 3.799235546805916*^9}, {
   3.799235631357444*^9, 3.7992356490303288`*^9}, {3.7992357407257977`*^9, 
   3.799235780849375*^9}, {3.799235987224543*^9, 3.799235987395875*^9}, {
   3.799236100644496*^9, 3.7992361291728287`*^9}, {3.799236239656196*^9, 
   3.79923624012781*^9}, {3.799236428482665*^9, 3.799236435398011*^9}, {
   3.7992364930056334`*^9, 3.799236508187521*^9}, {3.799236594287056*^9, 
   3.799236672177753*^9}, {3.799236716398178*^9, 3.799236751678031*^9}, {
   3.7992367981635323`*^9, 3.799236900283244*^9}, {3.7992369338198853`*^9, 
   3.799237207274*^9}, {3.799237246924226*^9, 3.799237249212584*^9}, {
   3.799237320318755*^9, 3.79923732043609*^9}, {3.7992374026026773`*^9, 
   3.799237406311048*^9}, {3.799237620131296*^9, 3.799237658042815*^9}, 
   3.799237954530129*^9, {3.799238247395918*^9, 3.799238250035083*^9}, {
   3.799238303444961*^9, 3.799238338133705*^9}, {3.799238379639688*^9, 
   3.799238506300403*^9}, {3.799238543512348*^9, 3.799238633238432*^9}, {
   3.7992387799015007`*^9, 3.799238808936944*^9}, {3.799238851991921*^9, 
   3.799238900347664*^9}, {3.799238939421878*^9, 3.7992389770836353`*^9}, {
   3.799239171792638*^9, 3.799239194510652*^9}, {3.799250053359824*^9, 
   3.7992500535313587`*^9}, {3.7992503159968157`*^9, 3.79925031626152*^9}, {
   3.799250832907669*^9, 3.799250841613585*^9}, {3.7992565649012327`*^9, 
   3.799256569829947*^9}, {3.799257220095715*^9, 3.799257274290802*^9}, {
   3.799257326084632*^9, 3.79925732612361*^9}, {3.799257399364339*^9, 
   3.799257400555578*^9}, {3.7993491308019533`*^9, 3.799349131131413*^9}, {
   3.799349233448381*^9, 3.799349397119288*^9}, {3.7993494282318277`*^9, 
   3.799349430299312*^9}, {3.7993494688306093`*^9, 3.799349473577364*^9}, {
   3.799349508918066*^9, 3.79934951426961*^9}, {3.799349556600992*^9, 
   3.79934959960817*^9}, {3.799349664575192*^9, 3.799349721519143*^9}, {
   3.799349757250203*^9, 3.7993497903052483`*^9}, {3.7993498256415*^9, 
   3.799349936911248*^9}, {3.799349970240543*^9, 3.799350154247218*^9}, {
   3.799350575931821*^9, 3.7993506085460587`*^9}, {3.799350738830624*^9, 
   3.7993507392218533`*^9}, {3.799351274304685*^9, 3.799351277103931*^9}, {
   3.799351354465907*^9, 3.799351400952795*^9}, {3.799351470624235*^9, 
   3.799351546715851*^9}, {3.799351580977964*^9, 3.7993515835392838`*^9}, {
   3.799351629760922*^9, 3.799351672921151*^9}, {3.799351871973001*^9, 
   3.799351896091898*^9}, {3.79935198438675*^9, 3.799352060014926*^9}, {
   3.7993521178197002`*^9, 3.799352126203323*^9}, {3.799352248397024*^9, 
   3.799352253255172*^9}, {3.799352327031845*^9, 3.79935233093155*^9}, {
   3.7993533703045197`*^9, 3.799353381275827*^9}, {3.7993534132568827`*^9, 
   3.799353426062248*^9}, {3.799353493821082*^9, 3.799353496390498*^9}, {
   3.799353550943179*^9, 3.799353578200367*^9}, {3.799353616916129*^9, 
   3.799353771494595*^9}, {3.799353879333887*^9, 3.7993539067685213`*^9}, {
   3.7993544799228888`*^9, 3.799354523611157*^9}, {3.799354708831205*^9, 
   3.799354722639608*^9}, {3.7993550556049623`*^9, 3.799355083902547*^9}, {
   3.799355204694387*^9, 3.799355251386909*^9}, {3.7993553706941757`*^9, 
   3.7993553939386806`*^9}, {3.799355485629004*^9, 3.7993554864539843`*^9}, {
   3.799355572020208*^9, 3.799355574273778*^9}, {3.7993560105275*^9, 
   3.7993560118177757`*^9}, {3.7993560733532887`*^9, 3.799356177076877*^9}, {
   3.7993562491275053`*^9, 3.7993562576444674`*^9}, {3.7993563628635406`*^9, 
   3.799356387961219*^9}, {3.799356419095233*^9, 3.7993564442875347`*^9}, 
   3.7993567448476067`*^9, {3.7993569981460733`*^9, 3.7993570038444777`*^9}, {
   3.799357047581604*^9, 3.799357074571566*^9}, {3.7993571086593723`*^9, 
   3.799357129316828*^9}, {3.7993571780535727`*^9, 3.79935725133587*^9}, {
   3.79935729111595*^9, 3.799357319844123*^9}, 3.7993573560166073`*^9, {
   3.799357427193678*^9, 3.799357479272863*^9}, {3.799357515496311*^9, 
   3.799357515659313*^9}, {3.7993575481596117`*^9, 3.7993575505992813`*^9}, {
   3.799357580991859*^9, 3.799357619422187*^9}, {3.7993576508816013`*^9, 
   3.799357665100774*^9}, {3.799357701735916*^9, 3.79935771339855*^9}, {
   3.799357764014586*^9, 3.799357806609118*^9}, {3.7993579167430058`*^9, 
   3.799357979166843*^9}, {3.799358044893042*^9, 3.7993580460967693`*^9}, {
   3.799358093986803*^9, 3.799358098902337*^9}, {3.799358167471343*^9, 
   3.799358180675292*^9}, {3.799358359289507*^9, 3.799358371676566*^9}, {
   3.799358594521337*^9, 3.799358610945352*^9}, {3.7993588219202414`*^9, 
   3.7993588360631533`*^9}, {3.799358951725175*^9, 3.799358956438362*^9}, {
   3.799359051687846*^9, 3.799359141396564*^9}, {3.799395725852221*^9, 
   3.799396043776479*^9}, {3.799396186921632*^9, 3.799396205769361*^9}, {
   3.7993962429581738`*^9, 3.799396246265465*^9}, 3.799396311308338*^9, {
   3.799396348517446*^9, 3.799396358642302*^9}, {3.799396402651168*^9, 
   3.799396462505013*^9}, {3.799396526700713*^9, 3.7993966377087917`*^9}, {
   3.799396739262661*^9, 3.799396858725172*^9}, 3.799396936475429*^9, {
   3.799397000092647*^9, 3.7993970551553173`*^9}, {3.799397100224354*^9, 
   3.7993971959610367`*^9}, {3.799397282745085*^9, 3.799397287466469*^9}, {
   3.799397319478319*^9, 3.79939737341957*^9}, {3.799397407387876*^9, 
   3.799397413612234*^9}, {3.799397461177477*^9, 3.799397479574141*^9}, {
   3.799397522552847*^9, 3.799397586850511*^9}, {3.799397652266082*^9, 
   3.799397702349263*^9}, {3.799397877997939*^9, 3.7993978792503347`*^9}, {
   3.799397922546193*^9, 3.7993979488398857`*^9}, {3.799397981745243*^9, 
   3.7993980083438396`*^9}, {3.7993982564264708`*^9, 3.799398282178227*^9}, {
   3.799399267997942*^9, 3.799399298572185*^9}, {3.799399373335455*^9, 
   3.7993993745832663`*^9}, {3.799399411718644*^9, 3.7993994257964697`*^9}, {
   3.799400715866912*^9, 3.799400779306671*^9}, {3.799400884367299*^9, 
   3.79940089052379*^9}, {3.799401210273383*^9, 3.799401226445284*^9}, {
   3.799403178922806*^9, 3.79940318952661*^9}, {3.799403255318657*^9, 
   3.799403277189884*^9}, {3.799403432275775*^9, 3.79940343654875*^9}, {
   3.7994035078737173`*^9, 3.799403546709877*^9}, {3.7994037926742907`*^9, 
   3.7994038369934673`*^9}, {3.7994052412606897`*^9, 3.799405244218302*^9}, {
   3.79941079234937*^9, 3.7994108163458853`*^9}, {3.7994108747087183`*^9, 
   3.799410874824435*^9}, {3.7994112512071867`*^9, 3.799411251332687*^9}, 
   3.7994114119114647`*^9, 3.799411449161474*^9, {3.7994114848318453`*^9, 
   3.799411487943194*^9}, {3.799416789814967*^9, 3.799416820360423*^9}, {
   3.7994168804821*^9, 3.7994168868078127`*^9}, {3.799427545931622*^9, 
   3.799427546061809*^9}, {3.799429500150448*^9, 3.799429514252985*^9}, {
   3.799429564379923*^9, 3.799429647245859*^9}, {3.799429792059183*^9, 
   3.799429830549102*^9}, {3.79942986361273*^9, 3.79942998885371*^9}, {
   3.799430043692189*^9, 3.799430101926037*^9}, {3.799430140155467*^9, 
   3.799430281007605*^9}, 3.7994355545445747`*^9, 3.7994355935718203`*^9, {
   3.799435695228176*^9, 3.799435706656334*^9}, {3.799435757947132*^9, 
   3.7994357704237413`*^9}, {3.799436067770815*^9, 3.799436070173808*^9}, {
   3.7994361045864973`*^9, 3.799436202464116*^9}, {3.7994363066093903`*^9, 
   3.799436347700397*^9}, 3.799436403740337*^9, {3.7994364782495403`*^9, 
   3.7994364841106377`*^9}, {3.7994366997547398`*^9, 3.799436707539029*^9}, {
   3.799436879527853*^9, 3.799436889013575*^9}, {3.799438698013554*^9, 
   3.799438699168049*^9}, {3.799438892959556*^9, 3.7994388988867598`*^9}, {
   3.799438936973716*^9, 3.79943895229537*^9}, {3.799439474750145*^9, 
   3.7994394923777227`*^9}, {3.799441661672063*^9, 3.799441674682993*^9}, {
   3.799462298873969*^9, 3.799462360984688*^9}, 3.799462391491171*^9, {
   3.799483496225395*^9, 3.799483497655105*^9}, {3.79949467337598*^9, 
   3.7994947077245913`*^9}, {3.799496522649439*^9, 3.799496530020815*^9}, {
   3.799497666635428*^9, 3.799497668628141*^9}, {3.799498274475133*^9, 
   3.7994982771674643`*^9}, {3.799498868584589*^9, 3.799498875427608*^9}, {
   3.799505923129936*^9, 3.799505926793467*^9}, {3.799506079483337*^9, 
   3.7995061021905613`*^9}, {3.799506201149438*^9, 3.799506269054657*^9}, {
   3.799506300847074*^9, 3.799506304966898*^9}, {3.799506655312345*^9, 
   3.799506684288541*^9}, {3.799506763572102*^9, 3.7995067720205517`*^9}, {
   3.799506854423046*^9, 3.79950686093421*^9}, {3.7995069228286963`*^9, 
   3.79950698222742*^9}, 3.799507114054202*^9, {3.799507419732161*^9, 
   3.799507465853507*^9}, {3.799507502492695*^9, 3.799507586530344*^9}, {
   3.799507630875085*^9, 3.799507690631454*^9}, {3.799508139525599*^9, 
   3.7995082019987917`*^9}, 3.79950856038968*^9, {3.7995085946590776`*^9, 
   3.799508609992779*^9}, {3.7995089006664257`*^9, 3.799508902118433*^9}, {
   3.7995091010467253`*^9, 3.799509109785707*^9}, {3.799509157080027*^9, 
   3.799509163153783*^9}, {3.799509256403183*^9, 3.799509271370245*^9}, {
   3.799509331530862*^9, 3.799509343009705*^9}, {3.7995094260827713`*^9, 
   3.7995094404230747`*^9}, {3.799520152311574*^9, 3.799520168550473*^9}, {
   3.7995202406861*^9, 3.799520269911944*^9}, {3.799520400708397*^9, 
   3.7995204252756023`*^9}, {3.79952063880501*^9, 3.799520646127002*^9}, {
   3.799520703208501*^9, 3.799520707339881*^9}, {3.799522762272182*^9, 
   3.7995227638515873`*^9}, {3.799523843569663*^9, 3.799523845088526*^9}, {
   3.799524319717965*^9, 3.7995243468848352`*^9}, {3.799526232341741*^9, 
   3.799526235040217*^9}, {3.799530740442973*^9, 3.799530744636359*^9}, {
   3.799530799458281*^9, 3.799530837495973*^9}, {3.799530876526349*^9, 
   3.799530887577235*^9}, {3.799530932757349*^9, 3.799530934746265*^9}, {
   3.799531017993244*^9, 3.7995310187015038`*^9}, {3.799531051237805*^9, 
   3.799531051340476*^9}, {3.799531179222597*^9, 3.799531182361965*^9}, {
   3.799531224578884*^9, 3.7995312524860687`*^9}, {3.799531316021167*^9, 
   3.799531443822729*^9}, {3.7995314850520906`*^9, 3.7995314861217422`*^9}, {
   3.799531552028302*^9, 3.7995315541396713`*^9}, {3.799531596068511*^9, 
   3.799531597826354*^9}, {3.7995316520894337`*^9, 3.7995317075786333`*^9}, {
   3.7995317627101994`*^9, 3.799531766560885*^9}, {3.799531815452959*^9, 
   3.799531919503615*^9}, {3.7995319564314823`*^9, 3.799531965848814*^9}, {
   3.799532015986068*^9, 3.799532088736334*^9}, {3.7995321215985937`*^9, 
   3.7995321886721497`*^9}, {3.799532218825746*^9, 3.799532232777135*^9}, {
   3.7995322741576357`*^9, 3.799532305675249*^9}, {3.7995323541052237`*^9, 
   3.7995323549620247`*^9}, {3.799532904886283*^9, 3.7995329121672077`*^9}, {
   3.799577022666155*^9, 3.799577303456353*^9}, {3.7995773531596193`*^9, 
   3.799577463511827*^9}, {3.799577714911479*^9, 3.799577836237796*^9}, {
   3.799577879550099*^9, 3.799577977473588*^9}, {3.7995780909655037`*^9, 
   3.7995781063977757`*^9}, {3.799580298142198*^9, 3.7995803439251204`*^9}, {
   3.799580376347499*^9, 3.7995803768980513`*^9}, {3.799584075747487*^9, 
   3.799584090729725*^9}, {3.799585105721599*^9, 3.799585152757903*^9}, 
   3.7995851909433823`*^9, {3.799585228279335*^9, 3.7995852542213182`*^9}, {
   3.799585305860677*^9, 3.799585312783181*^9}, {3.7995853550884333`*^9, 
   3.799585599385363*^9}, {3.7995856447239447`*^9, 3.799585644859642*^9}, {
   3.799585836592054*^9, 3.799585842992125*^9}, {3.799585886760859*^9, 
   3.799585970634254*^9}, {3.799586028549636*^9, 3.799586044935734*^9}, {
   3.799587427942761*^9, 3.7995874373721123`*^9}, {3.7995875615241137`*^9, 
   3.799587573436194*^9}, {3.799587628994301*^9, 3.799587632821425*^9}, {
   3.799588066532415*^9, 3.799588110620775*^9}, {3.799588250407741*^9, 
   3.799588271005992*^9}, {3.7995883194154463`*^9, 3.799588341868534*^9}, {
   3.7995884452727013`*^9, 3.799588571913166*^9}, {3.799588637776466*^9, 
   3.7995886378942213`*^9}, {3.799588728091667*^9, 3.799588730668767*^9}, {
   3.799588781929078*^9, 3.799588783333709*^9}, {3.79958890580153*^9, 
   3.799588908899807*^9}, {3.799589032942794*^9, 3.799589181826642*^9}, {
   3.799589287737679*^9, 3.799589289219276*^9}, {3.799589358178215*^9, 
   3.799589413984932*^9}, {3.799590218711256*^9, 3.799590243411179*^9}, {
   3.799590492145981*^9, 3.799590492871694*^9}, {3.799591716101718*^9, 
   3.799591777790797*^9}, {3.799591839305846*^9, 3.799591839619918*^9}, {
   3.799681041277298*^9, 3.799681069331625*^9}, {3.7996811410468283`*^9, 
   3.7996811455842*^9}, {3.7996813272610607`*^9, 3.799681329513956*^9}, {
   3.7996813690641527`*^9, 3.7996813712140913`*^9}, {3.799681425929358*^9, 
   3.799681440698762*^9}, {3.799681480133149*^9, 3.7996814803352327`*^9}, {
   3.79968155947537*^9, 3.7996815682117987`*^9}, {3.8001059187485323`*^9, 
   3.800105923351673*^9}, {3.800105964534853*^9, 3.8001059730894947`*^9}, {
   3.800106085839814*^9, 3.800106086666244*^9}, {3.800106301332803*^9, 
   3.800106321306826*^9}, 3.80010635816663*^9, {3.80010652177855*^9, 
   3.800106546262105*^9}, {3.80011889610565*^9, 3.80011889710034*^9}, {
   3.800119077627898*^9, 3.800119082641033*^9}, 3.8001192301246023`*^9, {
   3.800119290343973*^9, 3.800119356764016*^9}, {3.8001217874669027`*^9, 
   3.800122305905889*^9}, {3.8001224712747793`*^9, 3.8001225723530397`*^9}, {
   3.800122840027507*^9, 3.800122843981934*^9}, {3.800122922369329*^9, 
   3.800122923997519*^9}, {3.800123748774124*^9, 3.800123984109709*^9}, {
   3.800124025055498*^9, 3.800124041863762*^9}, {3.800124159688242*^9, 
   3.800124422915968*^9}, {3.800124458103189*^9, 3.800124516342373*^9}, {
   3.800124563654665*^9, 3.800124796529532*^9}, {3.800125301202167*^9, 
   3.8001253818777857`*^9}, {3.800125849201428*^9, 3.8001258840007877`*^9}, {
   3.800127271803101*^9, 3.800127272307695*^9}, {3.8001280648080873`*^9, 
   3.800128148743616*^9}, {3.800128633503233*^9, 3.8001286463938417`*^9}, {
   3.800128681808078*^9, 3.800128691268449*^9}, {3.8001289070067472`*^9, 
   3.80012891763706*^9}, {3.800129146809143*^9, 3.8001291548695517`*^9}, {
   3.800129300566152*^9, 3.800129309379539*^9}, {3.80013271081708*^9, 
   3.800132812715871*^9}, {3.800132868998412*^9, 3.800132967139628*^9}, {
   3.800133232788999*^9, 3.8001332338697367`*^9}, 3.800133350187512*^9, {
   3.800133392414946*^9, 3.8001334756018343`*^9}, {3.800133551586307*^9, 
   3.800133591793158*^9}, {3.800133640045423*^9, 3.800133647051976*^9}, {
   3.800133705161191*^9, 3.800133715692666*^9}, {3.800133904844182*^9, 
   3.800133908356763*^9}, {3.800133955230068*^9, 3.800133955333975*^9}, {
   3.800134018500628*^9, 3.80013401873485*^9}, {3.800134119610393*^9, 
   3.800134121263459*^9}, {3.800134971102665*^9, 3.800135000871661*^9}, {
   3.800135486712223*^9, 3.800135489978856*^9}, {3.800135765818119*^9, 
   3.800135768334381*^9}, {3.800136491051546*^9, 3.800136502342058*^9}, {
   3.800136737350934*^9, 3.800136737728734*^9}, {3.800137022388877*^9, 
   3.80013704149937*^9}, {3.80013732388474*^9, 3.800137340014641*^9}, {
   3.800137819450548*^9, 3.800137819604745*^9}, {3.800137909829191*^9, 
   3.8001379218047028`*^9}, {3.800138215237274*^9, 3.800138252660225*^9}, {
   3.8001393211704483`*^9, 3.8001393213195333`*^9}, {3.800139577605356*^9, 
   3.800139577816914*^9}, {3.8001398219966593`*^9, 3.800139829794368*^9}, {
   3.8001400966047897`*^9, 3.80014010091392*^9}, {3.8001403752098703`*^9, 
   3.8001404054510937`*^9}, {3.800140452889922*^9, 3.8001404913370647`*^9}, {
   3.800140529844182*^9, 3.800140572311843*^9}, {3.800140765155444*^9, 
   3.800140798350773*^9}, {3.8001411664309797`*^9, 3.800141178173794*^9}, {
   3.800141390131385*^9, 3.8001414413232517`*^9}, {3.8001414730118856`*^9, 
   3.800141484683304*^9}, {3.8001416022714787`*^9, 3.800141657834494*^9}, {
   3.800142006903268*^9, 3.800142007588128*^9}, {3.800142145874834*^9, 
   3.8001422681608753`*^9}, {3.800142440528225*^9, 3.800142444400866*^9}, {
   3.800142524958205*^9, 3.800142545356757*^9}, {3.800142621731723*^9, 
   3.8001426414619217`*^9}, 3.800142707610222*^9, 3.800142762950993*^9, {
   3.800142845682719*^9, 3.800142848054143*^9}, {3.800142908774776*^9, 
   3.800142917316017*^9}, {3.800143002892953*^9, 3.80014304747038*^9}, 
   3.8001431255006523`*^9, {3.8001432067292747`*^9, 3.800143211837516*^9}, {
   3.800143421768985*^9, 3.800143499652759*^9}, {3.8001435422386923`*^9, 
   3.80014361960252*^9}, {3.8001436640270853`*^9, 3.800143698835318*^9}, {
   3.800143730855603*^9, 3.800143791128632*^9}, {3.8001438358106318`*^9, 
   3.800143837131074*^9}, 3.800143874070066*^9, {3.800144082385593*^9, 
   3.80014411282224*^9}, {3.800144144264949*^9, 3.800144187657576*^9}, {
   3.8001442487168303`*^9, 3.8001442768609667`*^9}, {3.80014505296349*^9, 
   3.800145083060957*^9}, {3.800145524427314*^9, 3.80014552824868*^9}, {
   3.800145903990591*^9, 3.80014590458602*^9}, 3.800146189473009*^9, {
   3.800146252410404*^9, 3.800146267977458*^9}, {3.800147267059524*^9, 
   3.8001472672058363`*^9}, {3.800148263253718*^9, 3.800148263336102*^9}, {
   3.800177579700129*^9, 3.800177641952938*^9}, {3.8001776805471077`*^9, 
   3.8001778189299517`*^9}, {3.80017813325004*^9, 3.8001781398369713`*^9}, {
   3.8001781977027617`*^9, 3.800178200059703*^9}, {3.800178309659247*^9, 
   3.800178310506379*^9}, {3.800178480356968*^9, 3.8001784859551077`*^9}, {
   3.800178575165433*^9, 3.8001786266172533`*^9}, {3.800178710654812*^9, 
   3.8001787145578833`*^9}, {3.800178826727412*^9, 3.800178845509622*^9}, {
   3.800178947772842*^9, 3.8001789516720953`*^9}, 3.800179045694165*^9, {
   3.800179122805518*^9, 3.800179268444851*^9}, {3.8001794181368437`*^9, 
   3.800179435331933*^9}, {3.8001795836838083`*^9, 3.800179615594942*^9}, {
   3.800179859670596*^9, 3.800179869506967*^9}, {3.8001799854868507`*^9, 
   3.800180044361163*^9}, {3.800180164737253*^9, 3.800180272455431*^9}, {
   3.800180465752516*^9, 3.800180584356473*^9}, {3.800180650884927*^9, 
   3.8001806672446117`*^9}, {3.800180838089531*^9, 3.800180847961487*^9}, {
   3.800181030919135*^9, 3.800181101621759*^9}, {3.800181136553413*^9, 
   3.800181187132821*^9}, {3.800181310339368*^9, 3.800181506285142*^9}, {
   3.8001815398445463`*^9, 3.8001815824827623`*^9}, {3.800181633603353*^9, 
   3.800181633864792*^9}, {3.800181687071316*^9, 3.800181845306878*^9}, {
   3.8001818822208357`*^9, 3.8001819996543818`*^9}, {3.80018204452783*^9, 
   3.800182180130685*^9}, {3.8001822260472317`*^9, 3.800182226133946*^9}, {
   3.800182347403819*^9, 3.800182484517824*^9}, {3.800182544432474*^9, 
   3.800182548544304*^9}, {3.800182587650116*^9, 3.800182600579444*^9}, {
   3.800182646173586*^9, 3.800182709477788*^9}, {3.8001827476405287`*^9, 
   3.800182767535214*^9}, {3.800182805282785*^9, 3.800182805594922*^9}, {
   3.800182854095771*^9, 3.8001829210436077`*^9}, {3.8001830099819603`*^9, 
   3.80018308022526*^9}, {3.800183112973061*^9, 3.800183126666368*^9}, {
   3.800183233410611*^9, 3.800183233748913*^9}, {3.80018343253866*^9, 
   3.800183435001169*^9}, {3.800183905139818*^9, 3.800183905272303*^9}, {
   3.8001839505004463`*^9, 3.800183973892823*^9}, {3.800184068603747*^9, 
   3.80018407479881*^9}, {3.8001841889573507`*^9, 3.800184212264724*^9}, {
   3.80018455333221*^9, 3.800184569581909*^9}, {3.800184694725658*^9, 
   3.800184694971361*^9}, {3.800184734714456*^9, 3.800184907749909*^9}, {
   3.800184971316998*^9, 3.80018500991996*^9}, {3.800185047989337*^9, 
   3.8001850506317596`*^9}, {3.800185559649416*^9, 3.800185674904231*^9}, {
   3.8001857457693768`*^9, 3.80018575696*^9}, {3.800185887006744*^9, 
   3.800185888482403*^9}, {3.800186152659203*^9, 3.800186172332738*^9}, 
   3.800186832140111*^9, {3.800187098397805*^9, 3.800187098884623*^9}, {
   3.8001871489394503`*^9, 3.80018725958753*^9}, {3.8001970608284883`*^9, 
   3.80019706592202*^9}, {3.8001972570358353`*^9, 3.800197258449671*^9}, {
   3.800348481506361*^9, 3.800348484963867*^9}, {3.8003507646158648`*^9, 
   3.800350765069332*^9}, {3.800362751265978*^9, 3.800362770301703*^9}, {
   3.800362864976164*^9, 3.800362874071115*^9}, 3.800373630547534*^9, {
   3.800381185184499*^9, 3.800381309281795*^9}, {3.800381395586217*^9, 
   3.800381399292642*^9}, {3.8003815759735737`*^9, 3.800381584132503*^9}, {
   3.8003816444667473`*^9, 3.800381854158986*^9}, {3.800381993703361*^9, 
   3.800382273064967*^9}, {3.800382353296163*^9, 3.800382378673451*^9}, {
   3.8003824250787363`*^9, 3.800382446697649*^9}, {3.8003824916252613`*^9, 
   3.800382558670994*^9}, {3.8003825924785137`*^9, 3.800382619160554*^9}, {
   3.800382651972423*^9, 3.8003827817379017`*^9}, {3.800382821923192*^9, 
   3.800382930207356*^9}, {3.8003851421926947`*^9, 3.8003851547919407`*^9}, 
   3.800385187729516*^9, {3.800385224552801*^9, 3.800385243965082*^9}, {
   3.800385696508626*^9, 3.800385698956689*^9}, {3.800385763920683*^9, 
   3.800385783396556*^9}, {3.8003858171612597`*^9, 3.800385855744529*^9}, {
   3.800385891350133*^9, 3.800386180759975*^9}, {3.800386219508629*^9, 
   3.80038637759691*^9}, 3.800386571898634*^9, {3.800386619829941*^9, 
   3.800386753059869*^9}, {3.8003868043458967`*^9, 3.800386826648286*^9}, {
   3.8003868589306183`*^9, 3.800386948939269*^9}, {3.800387353420313*^9, 
   3.800387526015955*^9}, {3.800387686903468*^9, 3.8003877221519537`*^9}, {
   3.800388400861919*^9, 3.800388440423813*^9}, {3.8003884833033857`*^9, 
   3.800388593685877*^9}, {3.800388626676099*^9, 3.800388638815358*^9}, {
   3.800389514732029*^9, 3.800389571785665*^9}, {3.800389611361907*^9, 
   3.800389616602428*^9}, {3.8003896516673317`*^9, 3.800389651949374*^9}, {
   3.800389811524453*^9, 3.8003898383593807`*^9}, {3.800389876461116*^9, 
   3.800389901830459*^9}, {3.800390011463965*^9, 3.800390031148488*^9}, {
   3.800390067008265*^9, 3.800390132619104*^9}, {3.800390165052855*^9, 
   3.800390167534483*^9}, {3.800390366003841*^9, 3.800390371350526*^9}, {
   3.800390762265781*^9, 3.800390767090303*^9}, {3.8003908987593603`*^9, 
   3.800391120092174*^9}, 3.800392059892392*^9, {3.8003920978628607`*^9, 
   3.800392279507244*^9}, {3.800392361166439*^9, 3.800392364385851*^9}, {
   3.8003932390117197`*^9, 3.800393507678134*^9}, {3.800393764608733*^9, 
   3.800393927645823*^9}, {3.800393988090467*^9, 3.8003941758937693`*^9}, {
   3.800394208626196*^9, 3.800394296974339*^9}, {3.800394337871377*^9, 
   3.800394464579793*^9}, {3.800394518398531*^9, 3.800394723723918*^9}, {
   3.800394757488655*^9, 3.800394762990466*^9}, 3.800394797669406*^9, {
   3.8003962707365828`*^9, 3.800396276280759*^9}, {3.8003965128304253`*^9, 
   3.800396521137081*^9}, {3.80039685655056*^9, 3.800396881051031*^9}, {
   3.800402677594693*^9, 3.8004027721912317`*^9}, {3.800402833316571*^9, 
   3.800402838708396*^9}, {3.800402940313978*^9, 3.8004029912347107`*^9}, {
   3.800403062420643*^9, 3.800403065422408*^9}, {3.800403147930996*^9, 
   3.800403299191246*^9}, {3.800403335063311*^9, 3.800403405136635*^9}, {
   3.800403447188877*^9, 3.800403507366559*^9}, 3.8004035503214207`*^9, {
   3.8004035942882*^9, 3.8004036023261337`*^9}, {3.80040499229895*^9, 
   3.800405011750472*^9}, 3.8004352935166492`*^9, {3.800435620014426*^9, 
   3.800435671137642*^9}, {3.8004694692722187`*^9, 3.800469473298009*^9}, {
   3.800469565774715*^9, 3.800469584009047*^9}, {3.8004696634828033`*^9, 
   3.800469683594091*^9}, {3.800469715951634*^9, 3.8004697201746902`*^9}, {
   3.80046975744977*^9, 3.8004698027951317`*^9}, {3.800469889485711*^9, 
   3.800469905760767*^9}, {3.800469950407292*^9, 3.800470012181481*^9}, {
   3.800470059658327*^9, 3.800470060106711*^9}, {3.800528151643886*^9, 
   3.800528206740917*^9}, {3.8005282411304073`*^9, 3.800528287515326*^9}, {
   3.8005283271689367`*^9, 3.8005283699292173`*^9}, {3.800529986868083*^9, 
   3.800530012252002*^9}, 3.800530057063272*^9, {3.800530164481205*^9, 
   3.800530189823537*^9}, {3.800530648316684*^9, 3.80053064958353*^9}, {
   3.800530853432138*^9, 3.800530865917266*^9}, {3.800531119534594*^9, 
   3.800531124005638*^9}, {3.800531334038207*^9, 3.8005313341706743`*^9}, {
   3.800531542259592*^9, 3.800531569110484*^9}, {3.80053176332401*^9, 
   3.800531768724558*^9}, {3.800532414304978*^9, 3.800532435962283*^9}, {
   3.8005325627337513`*^9, 3.8005325867169733`*^9}, {3.800539691993321*^9, 
   3.8005396922376738`*^9}, {3.800539747317726*^9, 3.800539767014038*^9}, {
   3.800539941823848*^9, 3.800539942589692*^9}, {3.800540273885191*^9, 
   3.800540274621111*^9}, {3.8005403407884274`*^9, 3.800540713745277*^9}, {
   3.8005407491160603`*^9, 3.800541028333003*^9}, {3.800541080836898*^9, 
   3.800541080941888*^9}, {3.800541111579885*^9, 3.8005411380861883`*^9}, {
   3.800566438276372*^9, 3.800566447726413*^9}, {3.8005665068776484`*^9, 
   3.800566516702909*^9}, {3.800566695644628*^9, 3.800566700692079*^9}, {
   3.800566750962405*^9, 3.8005668461154413`*^9}, 3.8005670678770437`*^9, {
   3.800567128978962*^9, 3.800567134989373*^9}, {3.800567275850424*^9, 
   3.800567279203228*^9}, {3.80056758684198*^9, 3.800567588925572*^9}, {
   3.800567632712661*^9, 3.800567656785829*^9}, {3.800567743690916*^9, 
   3.80056781417027*^9}, {3.800567895722938*^9, 3.800567898769711*^9}, {
   3.800568759451004*^9, 3.800568784754797*^9}, {3.8006091994214697`*^9, 
   3.800609208022295*^9}, {3.80061749731608*^9, 3.800617621059659*^9}, {
   3.800618209223439*^9, 3.800618221350851*^9}, {3.800628025696793*^9, 
   3.800628122965448*^9}, {3.8006281551635523`*^9, 3.8006282084641027`*^9}, {
   3.800628282311809*^9, 3.800628283322185*^9}, {3.800628316276246*^9, 
   3.8006283387012863`*^9}, {3.800628396626215*^9, 3.800628396871958*^9}, {
   3.800659071029105*^9, 3.800659094890737*^9}, {3.800698903722645*^9, 
   3.800698908697784*^9}, {3.800699050913622*^9, 3.800699052190681*^9}, {
   3.800699411064617*^9, 3.800699435209033*^9}, {3.800699470941792*^9, 
   3.800699476830567*^9}, 3.800699664212205*^9, {3.801060227526081*^9, 
   3.8010602295502872`*^9}, {3.8010602740268373`*^9, 3.801060282480974*^9}, {
   3.801133898801444*^9, 3.801133900504414*^9}, {3.804484089357547*^9, 
   3.804484094953981*^9}, {3.8044844780306873`*^9, 3.804484480230336*^9}, {
   3.8044845205893507`*^9, 3.804484532299798*^9}, {3.804484844286173*^9, 
   3.8044848500077877`*^9}, 3.8044849169961243`*^9, {3.804484955845965*^9, 
   3.8044849673734913`*^9}, {3.8044862495450077`*^9, 3.804486254729319*^9}, {
   3.80448628819516*^9, 3.8044863509937267`*^9}, {3.804486385427167*^9, 
   3.804486426218395*^9}, {3.804486490350686*^9, 3.804486584532473*^9}, {
   3.804487020810646*^9, 3.8044870684542913`*^9}, {3.8044872248191147`*^9, 
   3.804487282570923*^9}, {3.804487335112524*^9, 3.804487344162509*^9}, {
   3.804487390892893*^9, 3.804487415181446*^9}, 3.80448744786648*^9, {
   3.804487496600211*^9, 3.804487496939393*^9}, {3.804487872392514*^9, 
   3.8044878725022573`*^9}, {3.804488205192058*^9, 3.804488246053841*^9}, {
   3.804488293640534*^9, 3.804488301492073*^9}, {3.8044889055530853`*^9, 
   3.8044889064682217`*^9}, 3.804488946238213*^9, {3.8045198206237497`*^9, 
   3.804519825342784*^9}, {3.8045199513718224`*^9, 3.804519953874217*^9}, {
   3.804520526933565*^9, 3.804520529063521*^9}, {3.8045208431075897`*^9, 
   3.804520848893546*^9}, {3.804521164111403*^9, 3.8045211688822517`*^9}, {
   3.804521353794626*^9, 3.8045214983329678`*^9}, {3.80452279173523*^9, 
   3.804522894344061*^9}, {3.804522951539962*^9, 3.804522995386354*^9}, {
   3.8045231936479816`*^9, 3.804523245929599*^9}, {3.804523278649105*^9, 
   3.804523279177002*^9}, {3.804523699795101*^9, 3.804523709486261*^9}, {
   3.80452377816507*^9, 3.8045237804231777`*^9}, {3.804523817387936*^9, 
   3.804523817725944*^9}, {3.804524108619648*^9, 3.804524108825694*^9}, {
   3.804525089607407*^9, 3.804525093035267*^9}, {3.804525127864987*^9, 
   3.804525132848987*^9}, 3.8045252124754343`*^9, {3.804525352446113*^9, 
   3.8045253795944138`*^9}, {3.804525420218603*^9, 3.804525420326558*^9}, {
   3.8045580003810997`*^9, 3.804558007707633*^9}, {3.8045590314828863`*^9, 
   3.804559041721342*^9}, {3.8045616784298687`*^9, 3.804561680287465*^9}, {
   3.804561995686426*^9, 3.80456200168456*^9}, {3.804562586355526*^9, 
   3.8045626166853657`*^9}, 3.804562752476243*^9, 3.804563428051609*^9, {
   3.8045636080811987`*^9, 3.804563641245739*^9}, {3.804564020203508*^9, 
   3.8045640496959047`*^9}, {3.8045641163508177`*^9, 3.804564152213276*^9}, {
   3.804564232071662*^9, 3.804564235151207*^9}, {3.8045644152490997`*^9, 
   3.8045644241187067`*^9}, {3.804564508218174*^9, 3.804564534928103*^9}, {
   3.8045646372181597`*^9, 3.804564660886282*^9}, {3.804564938556643*^9, 
   3.804564938688539*^9}, {3.8045661253490458`*^9, 3.804566134331032*^9}, 
   3.804570692877499*^9, {3.8045708849919567`*^9, 3.804570913579739*^9}, {
   3.8045709878216143`*^9, 3.8045710011817293`*^9}, {3.8045710473168983`*^9, 
   3.8045710549738894`*^9}, {3.804571091444631*^9, 3.804571097099401*^9}, {
   3.8045711297144327`*^9, 3.804571153093442*^9}, {3.804571183876433*^9, 
   3.8045712320815*^9}, {3.804571269276341*^9, 3.80457128125702*^9}, {
   3.80457137168717*^9, 3.804571382296483*^9}, {3.8045720013127623`*^9, 
   3.804572004096015*^9}, {3.804572820034317*^9, 3.804572832127472*^9}, {
   3.804573708728548*^9, 3.8045737092589197`*^9}, {3.8045737889973583`*^9, 
   3.8045737894778347`*^9}, {3.8045740455512733`*^9, 3.804574046088924*^9}, {
   3.804575176790501*^9, 3.804575178316616*^9}, {3.804575464095827*^9, 
   3.804575483419174*^9}, {3.804575520457801*^9, 3.804575528452203*^9}, 
   3.804576229043549*^9, {3.8045763082996397`*^9, 3.8045763084160967`*^9}, {
   3.804578549446219*^9, 3.804578555813384*^9}, {3.8050101706241317`*^9, 
   3.8050101713324013`*^9}, {3.8050102584268208`*^9, 
   3.8050102745374775`*^9}, {3.805010652626173*^9, 3.8050106527877336`*^9}, {
   3.805010699456721*^9, 3.805010699621062*^9}, {3.805010774953514*^9, 
   3.805010804369403*^9}, {3.805010985118361*^9, 3.8050109986362667`*^9}, {
   3.805011596321619*^9, 3.8050115966303806`*^9}, {3.8050116388228083`*^9, 
   3.805011661511118*^9}, {3.8050119966365347`*^9, 3.805012064605031*^9}, {
   3.8050121071114554`*^9, 3.8050121690398493`*^9}, {3.80501219971342*^9, 
   3.805012219250802*^9}, {3.8050122883430643`*^9, 3.8050122974036436`*^9}, {
   3.805012344379854*^9, 3.8050123620191665`*^9}, {3.8050124646704884`*^9, 
   3.8050124798541193`*^9}, {3.8050125345695486`*^9, 3.805012555017894*^9}, 
   3.8050130007974606`*^9, {3.8050141975132675`*^9, 3.805014197984908*^9}, {
   3.8050252243460517`*^9, 3.8050252308055*^9}, {3.805026166777572*^9, 
   3.8050261852433147`*^9}, {3.805026225414252*^9, 3.8050262960035143`*^9}, {
   3.8050265252364516`*^9, 3.8050265277385807`*^9}, {3.805103945888481*^9, 
   3.805103949284881*^9}, {3.8059572058843265`*^9, 3.8059572061034355`*^9}, {
   3.8059644488663597`*^9, 3.80596453960367*^9}, {3.8059661791630993`*^9, 
   3.8059661924866962`*^9}, {3.805966412882533*^9, 3.805966420012486*^9}, {
   3.806995024229252*^9, 3.806995033246661*^9}, {3.80846623542913*^9, 
   3.808466236870305*^9}, {3.808466314409531*^9, 3.808466314999671*^9}, {
   3.8084665455488653`*^9, 3.808466625707761*^9}, {3.808466657155304*^9, 
   3.8084666799775667`*^9}, {3.808467515336522*^9, 3.8084677760708857`*^9}, {
   3.808535961245016*^9, 3.808535963750863*^9}, {3.808653258352865*^9, 
   3.808653269007317*^9}, {3.8086533002682037`*^9, 3.808653300401976*^9}, {
   3.8094244265364423`*^9, 3.80942450649298*^9}, {3.8094245846088486`*^9, 
   3.8094247452763042`*^9}, {3.8094247988186827`*^9, 
   3.8094248935444784`*^9}, {3.8094249315550504`*^9, 
   3.8094249857687597`*^9}, {3.809425107204444*^9, 3.809425149355727*^9}, {
   3.8094252595914893`*^9, 3.8094255255110426`*^9}, {3.8094257906063647`*^9, 
   3.8094258114371347`*^9}, {3.8094260584201517`*^9, 3.809426124332302*^9}, 
   3.8094261783911295`*^9, {3.809426313662984*^9, 3.8094263316095185`*^9}, {
   3.809426444164299*^9, 3.809426498121995*^9}, {3.8094265660551414`*^9, 
   3.8094266123336267`*^9}, {3.8094267914130907`*^9, 
   3.8094268125331125`*^9}, {3.8094268799293995`*^9, 
   3.8094269918927765`*^9}, {3.8094270930237064`*^9, 
   3.8094271093228226`*^9}, {3.80942714425173*^9, 3.809427205150957*^9}, {
   3.8094272373101745`*^9, 3.809427262316041*^9}, {3.8094274505715933`*^9, 
   3.809427454890148*^9}, {3.8094275964589577`*^9, 3.8094276034173713`*^9}, {
   3.80942772971625*^9, 3.8094277311276445`*^9}, {3.809427788630356*^9, 
   3.809427845398939*^9}, {3.8094278991284313`*^9, 3.8094279321942577`*^9}, {
   3.809427975593667*^9, 3.8094280008681383`*^9}, {3.809428079085054*^9, 
   3.809428123497816*^9}, {3.8094282190073614`*^9, 3.809428273127963*^9}, {
   3.8094284202303257`*^9, 3.8094284498464327`*^9}, {3.8094287353756537`*^9, 
   3.809428737975089*^9}, {3.8094291557687244`*^9, 3.80942919740641*^9}, {
   3.809429273024479*^9, 3.809429306736966*^9}, {3.809429409968733*^9, 
   3.8094294588512363`*^9}, {3.8094297527414513`*^9, 3.809429765313314*^9}, {
   3.809429865022844*^9, 3.809429878492935*^9}, {3.8094299217571898`*^9, 
   3.8094300547482395`*^9}, {3.809430478144578*^9, 3.809430487926627*^9}, {
   3.809430607317602*^9, 3.8094306208667555`*^9}, {3.8094306569750032`*^9, 
   3.809430780329708*^9}, {3.809430931632283*^9, 3.809430938539364*^9}, {
   3.8094310283619137`*^9, 3.80943103653162*^9}, {3.8094310688037834`*^9, 
   3.8094310952618113`*^9}, {3.80943112925653*^9, 3.809431146919154*^9}, {
   3.8094312786719112`*^9, 3.809431280095107*^9}, {3.8094313143975773`*^9, 
   3.8094313233271084`*^9}, {3.809431371453998*^9, 3.809431450668311*^9}, {
   3.8094314914028263`*^9, 3.809431501990303*^9}, {3.8094315961023703`*^9, 
   3.8094315966215897`*^9}, {3.8094316604527254`*^9, 
   3.8094316874130697`*^9}, {3.809435501584985*^9, 3.8094355173951063`*^9}, {
   3.8094355843260574`*^9, 3.8094355875312176`*^9}, {3.8094361563874416`*^9, 
   3.8094361565320716`*^9}, {3.8094363685700283`*^9, 3.80943640285565*^9}, {
   3.809436443564046*^9, 3.8094364995071945`*^9}, {3.8094365330820475`*^9, 
   3.809436556747449*^9}, {3.8094366165401897`*^9, 3.809436622785612*^9}, {
   3.8094367276832695`*^9, 3.809437005485798*^9}, {3.8094370390673766`*^9, 
   3.80943726020621*^9}, {3.8094373101109953`*^9, 3.8094373684181523`*^9}, {
   3.8094374235783978`*^9, 3.8094374245028467`*^9}, {3.8094374994823685`*^9, 
   3.8094375197248297`*^9}, {3.809757695229082*^9, 3.809757716832901*^9}, {
   3.809757837986209*^9, 3.809757847934927*^9}, {3.809757964733672*^9, 
   3.809758032822015*^9}, {3.809758237740777*^9, 3.8097583398958187`*^9}, {
   3.8097594768434067`*^9, 3.809759501722703*^9}, {3.810281127856184*^9, 
   3.8102811546418753`*^9}, {3.810281197180109*^9, 3.8102812419945087`*^9}, {
   3.810281340190309*^9, 3.810281452629368*^9}, {3.810281522217218*^9, 
   3.810281650199353*^9}, {3.810281792150565*^9, 3.8102818014133043`*^9}, {
   3.810281871365574*^9, 3.8102819050361357`*^9}, {3.8102819560911417`*^9, 
   3.810281979523478*^9}, {3.8102820227250557`*^9, 3.810282054730061*^9}, {
   3.8102820978259697`*^9, 3.810282098185032*^9}, {3.810284483539173*^9, 
   3.810284485252976*^9}, 3.8102845323540792`*^9, {3.810284588169107*^9, 
   3.810284610093302*^9}, {3.810284657767625*^9, 3.8102846787345953`*^9}, {
   3.810284720550447*^9, 3.810284743740901*^9}, {3.810962184998678*^9, 
   3.810962201297665*^9}, {3.8109622603416443`*^9, 3.810962290097823*^9}, {
   3.810962412475502*^9, 3.810962412717413*^9}, {3.810962571484243*^9, 
   3.8109625745048513`*^9}, {3.810962634335308*^9, 3.810962639735159*^9}, {
   3.81096301800562*^9, 3.810963051494295*^9}, {3.810963084462516*^9, 
   3.810963117786071*^9}, {3.810965064197176*^9, 3.81096509769335*^9}, {
   3.810965499182309*^9, 3.8109655352286463`*^9}, {3.8109655934783688`*^9, 
   3.810965595168682*^9}, {3.810965789424203*^9, 3.810965795241995*^9}, {
   3.810993018205379*^9, 3.810993020937002*^9}, {3.810993190120719*^9, 
   3.810993193049507*^9}, {3.810993341880845*^9, 3.81099336208961*^9}, 
   3.811147939725741*^9, {3.811148020201611*^9, 3.8111480202991123`*^9}, {
   3.8111480846461143`*^9, 3.8111482147628202`*^9}, {3.8111482676678667`*^9, 
   3.811148298547387*^9}, {3.8111483325309067`*^9, 3.8111483779091873`*^9}, {
   3.81114843978971*^9, 3.811148458714778*^9}, {3.811148490005*^9, 
   3.811148524304769*^9}, {3.81124546992454*^9, 3.811245754589308*^9}, {
   3.811245851681663*^9, 3.81124586205259*^9}, {3.81124592516823*^9, 
   3.81124593857262*^9}, {3.811246111345852*^9, 3.8112461553220778`*^9}, {
   3.811246203635236*^9, 3.811246211274835*^9}, {3.811246271634397*^9, 
   3.811246291844314*^9}, {3.811246462280624*^9, 3.8112464624172907`*^9}, {
   3.8112465082429457`*^9, 3.811246543433358*^9}, {3.811262505499866*^9, 
   3.81126261878167*^9}, {3.811262741055828*^9, 3.811262805076571*^9}, {
   3.811262974138283*^9, 3.81126303996087*^9}, {3.811263468593718*^9, 
   3.8112634690478687`*^9}, {3.811263517539591*^9, 3.811263519140196*^9}, {
   3.8112635871324453`*^9, 3.811263587336927*^9}, {3.811263701987253*^9, 
   3.8112637381298532`*^9}, {3.811263828860351*^9, 3.8112638945993767`*^9}, 
   3.811763528482916*^9, {3.8152249898020153`*^9, 3.8152250368136387`*^9}, 
   3.8152251088442583`*^9, {3.815333677184249*^9, 3.815333677855045*^9}, {
   3.815333711206773*^9, 3.8153337129675713`*^9}, {3.815340468287928*^9, 
   3.8153404960140347`*^9}, {3.815390331833848*^9, 3.8153903655972815`*^9}, 
   3.815390697161736*^9, {3.8153921315032263`*^9, 3.815392189935848*^9}, {
   3.815392305589279*^9, 3.815392356605252*^9}, {3.815392418327217*^9, 
   3.815392477895613*^9}, {3.8153925152824583`*^9, 3.8153925440013237`*^9}, {
   3.8153970862891903`*^9, 3.815397087421465*^9}, {3.815397470813512*^9, 
   3.815397472157357*^9}, {3.815668515277025*^9, 3.815668532116782*^9}, {
   3.81566870914651*^9, 3.815668723233795*^9}, {3.815668760218931*^9, 
   3.8156687638185*^9}, {3.815668796044939*^9, 3.815668850234932*^9}, {
   3.815668932926627*^9, 3.8156689338779593`*^9}, {3.815669162972404*^9, 
   3.815669169734234*^9}, {3.815669262839676*^9, 3.8156692791957817`*^9}, {
   3.815732592413106*^9, 3.815732631704299*^9}, {3.815733323696759*^9, 
   3.815733326809362*^9}, {3.815733362197658*^9, 3.815733366609756*^9}, {
   3.815733538114039*^9, 3.815733540847666*^9}, {3.815733585062224*^9, 
   3.815733661280252*^9}, {3.8157336928065453`*^9, 3.8157337065539503`*^9}, {
   3.815733783256818*^9, 3.815733783988874*^9}, {3.815734059241783*^9, 
   3.8157340694148083`*^9}, {3.815734223922331*^9, 3.815734225429744*^9}, {
   3.81581998912376*^9, 3.815820032637423*^9}, 3.815821619039844*^9, {
   3.815939784178433*^9, 3.815939787282551*^9}, {3.815941013213694*^9, 
   3.8159410386829443`*^9}, {3.815941075359706*^9, 3.815941112429982*^9}, {
   3.81594212982833*^9, 3.8159422455927353`*^9}, {3.815942311817843*^9, 
   3.81594232363653*^9}, {3.815942357479157*^9, 3.8159423722253237`*^9}, {
   3.8159994969066057`*^9, 3.815999573976029*^9}, {3.815999648774682*^9, 
   3.8159996581533937`*^9}, {3.815999741741787*^9, 3.8159997770209417`*^9}, {
   3.81600019358941*^9, 3.816000196455925*^9}, {3.816006015796502*^9, 
   3.816006102039418*^9}, {3.816006446025291*^9, 3.8160064972740173`*^9}, {
   3.816087226529767*^9, 3.816087248642433*^9}, {3.8160925400031433`*^9, 
   3.8160925433508263`*^9}, {3.8162497148567333`*^9, 3.816249723697176*^9}, {
   3.816249768209406*^9, 3.8162498218293056`*^9}, {3.81624985556598*^9, 
   3.8162499439887657`*^9}, {3.8162499742211723`*^9, 3.816250007412992*^9}, {
   3.816250059637*^9, 3.816250183850006*^9}, {3.816250267521611*^9, 
   3.816250299871065*^9}, {3.816250411259365*^9, 3.8162504767035522`*^9}, {
   3.816250510858445*^9, 3.816250706238371*^9}, {3.81625073905486*^9, 
   3.816251009367281*^9}, {3.816251115608274*^9, 3.81625114756875*^9}, {
   3.8162511866084223`*^9, 3.816251243350363*^9}, {3.8162513011616793`*^9, 
   3.816251304478553*^9}, {3.816251398908222*^9, 3.816251405576255*^9}, 
   3.816251447415968*^9, {3.816251564031064*^9, 3.81625158532833*^9}, {
   3.816251759976207*^9, 3.816251964777461*^9}, {3.816252018016325*^9, 
   3.816252022308535*^9}, {3.816252124228087*^9, 3.816252186679789*^9}, {
   3.8162522194146*^9, 3.816252277623763*^9}, {3.816252367136093*^9, 
   3.8162525319569798`*^9}, {3.816253216538548*^9, 3.81625323841113*^9}, 
   3.816253503152416*^9, {3.8162535402859163`*^9, 3.816253545502268*^9}, {
   3.816253699399374*^9, 3.8162537033028193`*^9}, {3.8162580412142344`*^9, 
   3.8162580426114187`*^9}, {3.816258079563507*^9, 3.81625808746451*^9}, {
   3.816438561649394*^9, 3.8164386129769363`*^9}, {3.816438668655712*^9, 
   3.81643874467302*^9}, {3.816439512920495*^9, 3.8164395710172*^9}, {
   3.8164399578280888`*^9, 3.816440007191238*^9}, 3.816440045859729*^9, {
   3.816440345610733*^9, 3.816440346190812*^9}, {3.816440525158699*^9, 
   3.816440565647377*^9}, 3.816451467228421*^9, {3.8164516815510397`*^9, 
   3.816451681684444*^9}, 3.816460840256124*^9, {3.816462377608828*^9, 
   3.8164623804992743`*^9}, {3.816463733534305*^9, 3.816463810797735*^9}, {
   3.8164638438502197`*^9, 3.8164639392531767`*^9}, {3.816464007785224*^9, 
   3.816464059456263*^9}, {3.816464092244907*^9, 3.816464142389288*^9}, 
   3.81646419236593*^9, {3.816464227642207*^9, 3.8164643526923428`*^9}, {
   3.816464444547011*^9, 3.8164644860450487`*^9}, {3.816465918679822*^9, 
   3.816465918844112*^9}, {3.816949684016613*^9, 3.8169497555456753`*^9}, {
   3.816959785304063*^9, 3.816959804431781*^9}, {3.816960006508506*^9, 
   3.816960009026415*^9}, {3.8169601615532513`*^9, 3.81696018898466*^9}, {
   3.816960234089573*^9, 3.816960252107196*^9}, {3.816960295779317*^9, 
   3.8169602960779676`*^9}, {3.816960331856085*^9, 3.816960333157476*^9}, {
   3.81696036622863*^9, 3.816960394434084*^9}, {3.8169604908501*^9, 
   3.816960503958881*^9}, {3.816960597340478*^9, 3.816960597775432*^9}, {
   3.816960653695075*^9, 3.8169606810965843`*^9}, {3.8169607265434113`*^9, 
   3.81696072753817*^9}, {3.816960816340925*^9, 3.816960823881753*^9}, {
   3.816960990487104*^9, 3.8169610067199697`*^9}, {3.816961102154111*^9, 
   3.816961120135111*^9}, {3.816961170615244*^9, 3.816961173856913*^9}, {
   3.816961225445882*^9, 3.816961232735079*^9}, 3.816961429758527*^9, {
   3.816961626170041*^9, 3.81696163448182*^9}, {3.816961695202457*^9, 
   3.8169617007484303`*^9}, {3.816961828826892*^9, 3.816961833209537*^9}, {
   3.816961930739643*^9, 3.816961967933176*^9}, {3.81696206917749*^9, 
   3.816962077109836*^9}, {3.816962214065138*^9, 3.816962215374926*^9}, {
   3.816962955880834*^9, 3.8169629591915627`*^9}, {3.816963283068163*^9, 
   3.816963296820632*^9}, {3.816963459168499*^9, 3.816963511692298*^9}, {
   3.816963654290113*^9, 3.8169636588464518`*^9}, {3.8169638487001057`*^9, 
   3.816963849678244*^9}, {3.816963987830419*^9, 3.8169640112528276`*^9}, {
   3.816964168080703*^9, 3.816964168437828*^9}, {3.816964307727736*^9, 
   3.816964341919298*^9}, {3.816965296973126*^9, 3.816965298793181*^9}, {
   3.816965453171481*^9, 3.816965463823304*^9}, 3.816965769399029*^9, {
   3.81696605286199*^9, 3.816966073705415*^9}, {3.81696611858572*^9, 
   3.816966133416575*^9}, {3.816966294555056*^9, 3.816966300194133*^9}, {
   3.8169664876426563`*^9, 3.816966488432157*^9}, {3.816966786429618*^9, 
   3.816966789836158*^9}, {3.816966888739245*^9, 3.816966897402066*^9}, {
   3.821607063949291*^9, 3.8216070731926928`*^9}, {3.82160735607824*^9, 
   3.8216073819006433`*^9}, {3.821607599345677*^9, 3.821607647035952*^9}, {
   3.821607748860339*^9, 3.821607749037469*^9}, {3.821607976232462*^9, 
   3.821607977133095*^9}, {3.8216094165370703`*^9, 3.821609494525444*^9}, {
   3.821609572776165*^9, 3.821609583006464*^9}, {3.8216096410702753`*^9, 
   3.8216096431836853`*^9}, 3.8216098365517263`*^9, {3.8216099298791018`*^9, 
   3.821610021831441*^9}, {3.821613695072125*^9, 3.8216137535851793`*^9}, {
   3.8220510069678583`*^9, 3.822051007107854*^9}, {3.822053374222113*^9, 
   3.8220533880723953`*^9}, {3.8223534629539347`*^9, 3.822353478129197*^9}, {
   3.822353513668679*^9, 3.822353523946656*^9}, {3.822355126756873*^9, 
   3.822355180676106*^9}, 3.822355475101961*^9, {3.822355512242791*^9, 
   3.8223555401610928`*^9}, {3.822355645449456*^9, 3.822355657211673*^9}, 
   3.8223557830321283`*^9, {3.8223903214107018`*^9, 3.822390426740658*^9}, {
   3.822390470223567*^9, 3.8223905242268057`*^9}, {3.822390786611191*^9, 
   3.822390792488472*^9}, {3.8223909196871147`*^9, 3.822390946787909*^9}, {
   3.822391076205545*^9, 3.8223910770519457`*^9}, {3.822602618378446*^9, 
   3.822602641461217*^9}, {3.822602729782036*^9, 3.822602742809729*^9}, {
   3.822602865489538*^9, 3.822602865609186*^9}, {3.822603344211993*^9, 
   3.822603348745826*^9}, {3.82260343290539*^9, 3.822603440333662*^9}, 
   3.822603656643816*^9, {3.8226040040798893`*^9, 3.822604004271723*^9}, {
   3.822729344308173*^9, 3.8227293502642*^9}, {3.822729412120563*^9, 
   3.822729453541905*^9}, {3.8227295195524883`*^9, 3.822729520234355*^9}, {
   3.822730189469551*^9, 3.822730260676697*^9}, {3.8227303179603043`*^9, 
   3.822730345805587*^9}, {3.822730405015767*^9, 3.822730407964067*^9}, {
   3.8229404488084784`*^9, 3.822940469216967*^9}, {3.822940542589562*^9, 
   3.822940543893683*^9}, {3.822940591232389*^9, 3.8229406234932537`*^9}, {
   3.8229407050352697`*^9, 3.822940727070018*^9}, {3.8237659875648537`*^9, 
   3.823765990215475*^9}, {3.823864356838623*^9, 3.823864371319278*^9}, {
   3.8238645808419647`*^9, 3.823864603015602*^9}, {3.823864637694828*^9, 
   3.823864640053146*^9}, {3.8238714589777*^9, 3.8238714618343678`*^9}, {
   3.823889606561796*^9, 3.823889619226515*^9}, {3.823889668200232*^9, 
   3.823889680554729*^9}, {3.823889712286577*^9, 3.8238898818867197`*^9}, {
   3.823889930882002*^9, 3.8238899715494003`*^9}, {3.823890259099917*^9, 
   3.82389025962226*^9}, {3.823890316237542*^9, 3.823890470724074*^9}, {
   3.823890539983019*^9, 3.8238907390298767`*^9}, {3.823891355544935*^9, 
   3.823891368136695*^9}, {3.8238926801457167`*^9, 3.8238926928202877`*^9}, {
   3.823892950636025*^9, 3.823893003305973*^9}, {3.823893050723868*^9, 
   3.8238930630157747`*^9}, {3.8238931112931137`*^9, 3.823893250037284*^9}, {
   3.823893302390926*^9, 3.823893340034528*^9}, {3.8238936834030037`*^9, 
   3.8238936993820667`*^9}, {3.82389377312534*^9, 3.823893781228168*^9}, {
   3.82389386610317*^9, 3.823893868568039*^9}, {3.823893923433708*^9, 
   3.823893927951036*^9}, {3.8238941541754208`*^9, 3.823894266093157*^9}, {
   3.8238943351404743`*^9, 3.823894376929611*^9}, {3.8238944557250023`*^9, 
   3.8238944796422653`*^9}, {3.8238945491545563`*^9, 3.82389455033526*^9}, {
   3.823894654237671*^9, 3.823894674694394*^9}, {3.823894765435124*^9, 
   3.823894775599791*^9}, {3.823894828573848*^9, 3.8238948808812647`*^9}, {
   3.823894959610849*^9, 3.823895092976955*^9}, {3.82389520383044*^9, 
   3.823895226612961*^9}, {3.823895257884897*^9, 3.8238952947616377`*^9}, 
   3.823895326150433*^9, {3.823895452945382*^9, 3.823895507052842*^9}, {
   3.823895560698263*^9, 3.823895564145196*^9}, {3.823897412024686*^9, 
   3.823897420382565*^9}, {3.823897638023088*^9, 3.823897646316366*^9}, {
   3.823897678994309*^9, 3.8238976803977118`*^9}, {3.82389772558263*^9, 
   3.8238977399995117`*^9}, {3.823897810396143*^9, 3.823897814737956*^9}, {
   3.823897848684493*^9, 3.823897913013056*^9}, {3.823897987837944*^9, 
   3.8238979890314493`*^9}, {3.8238980587638607`*^9, 3.823898071029014*^9}, {
   3.823899235282536*^9, 3.823899335870254*^9}, {3.823899625357658*^9, 
   3.8238996319198923`*^9}, {3.8239417392368526`*^9, 3.82394174038202*^9}, {
   3.823941799612311*^9, 3.8239418039721603`*^9}, {3.823941947461693*^9, 
   3.823941958598382*^9}, {3.8239419905195837`*^9, 3.823941997205957*^9}, {
   3.8239440704915457`*^9, 3.8239441213587723`*^9}, {3.823947389146167*^9, 
   3.823947404523549*^9}, {3.82394746810321*^9, 3.8239475016103983`*^9}, {
   3.8239475697197742`*^9, 3.8239476050588293`*^9}, {3.8239477597430267`*^9, 
   3.823947789910565*^9}, {3.823947831992614*^9, 3.823947857839981*^9}, {
   3.82394790217698*^9, 3.8239479218732023`*^9}, {3.823947972614881*^9, 
   3.823947975312222*^9}, 3.8239480512125483`*^9, {3.824026633289669*^9, 
   3.824026650584016*^9}, {3.824027155813301*^9, 3.824027176978867*^9}, {
   3.824027806335211*^9, 3.824027819165086*^9}, {3.824032698182526*^9, 
   3.824032699597191*^9}, {3.824032758774761*^9, 3.824032759516012*^9}, {
   3.828104511066184*^9, 3.828104638342119*^9}, {3.828104851741493*^9, 
   3.828104856826193*^9}, {3.8281979642515097`*^9, 3.82819796509755*^9}, {
   3.82819829269145*^9, 3.8281982975089817`*^9}, {3.828198370148546*^9, 
   3.828198446183585*^9}, {3.8281985114686747`*^9, 3.828198515452734*^9}, {
   3.8281985942010927`*^9, 3.8281986447317266`*^9}, {3.828198680223216*^9, 
   3.828198681736226*^9}, 3.828198767044326*^9, {3.828199314349242*^9, 
   3.828199315392665*^9}, {3.82829396311585*^9, 3.828293964037382*^9}, {
   3.8282940003931637`*^9, 3.8282940010313883`*^9}, {3.828294080165339*^9, 
   3.828294090801692*^9}, {3.82829470205807*^9, 3.8282947118203487`*^9}, {
   3.828294770122448*^9, 3.828294791751844*^9}, {3.828294886494628*^9, 
   3.8282949260232973`*^9}, 3.82829505471421*^9, {3.8282951636730556`*^9, 
   3.8282951741421957`*^9}, {3.828295204678344*^9, 3.8282952062049313`*^9}, 
   3.8282953324598837`*^9, {3.828296252100973*^9, 3.828296296294094*^9}, {
   3.828296367893737*^9, 3.82829639131411*^9}, {3.8282965692862663`*^9, 
   3.828296572035451*^9}, {3.828296715739395*^9, 3.828296716607092*^9}, {
   3.828297345449649*^9, 3.828297353109281*^9}, {3.828298053967472*^9, 
   3.828298066665545*^9}, {3.828301014549518*^9, 3.8283010609896803`*^9}, {
   3.82830109615399*^9, 3.828301101895357*^9}, {3.828301494645155*^9, 
   3.828301536755548*^9}, {3.8283015947091513`*^9, 3.8283016035790777`*^9}, {
   3.828302383929303*^9, 3.828302569263644*^9}, {3.828302736697968*^9, 
   3.828302746913927*^9}, {3.828305098924572*^9, 3.828305163829151*^9}, {
   3.828305271155265*^9, 3.828305288526465*^9}, {3.828305805459207*^9, 
   3.828305820924488*^9}, {3.828306064390472*^9, 3.8283060666809673`*^9}, {
   3.828306145287263*^9, 3.828306199346249*^9}, {3.82830632852483*^9, 
   3.828306337932434*^9}, {3.828358999020988*^9, 3.828359004085782*^9}, {
   3.828359041704361*^9, 3.8283591242530947`*^9}, {3.828359376737975*^9, 
   3.828359403114697*^9}, {3.828366269298356*^9, 3.828366279356089*^9}, {
   3.828366983182706*^9, 3.828367022221837*^9}, {3.828367185631315*^9, 
   3.828367411083967*^9}, {3.8283674712570753`*^9, 3.8283674841169767`*^9}, {
   3.828367546245616*^9, 3.828367555771406*^9}, 3.828367619806254*^9, {
   3.828367961451735*^9, 3.828367962243513*^9}, {3.82836834328852*^9, 
   3.82836834352689*^9}, {3.82836842638974*^9, 3.8283684380884027`*^9}, {
   3.828369195196396*^9, 3.828369206853509*^9}, {3.828369292650271*^9, 
   3.828369314898549*^9}, {3.828945576475781*^9, 3.828945776929953*^9}, {
   3.828945871833476*^9, 3.828946106770597*^9}, {3.828946161667794*^9, 
   3.828946169094646*^9}, {3.8289462098356943`*^9, 3.828946243166606*^9}, {
   3.8289462753294764`*^9, 3.828946409145067*^9}, {3.828946462011156*^9, 
   3.828946476107051*^9}, {3.828946536297274*^9, 3.828946556070912*^9}, {
   3.828946626416449*^9, 3.82894664112614*^9}, {3.828946725388762*^9, 
   3.828946730797577*^9}, {3.828946773684514*^9, 3.8289467892763166`*^9}, {
   3.828946819485114*^9, 3.8289468658580627`*^9}, {3.828946905414281*^9, 
   3.8289469243949537`*^9}, {3.828947575074342*^9, 3.8289475885567293`*^9}, {
   3.828947714441823*^9, 3.828947737640747*^9}, {3.828947884881447*^9, 
   3.8289478977873507`*^9}, {3.828948012031681*^9, 3.828948041068253*^9}, {
   3.82894812405846*^9, 3.828948126907505*^9}, {3.8289482391198683`*^9, 
   3.828948239280851*^9}, {3.8289482832442923`*^9, 3.828948289522873*^9}, {
   3.82894992781817*^9, 3.828949934334681*^9}, {3.828949983187155*^9, 
   3.828950002769068*^9}, {3.8289500663140087`*^9, 3.8289502564040203`*^9}, {
   3.828950581538435*^9, 3.828950630797512*^9}, 3.8289507024130096`*^9, {
   3.82895085439296*^9, 3.828950883951229*^9}, {3.8289509268725033`*^9, 
   3.8289509274413548`*^9}, {3.828950972257848*^9, 3.828950974899641*^9}, {
   3.828951051543549*^9, 3.828951055244594*^9}, {3.828951134467519*^9, 
   3.8289511407334023`*^9}, {3.82895122545947*^9, 3.8289512600725517`*^9}, {
   3.82895136952466*^9, 3.828951384374556*^9}, {3.82895141648873*^9, 
   3.828951438851098*^9}, {3.828951469373123*^9, 3.828951482470241*^9}, 
   3.8289515514614973`*^9, {3.828951600447258*^9, 3.828951601574101*^9}, {
   3.82895164452913*^9, 3.82895165683778*^9}, {3.828951695148674*^9, 
   3.828951711184175*^9}, {3.828951757664978*^9, 3.828951767839513*^9}, {
   3.8289518012871*^9, 3.828951817406691*^9}, {3.828951894223084*^9, 
   3.828951905468603*^9}, {3.828951949223135*^9, 3.8289519527661448`*^9}, 
   3.828952076737167*^9, 3.828952110619252*^9, {3.828952145861762*^9, 
   3.828952173869445*^9}, {3.828952220840543*^9, 3.828952228282921*^9}, 
   3.828952402473205*^9, 3.82895269981752*^9, {3.82895273726939*^9, 
   3.828952776990007*^9}, {3.82895281897416*^9, 3.828952832633511*^9}, 
   3.828953105569117*^9, {3.828955061207717*^9, 3.828955088767161*^9}, {
   3.829222266757332*^9, 3.8292222874791527`*^9}, 3.829222323901868*^9, {
   3.829222387730673*^9, 3.829222397647585*^9}, {3.829222488576832*^9, 
   3.829222504896562*^9}, {3.829222572857939*^9, 3.829222582395411*^9}, {
   3.829222649808434*^9, 3.8292226666944427`*^9}, {3.829222726569944*^9, 
   3.829222726706357*^9}, 3.829223134108343*^9, {3.829223350473996*^9, 
   3.829223357060523*^9}, {3.8292240253212337`*^9, 3.8292240284893703`*^9}, {
   3.829224071492749*^9, 3.82922407266678*^9}, {3.829224109634898*^9, 
   3.829224180122665*^9}, {3.8292243652407007`*^9, 3.8292244102696342`*^9}, {
   3.8293310403472443`*^9, 3.829331047576611*^9}, {3.829331079829011*^9, 
   3.829331099404031*^9}, {3.82933121638476*^9, 3.829331217089396*^9}, {
   3.829331273769651*^9, 3.8293313282218227`*^9}, {3.829331386330661*^9, 
   3.829331402902047*^9}, {3.829331469191833*^9, 3.8293315169159307`*^9}, {
   3.829331606505422*^9, 3.829331609081061*^9}, {3.8294775037433662`*^9, 
   3.8294775534831333`*^9}, {3.829477657953416*^9, 3.82947765805326*^9}, {
   3.829737634334482*^9, 3.829737871115568*^9}, {3.829738046142969*^9, 
   3.829738053292673*^9}, {3.829738296151369*^9, 3.8297383468470507`*^9}, {
   3.829738445351804*^9, 3.8297385462674637`*^9}, {3.829738609811583*^9, 
   3.829738644477769*^9}, {3.829738677263679*^9, 3.829738716132491*^9}, {
   3.829739203326779*^9, 3.829739212777852*^9}, {3.829739268519719*^9, 
   3.829739305579789*^9}, {3.829739400327161*^9, 3.82973949627379*^9}, {
   3.829739791218375*^9, 3.8297398353403177`*^9}, {3.829740011525134*^9, 
   3.8297400416396093`*^9}, {3.829740222226666*^9, 3.8297402587232122`*^9}, {
   3.82974031131833*^9, 3.829740324425252*^9}, {3.8297404359193077`*^9, 
   3.829740442726183*^9}, {3.8297405553617973`*^9, 3.829740556619841*^9}, {
   3.829740682424028*^9, 3.829740699912159*^9}, {3.82974091850525*^9, 
   3.829740941638262*^9}, {3.8297409815584717`*^9, 3.829740991686823*^9}, {
   3.829741157474365*^9, 3.829741163227227*^9}, 3.8297412675508127`*^9, {
   3.829741443155019*^9, 3.829741449390933*^9}, {3.8297416122167664`*^9, 
   3.829741630164008*^9}, {3.82974186173628*^9, 3.829741878006186*^9}, {
   3.829741943924247*^9, 3.829741944431229*^9}, {3.829742000596568*^9, 
   3.829742007304392*^9}, {3.829742137359668*^9, 3.8297421450451307`*^9}, {
   3.82974467792871*^9, 3.829744691317644*^9}, {3.829744784191679*^9, 
   3.82974483777873*^9}, {3.8297451257723293`*^9, 3.829745133186235*^9}, {
   3.82974523014861*^9, 3.829745249426092*^9}, {3.829745295827797*^9, 
   3.8297452997076387`*^9}, {3.8297454616546583`*^9, 3.829745462881064*^9}, {
   3.829745578356908*^9, 3.829745618356428*^9}, {3.829745717010541*^9, 
   3.82974572147502*^9}, {3.829745810579473*^9, 3.82974583086217*^9}, {
   3.829746098238121*^9, 3.8297461025404387`*^9}, {3.8297462328843403`*^9, 
   3.829746241476783*^9}, {3.8297463736052732`*^9, 3.8297464421188717`*^9}, {
   3.829746611522348*^9, 3.829746630355397*^9}, 3.8297466995936832`*^9, {
   3.829747228283783*^9, 3.829747321891818*^9}, 3.829747425343828*^9, {
   3.8297475716195374`*^9, 3.829747583844393*^9}, {3.8297476792834167`*^9, 
   3.829747712351494*^9}, {3.829747863843848*^9, 3.8297479084753428`*^9}, {
   3.829747973391163*^9, 3.8297480774048233`*^9}, {3.82974813811446*^9, 
   3.829748164050873*^9}, {3.8297481940691023`*^9, 3.829748301454563*^9}, {
   3.82974889795397*^9, 3.829748900981699*^9}, {3.829749064221004*^9, 
   3.829749071513989*^9}, {3.829749122170382*^9, 3.829749154229519*^9}, {
   3.829749384763904*^9, 3.8297494169499702`*^9}, 3.829749739947324*^9, {
   3.829751808240726*^9, 3.8297518084576197`*^9}, {3.829755645043208*^9, 
   3.829755671057373*^9}, {3.829756073217217*^9, 3.829756083776176*^9}, {
   3.829756203977153*^9, 3.82975620404589*^9}, {3.8297563184938803`*^9, 
   3.829756323118189*^9}, {3.829756447804332*^9, 3.829756530078862*^9}, {
   3.829756561393508*^9, 3.829756573173189*^9}, {3.829756703185257*^9, 
   3.829756714662819*^9}, {3.8297567648612823`*^9, 3.82975679405095*^9}, {
   3.829756958048401*^9, 3.829756984861965*^9}, {3.8297570208285627`*^9, 
   3.829757024161228*^9}, {3.8297571527974033`*^9, 3.829757180290359*^9}, {
   3.829757312875321*^9, 3.8297573412419977`*^9}, {3.830086697450829*^9, 
   3.8300867635129213`*^9}, {3.830087349983633*^9, 3.830087350635784*^9}, {
   3.830087410551423*^9, 3.830087466056034*^9}, {3.830087506793503*^9, 
   3.830087530752532*^9}, {3.830087636659635*^9, 3.830087694430017*^9}, {
   3.8300877882854033`*^9, 3.830087805427925*^9}, 3.830087907029985*^9, 
   3.830087983986638*^9, {3.830112051444558*^9, 3.830112054317116*^9}, {
   3.830112116974297*^9, 3.830112120056673*^9}, {3.8301121988344316`*^9, 
   3.830112220263294*^9}, 3.830112348979258*^9, {3.830112454970437*^9, 
   3.830112466821623*^9}, {3.8301125759487743`*^9, 3.830112588995552*^9}, {
   3.8301126203101873`*^9, 3.830112622455023*^9}, {3.8301127318795547`*^9, 
   3.830112757322783*^9}, {3.830112811052567*^9, 3.830112898473115*^9}, {
   3.830113002268765*^9, 3.830113045469206*^9}, {3.8301130975819263`*^9, 
   3.830113120220068*^9}, {3.830113161223939*^9, 3.8301131854646807`*^9}, {
   3.830415968102189*^9, 3.8304159708018208`*^9}, {3.8304177971883087`*^9, 
   3.830417800621674*^9}, {3.830417860380824*^9, 3.830417867659587*^9}, {
   3.831459247108519*^9, 3.831459251484914*^9}, {3.831459511237279*^9, 
   3.83145951677358*^9}, {3.831459577838149*^9, 3.83145958459944*^9}, {
   3.831459617166361*^9, 3.8314596420857553`*^9}, {3.831459725928245*^9, 
   3.831459826555949*^9}, {3.831459880837851*^9, 3.831459884522204*^9}, {
   3.831459940187334*^9, 3.831460071714039*^9}, {3.831460383088449*^9, 
   3.831460405024659*^9}, {3.831460439813548*^9, 3.8314604836423483`*^9}, {
   3.8314606140557203`*^9, 3.831460627449621*^9}, {3.831460699809019*^9, 
   3.831460738641782*^9}, {3.8314609809419193`*^9, 3.831461015288094*^9}, 
   3.8314612526397753`*^9, 3.831461283410564*^9, {3.8314619872202387`*^9, 
   3.831462034947894*^9}, {3.83146231782502*^9, 3.831462368636252*^9}, {
   3.8314624008554707`*^9, 3.831462450216228*^9}, {3.831634599031227*^9, 
   3.831634604064837*^9}, {3.831634749456726*^9, 3.83163475696152*^9}, {
   3.831634795408421*^9, 3.8316347972588997`*^9}, {3.8316348356291933`*^9, 
   3.831634835929044*^9}, {3.831635108345455*^9, 3.831635112806913*^9}, {
   3.8316373409474983`*^9, 3.831637399939439*^9}, {3.831637446360806*^9, 
   3.8316374769968433`*^9}, {3.831637554063117*^9, 3.8316376103594913`*^9}, {
   3.831637675240224*^9, 3.831637683840622*^9}, {3.8316377379463882`*^9, 
   3.8316377382494507`*^9}, {3.831639045306323*^9, 3.83163919794279*^9}, {
   3.831639403136567*^9, 3.831639404474143*^9}, {3.831639484887184*^9, 
   3.831639491749095*^9}, {3.831639784570326*^9, 3.8316398237975388`*^9}, {
   3.831639860441852*^9, 3.83163995752112*^9}, {3.83164000288888*^9, 
   3.831640008697566*^9}, {3.831640096298279*^9, 3.831640111232291*^9}, {
   3.831640199701442*^9, 3.831640230651565*^9}, {3.8316403295288877`*^9, 
   3.8316403451941566`*^9}, 3.831640765169574*^9, {3.831640815628952*^9, 
   3.831640845168331*^9}, {3.8316408772098627`*^9, 3.831640892156781*^9}, {
   3.831640944883885*^9, 3.831640962962422*^9}, {3.8316410222924843`*^9, 
   3.8316410245764647`*^9}, {3.831641084735634*^9, 3.831641093615376*^9}, {
   3.831641129410839*^9, 3.831641132795904*^9}, {3.8316411856042337`*^9, 
   3.831641185793438*^9}, {3.831641477347439*^9, 3.831641575188216*^9}, {
   3.831641680621853*^9, 3.831641841010488*^9}, {3.831641930387998*^9, 
   3.831641983998743*^9}, {3.831642022391082*^9, 3.831642069198667*^9}, {
   3.83164211554574*^9, 3.831642118958539*^9}, {3.831642389986259*^9, 
   3.8316424044599733`*^9}, {3.831642451196607*^9, 3.831642462559916*^9}, {
   3.831642526225349*^9, 3.831642606353426*^9}, {3.8316621939227657`*^9, 
   3.831662222954262*^9}, {3.8316624453702593`*^9, 3.831662479495145*^9}, {
   3.831662616446281*^9, 3.831662617948737*^9}, {3.831662665889701*^9, 
   3.8316626666347637`*^9}, {3.835164176007341*^9, 3.8351642110999727`*^9}, {
   3.8363640168301697`*^9, 3.836364025798687*^9}, {3.8363643550782146`*^9, 
   3.836364379404792*^9}, {3.836364430211162*^9, 3.836364496435313*^9}, {
   3.8363645307624083`*^9, 3.836364552318894*^9}, {3.836364586072769*^9, 
   3.836364643202216*^9}, {3.836364698070157*^9, 3.836364771825304*^9}, {
   3.836364806442981*^9, 3.836364834600816*^9}, {3.836365308159606*^9, 
   3.836365311013987*^9}, {3.836365543249256*^9, 3.836365544027461*^9}, {
   3.836366500284216*^9, 3.836366518119814*^9}, {3.83636655227489*^9, 
   3.83636656508807*^9}, {3.836366739746305*^9, 3.83636673992772*^9}, {
   3.836391490156893*^9, 3.836391490241498*^9}, {3.8365408862411222`*^9, 
   3.83654089814441*^9}, {3.8365410756283817`*^9, 3.8365412302435513`*^9}, {
   3.836541520206194*^9, 3.836541731373046*^9}, {3.8365417962157087`*^9, 
   3.836541829661779*^9}, {3.836541882766893*^9, 3.836541914801497*^9}, {
   3.836541962465191*^9, 3.836541978039226*^9}, {3.8365420276270237`*^9, 
   3.8365420870725803`*^9}, {3.83654217858914*^9, 3.836542533501709*^9}, {
   3.836542898532134*^9, 3.836542901302967*^9}, {3.836543026862754*^9, 
   3.836543053071784*^9}, {3.836543083215106*^9, 3.836543120048602*^9}, {
   3.836543181338676*^9, 3.836543203360993*^9}, {3.8365432592294407`*^9, 
   3.8365433339967623`*^9}, {3.836543398741749*^9, 3.8365435227177362`*^9}, {
   3.836551752666922*^9, 3.83655175428493*^9}, 3.836622803617949*^9, {
   3.836623272592448*^9, 3.8366232766957197`*^9}, {3.83662331590427*^9, 
   3.8366233198154497`*^9}, 3.836623460537257*^9, {3.8366235205948763`*^9, 
   3.8366235784111137`*^9}, {3.836623629220454*^9, 3.836623670917136*^9}, {
   3.836623705152021*^9, 3.836623826699442*^9}, {3.836623900452552*^9, 
   3.836623983224848*^9}, {3.836624323306182*^9, 3.83662435922091*^9}, {
   3.836624406800508*^9, 3.836624480011796*^9}, {3.836624521068755*^9, 
   3.836624550300585*^9}, {3.836624833401568*^9, 3.836624836008308*^9}, 
   3.836626317299511*^9, {3.83662647700413*^9, 3.83662648009441*^9}, {
   3.836626841314582*^9, 3.836626888734378*^9}, {3.836626929121587*^9, 
   3.8366269425868673`*^9}, {3.8366275432235394`*^9, 3.836627549371566*^9}, {
   3.836627654327758*^9, 3.8366276784077*^9}, {3.836627826166717*^9, 
   3.836627855214389*^9}, {3.836627941213244*^9, 3.836627973660246*^9}, {
   3.836628153734161*^9, 3.836628161320526*^9}, {3.8366283825146112`*^9, 
   3.836628389733663*^9}, {3.836628542730811*^9, 3.836628604067762*^9}, {
   3.8366287111143637`*^9, 3.836628712921383*^9}, {3.8366287800121737`*^9, 
   3.836628793754105*^9}, {3.836628848995802*^9, 3.8366289672350283`*^9}, {
   3.8366291321593857`*^9, 3.8366291463241158`*^9}, {3.836629187695856*^9, 
   3.836629223191957*^9}, {3.8366293108515997`*^9, 3.836629431311615*^9}, {
   3.836629475344492*^9, 3.836629488404551*^9}, {3.836631115786481*^9, 
   3.836631154265418*^9}, 3.836631293076852*^9, {3.8366317699787483`*^9, 
   3.836631770034799*^9}, {3.836635681890955*^9, 3.836635721096706*^9}, {
   3.83663576564886*^9, 3.83663583589097*^9}, {3.836635910150375*^9, 
   3.836635911761544*^9}, {3.8366361766282797`*^9, 3.836636184791521*^9}, {
   3.836636234670844*^9, 3.836636238574542*^9}, {3.836636562158415*^9, 
   3.836636596967792*^9}, {3.836648308567317*^9, 3.836648366427854*^9}, {
   3.836648974602169*^9, 3.836648983031147*^9}, {3.8366490288356524`*^9, 
   3.83664906893071*^9}, {3.836653001598319*^9, 3.836653003772736*^9}, 
   3.836653138446677*^9, {3.8367102417596073`*^9, 3.836710275716401*^9}, {
   3.836710309386395*^9, 3.836710400086177*^9}, {3.836710444914316*^9, 
   3.836710477436462*^9}, {3.8367107237613773`*^9, 3.836710724424594*^9}, {
   3.836710810532117*^9, 3.836710816183869*^9}, {3.83671084853349*^9, 
   3.836710862707123*^9}, {3.836710914628929*^9, 3.836710960914225*^9}, 
   3.836746980677085*^9, {3.836747217955583*^9, 3.836747253822323*^9}, {
   3.836747286009947*^9, 3.836747377440084*^9}, {3.836747415691103*^9, 
   3.8367474264699183`*^9}, {3.836747458246022*^9, 3.836747486860281*^9}, {
   3.836747716154889*^9, 3.836747739560494*^9}, {3.836748515948515*^9, 
   3.836748527240662*^9}, {3.8367485658525267`*^9, 3.83674858631601*^9}, {
   3.83674884211413*^9, 3.8367488515126*^9}, {3.836748975091049*^9, 
   3.8367489789114723`*^9}, 3.83680890142257*^9, {3.836808932941225*^9, 
   3.8368089414849787`*^9}, {3.8368150401341763`*^9, 3.836815041328*^9}, {
   3.836816029764696*^9, 3.836816054739973*^9}, {3.836817759317355*^9, 
   3.83681776318521*^9}, {3.836902124342411*^9, 3.83690223177479*^9}, {
   3.836902264372983*^9, 3.836902466990847*^9}, {3.836902792947496*^9, 
   3.836902915257367*^9}, {3.836902969256234*^9, 3.836902992214406*^9}, {
   3.836903277616664*^9, 3.836903284901989*^9}, {3.836903322766337*^9, 
   3.83690340131465*^9}, {3.836903831230298*^9, 3.8369038319173*^9}, {
   3.8369039745971212`*^9, 3.8369040088700943`*^9}, {3.836904149466234*^9, 
   3.836904149751446*^9}, {3.836904194096943*^9, 3.83690422748988*^9}, {
   3.8369043765307713`*^9, 3.836904378765489*^9}, {3.8369044380892057`*^9, 
   3.8369044407938957`*^9}, {3.836904492554579*^9, 3.836904497617996*^9}, {
   3.836904539910688*^9, 3.836904595415567*^9}, 3.8369047084448643`*^9, {
   3.836904804993073*^9, 3.836904822300914*^9}, {3.836904934343074*^9, 
   3.836904976919116*^9}, {3.8369050124453087`*^9, 3.836905014960546*^9}, {
   3.836905156186281*^9, 3.8369051621877337`*^9}, {3.8369061925674543`*^9, 
   3.836906200855568*^9}, {3.836906586983878*^9, 3.836906587383799*^9}, {
   3.836906651253359*^9, 3.83690665308127*^9}, {3.8369071240429583`*^9, 
   3.836907151180387*^9}, {3.8383827310173492`*^9, 3.8383827316652718`*^9}, {
   3.838382797541563*^9, 3.838382798591467*^9}, {3.83838284333298*^9, 
   3.838382847652206*^9}, 3.838447467415547*^9, {3.839585674176548*^9, 
   3.839585674310513*^9}, {3.840257349610183*^9, 3.840257437312415*^9}, {
   3.840257478593546*^9, 3.840257639544276*^9}, {3.840258367106018*^9, 
   3.8402584195858088`*^9}, {3.8462296256012*^9, 
   3.846229627597611*^9}},ExpressionUUID->"a0add7bf-20b0-46a8-9f1e-\
72b3e99126c5"]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1368, 735},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification:>1.15 Inherited,
FrontEndVersion->"12.3 for Linux x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0fbde26b-c0bc-484f-9f20-3cc67f10b0cf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 819032, 16748, 77443, "Input",ExpressionUUID->"a0add7bf-20b0-46a8-9f1e-72b3e99126c5",
 InitializationCell->True]
}
]
*)

